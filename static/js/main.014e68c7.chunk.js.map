{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","components/TabBuilder/TabBuilder.jsx","components/items/Slider/SliderTab.jsx","components/items/StaticText/StaticText.js","components/items/NormalCurve/NormalCurve.jsx","actions/dataActions.js","components/items/NormalCurve/NormalCurveResearch.jsx","components/items/Threshold/Histogram.js","components/items/Threshold/HistogramResearch.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartStudyData.js","components/Study/PartExptData.js","components/Study/BuildExpt.jsx","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","colData","colsData","colNames","fileName","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","TabBuilder","selectRef","React","createRef","className","name","id","ref","this","value","onClick","build","current","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","keyRef","checked","minVal","Number","maxVal","handleChange","bind","onChange","appendToKeysArr","delete","count","getCount","e","setState","target","q","objType","nameType","csvColName","qNum","onInput","defaultValue","StaticText","cols","rows","NormalCurve","rectRef","svgRef","areaRef","lengthRef","startPos1Ref","startPos2Ref","graph1keyRef","graph2keyRef","colNumValRef","radiusRef","ticksRef","checkBoxRef","questionKeyRef","legendKey1Ref","legendKey2Ref","dotReturn","curveArea","triMouseDown","triDrag","triUp","lengthSubmit","toggleXVals","alterStartPos1","alterStartPos2","svgColReturn","establishStateData","updateRadius","updateTicks","checkChange","data","unitHeight","circRad","len1","len2","distancing","height","Math","ceil","colNumInit","internalLength","edgeCol","edgeLength","ceilDist","length","axisStart","axisStartCol","axisWidth","axisEndCol","axisEnd","triCent1","triCent2","triCentCol1","triCentCol2","variance1","abs","variance2","startPos1","distancing1","col11","col12","colNumVal","tickNum","tickDist","rangeVal","startPos2","distancing2","col21","col22","edgeLim","axisLength","parseInt","x","y","isDown","rectX","down","svgWidth","svgHeight","svgX","colValHeiS","colValHeiS2","mousePointerRange","triDown","colLim1","round","colLim2","overlapVals","colNum","lowVal","showCoors","xPos","yPos","xPosOrig","CX","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","dragger","distFromCent","variance","svg","pt","createSVGPoint","clientX","svgP","matrixTransform","getScreenCTM","inverse","preventDefault","col","colRelative","endCol","num","svgPre","ptPre","svgPPre","prevState","svgColPlacement","innerHTML","key","changeJSON","newLength","console","log","newPos","radius","newData","newTickCount","colVal","onMouseMove","onMouseUp","width","Array","keys","map","row","dotReturn2","tick","textAnchor","points","onMouseDown","class","style","backgroundColor","updateColVal","for","getStudyInfo","which_database","which_study","get","then","res","experiments","getColData","col_name","getColNames","NormalCurveResearch","handleDrop","handleSelectedFile","dataReceived","fileNames","setFileNames","fileChosen","username","content","saveFile","acceptedFiles","file","forEach","dataFlowColData","filter","item","itemType","includes","alert","reader","FileReader","onabort","onerror","onload","fileText","result","jsonData","JSON","parse","files","readAsText","fileContent","unshift","fileOptions","onDrop","accept","getRootProps","getInputProps","Histogram","graphRef","sliderPos","drawChart","d3","append","attr","selectAll","enter","d","i","text","vertAlign","position","margin","top","step","HistogramResearch","histogramFiles","TabList","builderFunction","tabDefine","arr","children","push","tab","toString","curOutput","output","newCount","complete","deleted","exptName","myRef","submitRef","nameRef","outputCreate","checkOutput","Object","newDelete","newFile","concat","obj","int","elem","lowNum","isNaN","highNum","index","indexOf","exptItem","finalObj","match","params","sendFile","put","response","window","location","reload","catch","error","studyLink","method","dataFlowDBInfo","dataFlowFileName","post","Navbar","userIsLoggedIn","Landing","HomePage","href","Register","onSubmit","newUser","password","password2","registerUser","history","nextProps","noValidate","classnames","invalid","userExists","userData","err","withRouter","Login","loginUser","userNotFound","pwdIncorrect","setItem","jwt_decode","Dashboard","onLogoutClick","onAddStudy","getDBInfo","link","addStudyName","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployExpts","changeState","onDeploy","split","deployed","processColNames","expt","condition","surveyLink","exptDataLink","partExptDataLink","exptPartLink","previewLink","dbLink","currentTarget","conditionInfo","linkInfo","createExptCol","expt_name","exptNames","difference","color","exptBuilderLink","partStudyDataLink","getExptNames","deploy","which_expt","saveAddInfo","infoType","info","ExptConfigs","thisExpt","exptObj","find","JSONString","stringify","showExptData","PartStudyData","makeArr","showJSONData","getIndex","partColNames","colName","getColsData","flattendObj","flattenObject","keyName","newKey","k","oldKey","substr","renameKey","ids","participantID","qKeys","ele","prevData","doc","newEle","flattenObj","line","allIndex","str","element","document","createElement","Blob","URL","createObjectURL","download","body","appendChild","click","file_name","filename","PartExptData","arrToProcess","BuildExpt","numOfItems","showItems","itemToSelect","preBuild","showItem","toggleShowItems","inputNumItems","inputs","jwtToken","currentTime","Date","now","exp","App","basename","NavBar","exact","path","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.014e68c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \r\n// if the user is already logged in \r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","// types are how actions communicate with reducers\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\r\nexport const GET_DB_INFO = \"GET_DB_INFO\";\r\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\r\nexport const GET_COL_DATA = \"GET_COL_DATA\";\r\nexport const GET_COLS_DATA = \"GET_COLS_DATA\";\r\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";\r\n\r\nexport const STORE_FILENAME = \"STORE_FILENAME\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const SEND_FILE = \"SEND_FILE\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\"); \r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default: return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: return action.payload;\r\n        default: return state;\r\n    }\r\n}","import {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COLS_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  studyName: '',\r\n  dbInfo: [],\r\n  studyInfo: [],\r\n  colData: [],\r\n  colsData: [],\r\n  colNames: [],\r\n  // files: []\r\n  fileName: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_STUDY_NAME:\r\n      return {\r\n        ...state,\r\n        studyName: action.payload\r\n      };\r\n    case GET_DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_STUDY_INFO:\r\n      return {\r\n        ...state,\r\n        studyInfo: action.payload\r\n      };\r\n    case GET_COL_DATA:\r\n      return {\r\n        ...state,\r\n        colData: action.payload\r\n      };\r\n    case GET_COLS_DATA:\r\n      return {\r\n        ...state,\r\n        colsData: [...state.colsData, action.payload]\r\n      };\r\n    case GET_COL_NAMES:\r\n      return {\r\n        ...state,\r\n        colNames: action.payload\r\n      };\r\n    // case STORE_FILE:\r\n    //   return {\r\n    //     ...state,\r\n    //     files: [...state.files, action.payload]\r\n    //   };\r\n    case STORE_FILENAME:\r\n      return {\r\n        ...state,\r\n        fileName: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport dataReducer from \"./dataReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  dataFlow: dataReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nclass TabBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  // ###TODO###: add options here when you add your experiment type\r\n  render() {\r\n    return (\r\n      <div className=\"unit\">\r\n        <span>Choose what element to add next</span><br />\r\n        <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\r\n          <option value=\"slider\">Slider</option>\r\n          <option value=\"static-text\">Static Text</option>\r\n          <option value=\"normal-curve\">Normal Curve</option>\r\n          <option value=\"threshold\">Threshold</option>\r\n        </select>\r\n        <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabBuilder;","import React, { Component } from 'react';\r\nimport './SliderTab.css';\r\n\r\nclass SliderTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sliderRef = React.createRef();\r\n    this.outputRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.state = { min: 1, max: 100 }\r\n    this.keyRef = React.createRef();\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  appendToKeysArr(objType, nameType, csvColName, count) {\r\n    this.props.appendToKeysArr(objType, nameType, csvColName, count);\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    return (\r\n      <form className=\"unit\">\r\n        <br/>\r\n        Question #{qNum} \r\n        <br/><br/>\r\n        <p>Enter your question below:\r\n        <br/>\r\n        <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} ref={this.qRef} type=\"text\" /></p><br/>\r\n        {this.state.minVal}\r\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\r\n        {this.state.maxVal} <br/>\r\n        <p>Minimum: \r\n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n          ref={this.minRef} type=\"text\" \r\n          name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p><br/>\r\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\r\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n          ref={this.maxRef} type=\"text\" \r\n          name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p>\r\n        <br/><br/>\r\n        What csv column name do you want to assign to this question? <br/>\r\n        <b>Please use letters only, and the name must be unique.</b> <br/>\r\n        Recommedation: include your experiment name, this question number \r\n        ({qNum}), and the question type (slider)\r\n        <br/>\r\n        <input type=\"text\" ref={this.keyRef} \r\n          onInput={() => {\r\n            // this.appendToKeysArr(\r\n            //   \"csvColNames\", \r\n            //   \"slider-question-key\", \r\n            //   this.keyRef.current.value, \r\n            //   this.props.count);\r\n            this.handleChange(\"slider-question-key\", this.keyRef.current.value, this.props.count)\r\n            // this.appendToKeysArr(\r\n            //   \"keyValuePairs\",\r\n              \r\n            // )\r\n          }}/>\r\n        <br/><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderTab;","import React, { Component } from 'react';\r\n\r\nclass StaticText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.qRef = React.createRef();\r\n    this.keyRef = React.createRef();\r\n\r\n    this.state = {\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    return (\r\n      <form className=\"unit\">\r\n        <br/>\r\n        Question #{qNum} \r\n        <br/>\r\n        Enter your static text below: <br/>\r\n        <textarea cols=\"60\" rows=\"10\" ref={this.qRef}\r\n          onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\r\n        </textarea>\r\n        <br/><br/>\r\n        What csv column name do you want to assign to this question? <br/>\r\n        <b>Please use letters only, and the name must be unique.</b> <br/>\r\n        Recommedation: include your experiment name, this question number \r\n        ({qNum}), and the question type (staticText)\r\n        <br/>\r\n        <input type=\"text\" ref={this.keyRef} \r\n          onInput={() => this.handleChange(\"static-text-key\", this.keyRef.current.value, this.props.count)}/>\r\n        \r\n        <br/><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StaticText;","import React, { Component } from 'react';\r\nimport './NormalCurve.css';\r\n\r\nclass NormalCurve extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.sliderRef = React.createRef();\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n    this.lengthRef = React.createRef();\r\n    this.startPos1Ref = React.createRef();\r\n    this.startPos2Ref = React.createRef();\r\n    this.graph1keyRef = React.createRef();\r\n    this.graph2keyRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.colNumValRef = React.createRef();\r\n    this.radiusRef = React.createRef();\r\n    this.ticksRef = React.createRef();\r\n    this.checkBoxRef = React.createRef();\r\n    this.questionKeyRef = React.createRef();\r\n    this.legendKey1Ref = React.createRef();\r\n    this.legendKey2Ref = React.createRef();\r\n\r\n    this.dotReturn = this.dotReturn.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.triMouseDown = this.triMouseDown.bind(this);\r\n    this.triDrag = this.triDrag.bind(this);\r\n    this.triUp = this.triUp.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.lengthSubmit = this.lengthSubmit.bind(this);\r\n    this.toggleXVals = this.toggleXVals.bind(this);\r\n    this.alterStartPos1 = this.alterStartPos1.bind(this);\r\n    this.alterStartPos2 = this.alterStartPos2.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    this.establishStateData = this.establishStateData.bind(this);\r\n    this.updateRadius = this.updateRadius.bind(this);\r\n    this.updateTicks = this.updateTicks.bind(this);\r\n    this.checkChange = this.checkChange.bind(this);\r\n\r\n    this.state = this.establishStateData(this.props.data);\r\n  }\r\n\r\n  establishStateData(data) {\r\n    // console.log(\"establishStateData()\", new Date());\r\n    const unitHeight = data[\"max-height\"];\r\n    const circRad = data[\"circle-radius\"];\r\n    const len1 = data[\"len1\"];\r\n    const len2 = data[\"len2\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n\r\n    const colNumInit = data[\"axis-length\"];\r\n    const internalLength = colNumInit * distancing;\r\n    const edgeCol = Math.ceil(Math.max(len1, len2) / 2);\r\n    const edgeLength = Math.max(len1, len2) * distancing;\r\n\r\n    const ceilDist = height - 50;\r\n    const length = edgeLength + internalLength;\r\n    const colNum = Math.ceil(length / distancing);\r\n\r\n    const axisStart = Math.ceil(edgeLength / 2);\r\n    const axisStartCol = edgeCol;\r\n    const axisWidth = length - ((len1 / 2 + 1) * distancing + (len2 / 2 + 1) * distancing - 1);\r\n    const axisEndCol = internalLength / distancing;\r\n    const axisEnd = axisEndCol * distancing;\r\n\r\n    const triCent1 = (0.5 * len1 + 1) * distancing;\r\n    const triCent2 = (0.5 * len2 + 1) * distancing;\r\n    const triCentCol1 = Math.ceil(triCent1 / distancing);\r\n    const triCentCol2 = Math.ceil(triCent2 / distancing);\r\n\r\n    const variance1 = Math.abs(Math.ceil(len1 / 2) - axisStartCol);\r\n    const variance2 = Math.abs(Math.ceil(len2 / 2) - axisStartCol);\r\n\r\n    const startPos1 = data[\"startPos1\"];\r\n    let distancing1 = startPos1 + variance1 - 1;\r\n    let col11 = startPos1;\r\n    let col12 = startPos1 + len1 - 1;\r\n    if (col11 + triCentCol1 < axisStartCol) {\r\n      distancing1 = variance1 - 1;\r\n      col11 = 0;\r\n      col12 = len1 - 1;\r\n    }\r\n    else if (col11 + triCentCol1 > axisStartCol + axisEndCol) {\r\n      distancing1 = variance1 + axisEndCol - 1;\r\n      col11 = axisEndCol;\r\n      col12 = axisEndCol + len1 - 1;\r\n    }\r\n\r\n    let startPos2 = data[\"startPos2\"];\r\n    let distancing2 = startPos2 + variance2 - 1;\r\n    let col21 = startPos2;\r\n    let col22 = startPos2 + len2 - 1;\r\n    if (col21 + triCentCol2 < axisStartCol) {\r\n      distancing2 = variance2 - 1;\r\n      col21 = 0;\r\n      col22 = len2 - 1;\r\n    }\r\n    else if (col21 + triCentCol2 > axisStartCol + axisEndCol) {\r\n      distancing2 = variance2 + axisEndCol - 1;\r\n      col21 = axisEndCol;\r\n      col22 = axisEndCol + len2 - 1;\r\n    }\r\n\r\n    let colNumVal;\r\n    if (\"colNumVal\" in data) {\r\n      colNumVal = this.props.data[\"colNumVal\"];\r\n    }\r\n    else {\r\n      colNumVal = 1;\r\n    }\r\n\r\n    let tickNum;\r\n    let tickDist;\r\n    let rangeVal;\r\n    const axisLength = colNumInit * colNumVal;\r\n    if (\"tickNum\" in data && axisLength % (parseInt(data[\"tickNum\"]) + 1) === 0) {\r\n      tickNum = parseInt(data[\"tickNum\"]);\r\n      tickDist = colNumInit * distancing / (tickNum + 1);\r\n      rangeVal = axisLength / (tickNum + 1);\r\n    }\r\n    else {\r\n      tickNum = 0;\r\n      tickDist = axisLength;\r\n      rangeVal = axisLength;\r\n    }\r\n\r\n    let edgeLim;\r\n    if (\"edgeLim\" in data) {\r\n      edgeLim = data[\"edgeLim\"];\r\n    }\r\n    else {\r\n      edgeLim = true;\r\n    }\r\n\r\n    return {\r\n      axisLength: data[\"axis-length\"],\r\n      startPos1: data[\"startPos1\"],\r\n      startPos2: data[\"startPos2\"],\r\n      x: 0, y: 0, isDown: false,\r\n      rectX: 12.5,\r\n      down: false,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      svgX: 6,\r\n      len1: len1,\r\n      colValHeiS: data[\"colValHeiS\"],\r\n      len2: len2,\r\n      colValHeiS2: data[\"colValHeiS2\"],\r\n      distancing: distancing,\r\n      distancing1 : distancing1 * distancing,\r\n      distancing2: distancing2 * distancing,\r\n      triCent1: triCentCol1 * distancing,\r\n      triCentCol1: triCentCol1,\r\n      triCent2: triCentCol2 * distancing,\r\n      triCentCol2: triCentCol2,\r\n      mousePointerRange: 0,\r\n      triDown: false,\r\n      col11: col11,\r\n      col12: col12,\r\n      col21: col21,\r\n      col22: col22,\r\n      colLim1: Math.round((length - (len1 * distancing)) / distancing),\r\n      colLim2: Math.round((length - (len2 * distancing)) / distancing),\r\n      overlapVals: data[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist,\r\n      axisStart: axisStart,\r\n      axisStartCol: axisStartCol,\r\n      axisWidth: axisWidth,\r\n      axisEnd: axisEnd,\r\n      axisEndCol: axisEndCol,\r\n      edgeCol: edgeCol,\r\n      edgeLength: edgeLength,\r\n      colNum: colNumInit,\r\n      variance1: variance1,\r\n      variance2: variance2,\r\n      lowVal: this.props.data[\"lowVal\"],\r\n      showCoors: true,\r\n      colNumVal: colNumVal,\r\n      tickNum: tickNum,\r\n      tickDist: tickDist,\r\n      rangeVal: rangeVal,\r\n      edgeLim: edgeLim\r\n    };\r\n  }\r\n\r\n  dotReturn(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing1 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"DarkCyan\" fill=\"DarkCyan\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  dotReturn2(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing2 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"Crimson\" fill=\"Crimson\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  svgColReturn(e, dragger) {\r\n    let distFromCent;\r\n    let variance;\r\n    if (dragger === 1) {\r\n      distFromCent = this.state.triCentCol1;\r\n      variance = this.state.variance1;\r\n    }\r\n    else if (dragger === 2) {\r\n      distFromCent = this.state.triCentCol2;\r\n      variance = this.state.variance2;\r\n    }\r\n    var svg = this.svgRef.current;\r\n    var pt = svg.createSVGPoint();\r\n    pt.x = e.clientX;\r\n    var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    e.preventDefault();\r\n    var x = svgP.x - distFromCent + this.state.mousePointerRange;\r\n    var col = Math.round((x - this.state.axisStart) / this.state.distancing) + variance;\r\n    var colRelative = Math.round((x - this.state.axisStart) / this.state.distancing) + 1;\r\n    // console.log(col, colRelative, variance);\r\n    return [col, colRelative];\r\n  }\r\n\r\n  svgColPlacement(col, colRelative, dragger) {\r\n    // console.log(col);\r\n    // console.log(this.state.axisStartCol);\r\n    // console.log(this.state.axisStart);\r\n    if (this.state.edgeLim) {\r\n      if (dragger === 2) {\r\n        const variance = this.state.axisStartCol - this.state.variance2;\r\n        if (col < this.state.axisStartCol - 1) {\r\n          // console.log(\"edge\");\r\n          this.setState({ distancing2: (this.state.axisStartCol - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n        }\r\n        else if (col + this.state.len2 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          const endCol = this.state.axisEndCol - this.state.len2;\r\n          this.setState({ distancing2: this.state.distancing * (this.state.axisStartCol + endCol - 1), col21: endCol, col22: endCol + this.state.len2 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative - variance, col22: colRelative - variance + this.state.len2 - 1 });\r\n        }\r\n        this.curveArea();\r\n      }\r\n      else if (dragger === 1) {\r\n        const variance = this.state.axisStartCol - this.state.variance1;\r\n        if (col < this.state.axisStartCol - 1) {\r\n          this.setState({ distancing1: (this.state.axisStartCol - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n        }\r\n        else if (col + this.state.len1 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          const endCol = this.state.axisEndCol - this.state.len1;\r\n          this.setState({ distancing1: this.state.distancing * (this.state.axisStartCol + endCol - 1), col11: endCol, col12: endCol + this.state.len1 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative - variance, col12: colRelative - variance + this.state.len1 - 1 });\r\n        }\r\n        this.curveArea();\r\n        // this.setState({ distancing2 : x })\r\n      }\r\n    }\r\n    else {\r\n      if (dragger === 2) {\r\n        if (col + this.state.triCentCol2 < this.state.axisStartCol) {\r\n          this.setState({ distancing2: (this.state.variance2 - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n        }\r\n        else if (col + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          this.setState({ distancing2: this.state.distancing * (this.state.variance2 + this.state.axisEndCol - 1), col21: this.state.axisEndCol, col22: this.state.axisEndCol + this.state.len2 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative, col22: colRelative + this.state.len2 - 1 });\r\n        }\r\n        this.curveArea();\r\n      }\r\n      else if (dragger === 1) {\r\n        if (col + this.state.triCentCol1 < this.state.axisStartCol) {\r\n          this.setState({ distancing1: (this.state.variance1 - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n        }\r\n        else if (col + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          this.setState({ distancing1: this.state.distancing * (this.state.variance1 + this.state.axisEndCol - 1), col11: this.state.axisEndCol, col12: this.state.axisEndCol + this.state.len1 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative, col12: colRelative + this.state.len1 - 1 });\r\n        }\r\n        this.curveArea();\r\n        // this.setState({ distancing2 : x })\r\n      }\r\n    }\r\n  }\r\n\r\n  triMouseDown(e, num) {\r\n    if (e.type === \"mousedown\") {\r\n      // console.log(\"MOUSEDOWN\");\r\n      e.preventDefault();\r\n      var svgPre = this.svgRef.current;\r\n      // Set mousePointerRange so that we know the distance\r\n      // from the mouse tip to the x-value of the triangle\r\n      // tip\r\n      var ptPre = svgPre.createSVGPoint();\r\n      ptPre.x = e.clientX;\r\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n      if (num === 1) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\r\n        }));\r\n      }\r\n      else if (num === 2) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\r\n        }));\r\n      }\r\n      // console.log(this.state);\r\n    }\r\n  }\r\n\r\n  triDrag(e) {\r\n      e.preventDefault();\r\n      var dragger = this.state.triDown;\r\n      var cols = this.svgColReturn(e, dragger);\r\n      var col = cols[0];\r\n      var colRelative = cols[1]\r\n      // console.log(col);\r\n      this.svgColPlacement(col, colRelative, dragger);\r\n      this.curveArea();\r\n  }\r\n\r\n  triUp(e) {\r\n    // console.log(\"UP\");\r\n    if (this.state.triDown) {\r\n      this.setState({ triDown: false });\r\n    }\r\n  }\r\n\r\n  curveArea() {\r\n    let col11;\r\n    let col12;\r\n    let col21;\r\n    let col22;\r\n\r\n    if (this.state.edgeLim) {\r\n      col11 = this.state.col11;\r\n      col12 = this.state.col12;\r\n      col21 = this.state.col21;\r\n      col22 = this.state.col22;\r\n    }\r\n    else {\r\n      col11 = this.state.col11 + this.state.variance1;\r\n      col12 = this.state.col12 + this.state.variance1;\r\n      col21 = this.state.col21 + this.state.variance2;\r\n      col22 = this.state.col22 + this.state.variance2;\r\n    }\r\n\r\n    if (col11 > col22 || col12 < col21) {\r\n      this.areaRef.current.innerHTML = 0;\r\n    }\r\n    else {\r\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\r\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(col22 - col11)];\r\n    }\r\n  }\r\n  \r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    this.props.changeJSON(key, value);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  lengthSubmit(newLength) {\r\n    var newLength = this.lengthRef.current.value;\r\n    const internalLength = newLength * this.state.distancing;\r\n    const length = this.state.edgeLength + internalLength;\r\n\r\n    const axisEndCol = internalLength / this.state.distancing;\r\n    const axisEnd = axisEndCol * this.state.distancing;\r\n    console.log(axisEndCol);\r\n\r\n    this.changeJSON(\"axis-length\", newLength);\r\n\r\n    this.setState({\r\n      colNum: newLength,\r\n      svgWidth: length,\r\n      axisEndCol: axisEndCol,\r\n      axisEnd: axisEnd\r\n    });\r\n  }\r\n\r\n  toggleXVals() {\r\n    this.setState(prevState => {\r\n      return {\r\n        showCoors: !prevState.showCoors\r\n      }\r\n    })\r\n  }\r\n\r\n  alterStartPos1(newPos) {\r\n    let startPos1 = parseInt(this.startPos1Ref.current.value) + this.state.variance1 - 1;\r\n    let col11 = startPos1 - this.state.variance1 + 1;\r\n    let col12 = col11 + this.state.len1 - 1;\r\n    if (startPos1 + this.state.triCentCol1 < this.state.axisStartCol) {\r\n      startPos1 = this.state.variance1 - 1;\r\n      col11 = 0;\r\n      col12 = this.state.len1 - 1;\r\n    }\r\n    else if (startPos1 + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos1 = this.state.variance1 + this.state.axisEndCol - 1;\r\n      col11 = this.state.axisEndCol;\r\n      col12 = this.state.axisEndCol + this.state.len1 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos1\", newPos);\r\n\r\n    this.setState({\r\n      distancing1: startPos1 * this.state.distancing,\r\n      col11: col11,\r\n      col12: col12\r\n    });\r\n  }\r\n\r\n  alterStartPos2(newPos) {\r\n    let startPos2 = parseInt(this.startPos2Ref.current.value) + this.state.variance2 - 1;\r\n    let col21 = startPos2 - this.state.variance2 + 1;\r\n    let col22 = col21 + this.state.len2 - 1;\r\n    if (startPos2 + this.state.triCentCol2 < this.state.axisStartCol) {\r\n      startPos2 = this.state.variance2 - 1;\r\n      col21 = 0;\r\n      col22 = this.state.len2 - 1;\r\n    }\r\n    else if (startPos2 + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos2 = this.state.variance2 + this.state.axisEndCol - 1;\r\n      col21 = this.state.axisEndCol;\r\n      col22 = this.state.axisEndCol + this.state.len2 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos2\", newPos);\r\n\r\n    this.setState({\r\n      distancing2: startPos2 * this.state.distancing,\r\n      col21: col21,\r\n      col22: col22\r\n    });\r\n  }\r\n  \r\n  updateRadius(radius) {\r\n    // console.log(\"updateRadius\", radius);\r\n    this.changeJSON(\"circle-radius\", parseInt(radius));\r\n    let newData = this.props.data;\r\n    newData[\"circle-radius\"] = parseInt(radius);\r\n    this.setState(this.establishStateData(newData));\r\n  }\r\n\r\n  updateTicks(newTickCount) {\r\n    this.changeJSON(\"tickNum\", parseInt(newTickCount));\r\n    let newData = this.props.data;\r\n    newData[\"tickNum\"] = parseInt(newTickCount);\r\n    this.setState(this.establishStateData(newData));\r\n  }\r\n\r\n  updateColVal(colVal) {\r\n    this.changeJSON(\"colNumVal\", colVal);\r\n    this.setState({ colNumVal : colVal });\r\n  }\r\n\r\n  checkChange() {\r\n    this.setState(prevState => {\r\n      this.changeJSON(\"edgeLim\", !prevState.edgeLim);\r\n      return {\r\n        edgeLim: !prevState.edgeLim\r\n      }\r\n    })\r\n    console.log(this.state.edgeLim);\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    return (\r\n      <div\r\n        onMouseMove={e => this.triDrag(e)}\r\n        onMouseUp={e => this.triUp(e)}>\r\n        <svg width={this.state.svgWidth} height={this.state.svgHeight + 10} ref={this.svgRef}>\r\n          {/* <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\"/> */}\r\n          {[...Array(this.state.len1).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS[col]).keys()].map(\r\n                (row) => this.dotReturn(col, row)\r\n              )\r\n          )}\r\n          {[...Array(this.state.len2).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS2[col]).keys()].map(\r\n                (row) => this.dotReturn2(col, row)\r\n              )\r\n          )}\r\n          <rect width={this.state.axisEnd}\r\n            height=\"2\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisEnd + this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          {[...Array(this.state.tickNum).keys()].map(\r\n            (tick) =>\r\n              <rect\r\n                width=\"2\"\r\n                height=\"20\"\r\n                fill=\"black\"\r\n                x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \r\n                y={this.state.ceilDist + 20}\r\n              />\r\n          )}\r\n          {[...Array(this.state.tickNum).keys()].map(\r\n            (tick) =>\r\n            <text \r\n            textAnchor=\"middle\" \r\n            x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \r\n            y={this.state.ceilDist + 55}>\r\n              {this.state.lowVal + (this.state.rangeVal * (tick + 1))}\r\n            </text>\r\n          )}\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent1 + this.state.distancing1 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\r\n          />\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent2 + this.state.distancing2 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\r\n          />\r\n          <text textAnchor=\"middle\" x={this.state.axisStart} y={this.state.ceilDist + 55}>{this.state.lowVal}</text>\r\n          <text textAnchor=\"middle\" x={this.state.axisStart + this.state.axisEnd} y={this.state.ceilDist + 55}>{this.state.lowVal + this.state.colNum * this.state.colNumVal}</text>\r\n                    Sorry, please use a different browser.\r\n                </svg>\r\n        <br />\r\n        <div class=\"boxed\">\r\n          <div class=\"flex-container\">\r\n            <div class=\"flex-child-one\">\r\n              Question: <br/>\r\n              <textarea class=\"normal-curve-text\" cols=\"60\" rows=\"11\" ref={this.qRef}\r\n                onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n              </textarea>\r\n\r\n              <br/><br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.graph1keyRef}\r\n                onInput={() => this.handleChange(\"graph1key\", this.graph1keyRef.current.value, this.props.count)}></input>\r\n              <br />\r\n\r\n              <div class=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.graph2keyRef}\r\n                onInput={() => this.handleChange(\"graph2key\", this.graph2keyRef.current.value, this.props.count)}></input>\r\n            </div>\r\n\r\n            <div class=\"flex-child-two\">\r\n              <br/>\r\n              What csv column name do you want to assign to this question?\r\n              <br/>\r\n              <input type=\"text\" ref={this.questionKeyRef} \r\n                onInput={() => this.handleChange(\"normal-curve-question-key\", this.questionKeyRef.current.value, this.props.count)}/>\r\n              <br/>\r\n              <b>Use letters only, and the name must be unique.</b> <br/>\r\n              Recommedation: include your experiment name, this question number \r\n              ({qNum}), and the question type (normalCurve)\r\n\r\n              <br/><br/>\r\n              Please enter the csv column names for the graph key: <br/>\r\n              (the same rule applies) <br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.legendKey1Ref}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key1\", this.legendKey1Ref.current.value, this.props.count)}></input>\r\n              \r\n              <br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.legendKey2Ref}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key2\", this.legendKey2Ref.current.value, this.props.count)}></input>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-child-three\">\r\n            <span>Enter the width of the graph (each point in the curves is \r\n              equivalent to 1 unit of width) </span>\r\n            <input ref={this.lengthRef} type=\"text\" \r\n              name=\"axisLength\" value={this.state.axisLength} \r\n              onChange={this.onChange}/>\r\n            <button onClick={() => {this.lengthSubmit(this.state.axisLength)}}>\r\n              Change Width\r\n            </button>\r\n            <br/>\r\n\r\n            <span>Enter your preferred value for the width of each unit in the curve</span>\r\n            <input type=\"text\" ref={this.colNumValRef}></input>\r\n            <button onClick={() => this.updateColVal(this.colNumValRef.current.value)}>Change Unit Value</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred value for the radius of each unit in the curve (2 - 5, inclusive)</span>\r\n            <input type=\"text\" ref={this.radiusRef}></input>\r\n            <button onClick={() => this.updateRadius(this.radiusRef.current.value)}>Change Radius</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred number of ticks on the graph (must be divisible by the range of the x-axis)</span>\r\n            <input type=\"text\" ref={this.ticksRef}></input>\r\n            <button onClick={() => this.updateTicks(this.ticksRef.current.value)}>Change Tick Count</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred starting position for curve 1, \r\n              if you want to change it </span>\r\n            <input ref={this.startPos1Ref} \r\n              type=\"text\" name=\"startPos1\" value={this.state.startPos1} \r\n              onChange={this.onChange}></input>\r\n            <button onClick={() => this.alterStartPos1(this.state.startPos1)}>\r\n              Change Curve 1\r\n            </button>\r\n            <br/>\r\n\r\n            <span>Enter your preferred starting position for curve 2, \r\n              if you want to change it </span>\r\n            <input ref={this.startPos2Ref} type=\"text\" \r\n            name=\"startPos2\" value={this.state.startPos2} \r\n            onChange={this.onChange}></input>\r\n            <button onClick={() => this.alterStartPos2(this.state.startPos2)}>\r\n              Change Curve 2\r\n            </button>\r\n            <br />\r\n\r\n            <input \r\n            type=\"checkbox\" \r\n            id=\"vehicle1\" \r\n            name=\"vehicle1\" \r\n            value=\"Bike\" \r\n            ref={this.checkBoxRef}\r\n            onChange={this.checkChange} />\r\n            <label for=\"vehicle1\"> Turn edge limiting on/off</label>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <h4>Area Under Curve: <span ref={this.areaRef}></span> | First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h4>\r\n        {/* <h1>{this.props.data[\"startPos1\"]} | {this.props.data[\"startPos2\"]}</h1> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NormalCurve;","import axios from \"axios\";\r\nimport {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COLS_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME,\r\n  SEND_FILE\r\n} from \"./types\";\r\n\r\nexport const addStudyName = (which_database, study_name) => dispatch => {\r\n  const dataToPost = {\r\n    studyName: study_name,\r\n    experiments: []\r\n  };\r\n  // note that the goal of the following step is to show researchers \r\n  // the name of the study they have just created. This is totally doable\r\n  // via a simple this.state written in Dashboard. However, putting it here\r\n  // just makes things more organized and fits well with the rest of the \r\n  // redux structure I have used to create this demo\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\r\n      dataToPost)\r\n    .then(entry => {\r\n      // console.log(entry);\r\n      dispatch({\r\n        type: ADD_STUDY_NAME,\r\n        payload: entry.data.studyName\r\n      });\r\n      alert(\"Study [\" + study_name + \"] is created.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getDBInfo = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_DB_INFO,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      '/info/studyName-' + which_study)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_STUDY_INFO,\r\n        payload: res.data.experiments\r\n      })\r\n    })\r\n}\r\n\r\nexport const saveAddInfo = (which_database, study_name, expt_name, infoType, info) => dispatch => {\r\n  axios\r\n    .put('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      '/info/studyName-' + study_name + '/experiments/exptName-' + expt_name + '/' + infoType,\r\n      info)\r\n    .then(res => {\r\n      console.log(res.data);\r\n    })\r\n} \r\n\r\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\r\n      \"/createCol/\" + col_name)\r\n    .then(res => {\r\n      // we can potentially improve the alert box\r\n      alert(\"Experiment [\" + which_expt + \"] is deployed.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getColData = (which_database, col_name) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      \"/\" + col_name)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_DATA,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getColsData = (which_database, col_name) => dispatch => {\r\n  axios\r\n  .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n    \"/\" + col_name)\r\n  .then(res => {\r\n    res.data.forEach(doc => {\r\n      dispatch({\r\n        type: GET_COLS_DATA,\r\n        payload: doc\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport const getColNames = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_NAMES,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const storeFileName = (fileName) => dispatch => {\r\n  dispatch({\r\n    type: STORE_FILENAME,\r\n    payload: fileName\r\n  })\r\n}\r\n\r\nexport const sendFile = (which_database, file) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      \"/itemData\", file)\r\n    .then(res => {\r\n      console.log(\"Data sent to DB\");\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport NormalCurve from './NormalCurve';\r\nimport './NormalCurve.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass NormalCurveResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.changeJSON = this.changeJSON.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileNames: [],\r\n      setFileNames: [],\r\n      fileChosen: '',\r\n      key: this.props.key\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"normal-curve\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n\r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n            if (this.props.files.length == 0) {\r\n              this.saveFile(\"normal-curve\", file.name, jsonData);\r\n            } else {\r\n              const names = this.props.files.map(item => item.fileName);\r\n              if (!names.includes(file.name)) {\r\n                this.saveFile(\"normal-curve\", file.name, jsonData);\r\n              }\r\n            }\r\n\r\n            const unitHeight = jsonData[\"max-height\"];\r\n            const circRad = jsonData[\"circle-radius\"];\r\n            const distancing = circRad * 4 - 1;\r\n            const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n            const ceilDist = height - 50;\r\n            const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n            const colNum = Math.round(length / distancing);\r\n            this.setState({\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData, \r\n              svgWidth: length,\r\n              svgHeight: height,\r\n              distancing: distancing,\r\n              dataReceived: true,\r\n              len1: jsonData[\"len1\"],\r\n              colValHeiS: jsonData[\"colValHeiS\"],\r\n              len2: jsonData[\"len2\"],\r\n              colValHeiS2: jsonData[\"colValHeiS2\"],\r\n              distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n              distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n              triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n              triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n              col11: jsonData[\"len2\"] + 1,\r\n              col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n              col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n              col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n              colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n              colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n              overlapVals: jsonData[\"overlapVals\"],\r\n              circRad: circRad,\r\n              ceilDist: ceilDist\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    const unitHeight = jsonData[\"max-height\"];\r\n    const circRad = jsonData[\"circle-radius\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n    const ceilDist = height - 50;\r\n    const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n    const colNum = Math.round(length / distancing);\r\n    this.setState({\r\n      dataReceived: true,\r\n      // fileText: fileText,\r\n      jsonData: jsonData,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      distancing: distancing,\r\n      dataReceived: true,\r\n      len1: jsonData[\"len1\"],\r\n      colValHeiS: jsonData[\"colValHeiS\"],\r\n      len2: jsonData[\"len2\"],\r\n      colValHeiS2: jsonData[\"colValHeiS2\"],\r\n      distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n      distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n      triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n      triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n      col11: jsonData[\"len2\"] + 1,\r\n      col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n      col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n      col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n      colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n      colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n      overlapVals: jsonData[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist\r\n    })\r\n  }  \r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    var data = this.state.jsonData;\r\n    data[key] = Number(value);\r\n    this.handleChange(\"FileContent\", data, this.props.count);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <NormalCurve \r\n            data={this.state.jsonData} count={this.props.count}\r\n            changeJSON={this.changeJSON} \r\n            handleChange={this.handleChange} />\r\n          <br/>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      const normalCurveFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"normal-curve\");\r\n      var fileNames = normalCurveFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nNormalCurveResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(NormalCurveResearch);","import React, { Component } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nimport './HistSlider.css';\r\n\r\nclass Histogram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.sliderRef = React.createRef();\r\n    this.graphRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.questionKeyRef = React.createRef();\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number,\r\n      sliderPos: Number\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawChart();\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  drawChart() {\r\n    const data = this.props.data;\r\n\r\n    const svg = d3.select(this.graphRef.current).append(\"svg\")\r\n      .attr(\"width\", this.props.width)\r\n      .attr(\"height\", this.props.height)\r\n\r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * this.props.width / data.length)\r\n      .attr(\"y\", (d, i) => this.props.height - 10 * d)\r\n      .attr(\"width\", this.props.width / data.length - 10)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"#4CAF50\")\r\n      .attr(\"opacity\", 0.5)\r\n\r\n    svg.selectAll(\"text\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text((d) => d)\r\n      .attr(\"x\", (d, i) => i * this.props.width / data.length)\r\n      .attr(\"y\", (d, i) => this.props.height - (10 * d) - 3)\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    const vertAlign = this.props.height / 2;\r\n    // const step_size = this.props.width / this.props.data.length;\r\n    return (\r\n      <div>\r\n        <div ref={this.graphRef}\r\n          style={{ \r\n            position: \"relative\", \r\n            width: this.props.width, \r\n            margin: \"auto\" }}>\r\n          <div \r\n            style={{ \r\n              position: \"absolute\",\r\n              top: vertAlign}}>\r\n            <input type=\"range\" min={this.state.minVal} max={this.state.maxVal} \r\n              className=\"hist-slider\" onChange={this.onChange}\r\n              name=\"sliderPos\" value={this.state.sliderPos}\r\n              step={this.props.step} ref={this.sliderRef}\r\n              style={{ width: this.props.width }}/>\r\n          </div>\r\n        </div>\r\n        {this.state.minVal}\r\n        <input type=\"range\" class=\"dummy-slider\" \r\n          style={{ width: this.props.width }} onChange={this.onChange}\r\n          name=\"sliderPos\" value={this.state.sliderPos} step={this.props.step}\r\n          min={this.state.minVal} max={this.state.maxVal} />\r\n        {this.state.maxVal}\r\n        \r\n        <br/><br/>\r\n        <div className=\"boxed\">\r\n          Question #{qNum} <br/>\r\n          <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \r\n            onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n          </textarea>\r\n\r\n          <br/>\r\n          <p>Minimum: \r\n            <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n            ref={this.minRef} type=\"text\" \r\n            name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p>\r\n          \r\n          <br/>\r\n          <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n            ref={this.maxRef} type=\"text\" \r\n            name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p>\r\n\r\n          <br/><br/>\r\n          What csv column name do you want to assign to this question? <br/>\r\n          <b>Please use letters only, and the name must be unique.</b> <br/>\r\n          Recommedation: include your experiment name, this question number \r\n          ({qNum}), and the question type (threshold)\r\n          <br/>\r\n          <input type=\"text\" ref={this.questionKeyRef} \r\n            onInput={() => this.handleChange(\"threshold-key\", this.questionKeyRef.current.value, this.props.count)}/>\r\n          \r\n          <br/><br/>\r\n          <button onClick={this.delete.bind(this)}>Delete Question</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Histogram;","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport Histogram from './Histogram.js';\r\nimport './HistogramResearch.css';\r\nimport '../../../../src/App.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass HistogramResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileChosen: ''\r\n    }\r\n\r\n    this.delete = this.delete.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(e.target.name);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"threshold\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n  \r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n              if (this.props.files.length == 0) {\r\n                this.saveFile(\"threshold\", file.name, jsonData);\r\n              } else {\r\n                const names = this.props.files.map(item => item.fileName);\r\n                if (!names.includes(file.name)) {\r\n                  this.saveFile(\"threshold\", file.name, jsonData);\r\n                }\r\n              }\r\n  \r\n            this.setState({\r\n              data: jsonData[\"data\"],\r\n              width: jsonData[\"width\"],\r\n              height: jsonData[\"height\"],\r\n              id: HistogramResearch,\r\n              step: jsonData[\"step\"],\r\n              defaultValue: jsonData[\"defaultValue\"],\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData[\"data\"]\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({\r\n      fileNames: acceptedFiles.map(file => file.name)\r\n    });\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    this.setState({\r\n      data: jsonData[\"data\"],\r\n      width: jsonData[\"width\"],\r\n      height: jsonData[\"height\"],\r\n      id: HistogramResearch,\r\n      step: jsonData[\"step\"],\r\n      defaultValue: jsonData[\"defaultValue\"],\r\n      dataReceived: true,\r\n      jsonData: jsonData[\"data\"]\r\n    });\r\n  }  \r\n\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <Histogram\r\n            data={this.state.data}\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n            step={this.state.step}\r\n            delete={this.delete}\r\n            handleChange={this.handleChange}\r\n            count={this.props.count}\r\n            class=\"center\" />\r\n          <br />\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      const histogramFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"threshold\");\r\n      console.log(histogramFiles);\r\n      var fileNames = histogramFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone> \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nHistogramResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(HistogramResearch);","import React, { Component } from 'react';\r\nimport './TabList.css';\r\nimport '../TabBuilder/TabBuilder'\r\nimport TabBuilder from '../TabBuilder/TabBuilder'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ###TODO###: import your component here\r\nimport SliderTab from '../items/Slider/SliderTab';\r\nimport StaticText from '../items/StaticText/StaticText';\r\nimport NormalCurveResearch from '../items/NormalCurve/NormalCurveResearch';\r\nimport HistogramResearch from '../items/Threshold/HistogramResearch';\r\n\r\nimport { sendFile } from '../../actions/dataActions'\r\n\r\nconst axios = require('axios');\r\n\r\n// This component allows Psych researchers to configure an experiment \r\nclass TabList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      count: 0,\r\n      output: {},\r\n      deleted: [],\r\n      complete: false,\r\n      exptName: '',\r\n      files: []\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.submitRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n\r\n    this.builderFunction = this.builderFunction.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.outputCreate = this.outputCreate.bind(this);\r\n    this.checkOutput = this.checkOutput.bind(this);\r\n\r\n    this.saveFile = this.saveFile.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  builderFunction = (tabDefine) => {\r\n    var arr = this.state.children;\r\n    // ###TODO###: Add more cases here for TabList to display \r\n    //             Follow the format of the provided components below\r\n    switch (tabDefine) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()}\r\n                  appendToKeysArr={this.appendToKeysArr} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      case \"threshold\":\r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <HistogramResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\r\n  }\r\n\r\n  // Input: \r\n  //  key: key of JSON object\r\n  //  value: value of JSON object\r\n  //  count: the numerical order of the JSON object\r\n  // Action: put the key and value pair in the final output JSON object\r\n  handleChange(key, value, count) {\r\n    var curOutput = this.state.output;\r\n    curOutput[count.toString()][key] = value;\r\n    this.setState({ output: curOutput });\r\n  }\r\n\r\n  appendToKeysArr(objType, nameType, csvColName, count) {\r\n    var curOutput = this.state.output;\r\n    const objKeys = Object.keys(curOutput[count.toString()]);\r\n    // console.log(objKeys);\r\n    if (objKeys.includes(objType)) {\r\n      curOutput[count.toString()][objType][nameType] = csvColName;\r\n    } else {\r\n      curOutput[count.toString()][objType] = {};\r\n      curOutput[count.toString()][objType][nameType] = csvColName;\r\n    }\r\n    console.log(curOutput);\r\n    // curOutput[count.toString()][\"csvColNames\"]\r\n  }\r\n\r\n  delete(id) {\r\n    var newDelete = this.state.deleted;\r\n    newDelete.push(id);\r\n    this.setState({ deleted: newDelete });\r\n  }\r\n\r\n  getCount(count) {\r\n    return count;\r\n  }\r\n\r\n  // Action: put newly uploaded files into this.state. \r\n  //         All newly uploaded files will be sent to database as JSON objs\r\n  saveFile(type, name, content) {\r\n    const newFile = {\r\n      \"itemType\": type,\r\n      \"fileName\": name,\r\n      \"fileContent\": content\r\n    };\r\n    this.setState({ files: this.state.files.concat(newFile) });\r\n  }\r\n\r\n  // validating input fields. \r\n  // for now: developers will need to add a case below \r\n  checkOutput(obj) {\r\n    var int = 0;\r\n    var complete = true;\r\n    while ((int.toString()) in obj) {\r\n      var elem = obj[int.toString()];\r\n      switch (elem[\"Type\"]) {\r\n        case \"slider\":\r\n          var lowIs = \"lowRange\" in elem;\r\n          var highIs = \"highRange\" in elem;\r\n          var qIs = \"Question\" in elem;\r\n          if (lowIs && highIs && qIs) {\r\n            var lowNum = !isNaN(elem[\"lowRange\"]);\r\n            var highNum = !isNaN(elem[\"highRange\"]);\r\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\r\n            if (highLow && lowNum && highNum) {\r\n              complete = complete && true;\r\n            }\r\n            else {\r\n              complete = false;\r\n            }\r\n          }\r\n          else {\r\n            complete = false;\r\n          }\r\n          break;\r\n        default:\r\n          complete = false;\r\n      case \"normal-curve\":\r\n        complete = true;\r\n      }\r\n      int++;\r\n    }\r\n    return complete;\r\n  }\r\n\r\n  outputCreate() {\r\n    var obj = {};\r\n    var index = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { \r\n        obj[item.id.toString()] = this.state.output[item.id.toString()];\r\n        const exptItem = this.state.output[item.id.toString()];\r\n        switch (exptItem[\"Type\"]) {\r\n          case \"normal-curve\":\r\n            index[exptItem[\"normal-curve-question-key\"]] = exptItem[\"Question\"];\r\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key1\"]] = exptItem[\"graph1key\"];\r\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key2\"]] = exptItem[\"graph2key\"];\r\n          case \"threshold\":\r\n            index[exptItem[\"threshold-key\"]] = exptItem[\"Question\"];\r\n        }\r\n      });\r\n    var validName = this.nameRef.current.value.length > 0;\r\n    // if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\r\n    // if (!validName) {\r\n    if (false) {\r\n      alert(\"You have not filled out all fields, or have entered an invalid value!\");\r\n    }\r\n    else {\r\n      var finalObj = {};\r\n      finalObj[\"exptName\"] = this.nameRef.current.value;\r\n      var int = 0;\r\n      while (int < this.state.count) {\r\n        if ((int.toString()) in obj) {\r\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n        }\r\n        int++;\r\n      }\r\n      finalObj[\"count\"] = int;\r\n      delete index[\"undefined\"];\r\n      finalObj[\"index\"] = index;\r\n\r\n      console.log(finalObj);\r\n\r\n      const username = this.props.auth.user.username;\r\n      const studyName = this.props.match.params.studyName;\r\n\r\n      if (!this.state.files.length == 0) {\r\n        this.state.files.map(item => this.props.sendFile(username, item))\r\n      };\r\n\r\n      axios.put(\r\n        'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName + '/experiments',\r\n        finalObj\r\n      )\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .then(function (response) {\r\n          alert(\"Your experiment has been successfully created\");\r\n          window.location.reload(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n\r\n    var obj = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\r\n    var finalObj = {};\r\n    // finalObj[\"exptName\"] = this.nameRef.current.value;\r\n    var int = 0;\r\n    while (int < this.state.count) {\r\n      if ((int.toString()) in obj) {\r\n        finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n      }\r\n      int++;\r\n    }\r\n    finalObj[\"count\"] = int;\r\n    return (\r\n      <div ref={this.myRef}>\r\n        <h2>Experiment Builder</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <form action=\"/submit\" method=\"POST\" className=\"unit\">\r\n          <p>Enter a name for this experiment </p>\r\n          <input ref={this.nameRef}\r\n            value={this.state.exptName}\r\n            onChange={this.onChange}\r\n            type=\"text\" id=\"userid\" name=\"exptName\" /><br /><br />\r\n        </form>\r\n        {\r\n          this.state.children\r\n            .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n            .map((item) => {\r\n              return item.tab;\r\n            })\r\n        }\r\n        <TabBuilder build={this.builderFunction} />\r\n        <div className=\"extraPad\">\r\n          <button onClick={this.outputCreate} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n        </div>\r\n        <br/>\r\n        <button onClick={() => console.log(finalObj)}>Show finalObj</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired,\r\n  sendFile: PropTypes.func.isRequired,\r\n  dataFlowFileName: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo,\r\n  dataFlowFileName: state.dataFlow.fileName\r\n});\r\n\r\n// export default TabList;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendFile }\r\n)(TabList);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n            <br/>\r\n            {userIsLoggedIn ? '' : \r\n              <Link to=\"/register\">Register</Link>}\r\n            <br/>\r\n            {userIsLoggedIn ? \r\n              <Link to=\"/dashboard\"> Dashboard </Link> \r\n              : \r\n              <Link to=\"/login\">Login</Link>}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Navbar;\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentWillMount() {\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          Scientist: <b>{this.props.auth.user.username}</b>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n      return(\r\n        <div className=\"container\">\r\n            <h1>\r\n            Welcome to Psych Researcher App!\r\n            </h1>\r\n            Please click on this <p></p>\r\n            <a target=\"_blank\" href=\"https://github.com/statistical-perceptions/statistical-perceptions.github.io\">link</a> <p></p>\r\n            to view researcher user guide. \r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(HomePage);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    };\r\n  };\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form and flask request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register below</h1>\r\n        <p className=\"grey-text text-darken-1\">\r\n          Already have an account?\r\n                    <Link to=\"/login\">Log in</Link>\r\n        </p>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              // userExists comes from res json message in API\r\n              invalid: errors.userExists\r\n            })} />\r\n          <span className=\"red-text\">{errors.userExists}</span>\r\n          <br />\r\n          <br />\r\n            Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n              invalid: errors.password})} />\r\n          <span className=\"red-text\">{errors.password}</span>\r\n          <br />\r\n          <br />\r\n            Confirm Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password2})} />\r\n          <span className=\"red-text\">{errors.password2}</span>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\" className=\"btn\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Register;\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// map state from redux props to use inside components\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n// linking redux to Register component\r\n// withRouter makes it easy to redirect within a component\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // push user to dashboard when they login\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form post and request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    // we are redirecting wthin a component, so we don't need to\r\n    // pass in this.props.history\r\n    this.props.loginUser(userData);\r\n  };\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Log in</h1>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.userNotFound\r\n              // || USERNAME NOT FOUND\r\n            })} />\r\n          <span className=\"red-text\">{errors.userNotFound}</span>\r\n          <br />\r\n          <br />\r\n                    Password:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.pwdIncorrect\r\n            })} />\r\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Log in\"\r\n            className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Login;\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport {\r\n  addStudyName,\r\n  getDBInfo\r\n} from \"../../actions/dataActions\";\r\n\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studyName: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onAddStudy = this.onAddStudy.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // load experiment names when the page loads\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getDBInfo(username); // dbInfo will be in the store now\r\n  }\r\n\r\n  getStudyNames() {\r\n    // TODO. Filter out study names. If an item doesn't have study names\r\n    // as a key, then don't do anything. (wrap everything inside an if)\r\n    const allInfo = this.props.dataFlowDBInfo;\r\n    return allInfo.map(item => {\r\n      const allKeys = Object.keys(item);\r\n      if (allKeys.includes(\"studyName\")) {\r\n        const username = this.props.auth.user.username;\r\n        const link = \"/\" + username + \"/\" + item.studyName;\r\n        return (\r\n          <div className=\"container\">\r\n            <p>\r\n              {item.studyName} <p> </p>\r\n              <Link to={link}>\r\n                View\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddStudy() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.addStudyName(username, this.state.studyName);\r\n    // // alert(\"Your study has been succesfully created.\");\r\n    // window.location.reload(false);\r\n  };\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const username = this.props.auth.user.username;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Dashboard</h2>\r\n\r\n        <form>\r\n          Click on this <p></p>\r\n          <b>\r\n          <a href=\"https://colab.research.google.com/drive/1yleVQB_CrNJ5Z3v-YPatW2XqAD7yS8yp?usp=sharing\" target=\"_blank\">link</a>\r\n          </b> <p></p>\r\n          to configure a <b>normal curve</b> item.\r\n        </form>\r\n\r\n        <form onSubmit={this.onAddStudy}>\r\n          <b>Enter a name for your study:</b> <br/>\r\n          <input type=\"text\" name=\"studyName\"\r\n            value={this.state.studyName} onChange={this.onChange} />\r\n          <input type=\"submit\" value=\"Add Study\" /> <br/>\r\n          Please do <b>not</b> use \"-\" in the name\r\n        </form>\r\n\r\n        <form>\r\n          <br />\r\n          {this.getStudyNames()}\r\n          <br />\r\n        </form>\r\n\r\n        <button\r\n          onClick={this.onLogoutClick}\r\n          className=\"btn\">\r\n          Logout\r\n                </button>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  logoutUser: PropTypes.func.isRequired,\r\n  addStudyName: PropTypes.func.isRequired,\r\n  getDBInfo: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, addStudyName, getDBInfo }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  getStudyInfo,\r\n  createExptCol,\r\n  getColNames,\r\n  saveAddInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ConfigStudy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n\r\n    this.deployExpts = this.deployExpts.bind(this);\r\n    this.changeState = this.changeState.bind(this);\r\n    this.onDeploy = this.onDeploy.bind(this);\r\n  }\r\n  // note: using params to get studyName is probably not good practice. \r\n  // figure out a better way to get info from previous page later, might\r\n  // use cookies? or does react have some way to pass states between pages?\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    this.props.getColNames(username);\r\n  }\r\n\r\n  processColNames() {\r\n    const studyName = this.props.match.params.studyName;\r\n    const processedArr = this.props.colNames.filter(name => name !== \"info\");\r\n    const currentStudyExpts = processedArr.filter(name =>\r\n      name.split('-')[0] == studyName);\r\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\r\n    // this.setState({ deployExpts: deployedExpts });\r\n    return deployedExpts;\r\n  }\r\n\r\n  getExptNames() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    // check if the experiments are deployed \r\n    return this.props.experiments.map(expt => {\r\n      const exptName = expt.exptName;\r\n      const condition = expt.condition;\r\n      const surveyLink = expt.link;\r\n\r\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/configs\";\r\n      // const partDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n      //   exptName + \"/participantsData\";\r\n      const partExptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsExptData\";\r\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \r\n        \"participant-app/#/participant-app/expt/\" + username + \r\n          \"/\" + studyName + \"-\" + exptName\r\n      const previewLink = \"https://statistical-perceptions.github.io/\" + \r\n      \"participant-app/#/participant-app/preview/\" + username + \r\n        \"/\" + studyName + \"-\" + exptName\r\n      const dbLink = \"https://test-api-615.herokuapp.com/api/feedback/\" + \r\n        username + \"/\" + studyName + \"-\" + exptName\r\n\r\n      if (deployed.includes(exptName)) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"boxed\">\r\n              <b>{expt.exptName}</b> <br/>\r\n              <a target=\"_blank\" href={previewLink}>\r\n                Preview Experiment\r\n              </a> <br/><br/>\r\n              <Link to={exptDataLink}>\r\n                <button type=\"button\">\r\n                  Experiment Configs\r\n                </button>\r\n              </Link> <p> </p>\r\n              <Link to={partExptDataLink}>\r\n                <button type=\"button\">\r\n                  View Participants Data\r\n                </button>\r\n              </Link> <p> </p> \r\n              <br/><br/>\r\n              Condition: <b>{condition}</b>\r\n              <br/><br/>\r\n              <b>Database Link:</b><br/>\r\n              {dbLink} <br/>\r\n              <CopyToClipboard text={dbLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Database link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Experiment Link:</b> <br/>\r\n              {exptPartLink} <br/>\r\n              <CopyToClipboard text={exptPartLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Experiment link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Qualtrics Demographics Survey Link:</b> <br/>\r\n              {surveyLink} <br/>\r\n              <CopyToClipboard text={surveyLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Qualtrics Survey link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"boxed\">\r\n            Experiment: <b>{expt.exptName}</b><br/>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Configurations\r\n              </button>\r\n            </Link><br/><br/>\r\n            <b>Experiment Link:</b><br/>\r\n            {exptPartLink} <br/>\r\n            <CopyToClipboard text={exptPartLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Experiment link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>Database Link:</b><br/>\r\n            {dbLink} <br/>\r\n            <CopyToClipboard text={dbLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Database link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>TODO</b> <br/>\r\n            Paste the link to demographics qualtrics survey below: <br/>\r\n            <textarea cols=\"60\" rows=\"1\" id={exptName + \"link\"}\r\n              onInput={this.changeState} value={this.state.exptName}></textarea>\r\n            <br/><br/>\r\n            <b>TODO</b> <br/>\r\n            Name the condition of this experiment: <br/>\r\n            <textarea cols=\"60\" rows=\"1\" id={exptName + \"condition\"}\r\n              onInput={this.changeState} value={this.state.condition}></textarea>\r\n            <br/><br/>\r\n            {/* <button onClick={() => console.log(this.state)}>Show State</button><br/> */}\r\n            <button id={exptName} onClick={this.onDeploy}> \r\n              <b>DEPLOY</b>\r\n            </button>\r\n            <br/>\r\n            \r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  changeState(e) {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  onDeploy(e) {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = e.currentTarget.id;\r\n\r\n    const link = this.state[exptName + \"link\"];\r\n    const condition = this.state[exptName + \"condition\"];\r\n\r\n    // process condition first\r\n    const conditionInfo = { \"condition\": condition };\r\n    // this.props.saveAddInfo(username, studyName, exptName, \"condition\", conditionInfo);\r\n\r\n    axios\r\n      .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \r\n           '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'condition',\r\n           conditionInfo)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const linkToSend = link + \"?condition=\" + condition\r\n        const linkInfo = { \"link\": linkToSend };\r\n        axios\r\n          .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \r\n               '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'link',\r\n               linkInfo)\r\n          .then(res => {\r\n            console.log(res.data);\r\n            this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\r\n          })\r\n      })\r\n\r\n\r\n    // const linkToSend = link + \"?condition=\" + condition\r\n    // const linkInfo = { \"link\": linkToSend };\r\n    // this.props.saveAddInfo(username, studyName, exptName, \"link\", linkInfo);\r\n    // this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\r\n  }\r\n\r\n  // for now deployment simply creates a collection for each experiment \r\n  // that would later store participants data\r\n  deployExpts() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    difference.forEach(expt_name => {\r\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\r\n    });\r\n  }\r\n\r\n  deploy() {\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    if (exptNames.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            No experiments.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            All experiments are deployed.\r\n          </p>\r\n        </div>\r\n      )\r\n    } \r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptBuilderLink = \"/\" + username + \"/\" +\r\n      studyName + \"/exptBuilder\";\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n\r\n    const partStudyDataLink = \"/\" + username + \"/\" + studyName + \"/participantsStudyData\";\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Study: {this.props.match.params.studyName}</h2>\r\n        <Link to={exptBuilderLink}>\r\n          <button>\r\n            Build an Experiment\r\n          </button>\r\n        </Link>\r\n        <br/><br/>\r\n        <Link to={partStudyDataLink}>\r\n          <button>\r\n            View All Participant Data\r\n          </button>\r\n        </Link>\r\n        <form>\r\n          <h3>\r\n            Your Experiments\r\n          </h3>\r\n          {this.getExptNames()}\r\n          <br /><br />\r\n          {this.deploy()}\r\n          <br />\r\n        </form>\r\n        {/* <button onClick={() => console.log(this.props.experiments)}>show state</button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nConfigStudy.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  auth: PropTypes.object.isRequired,\r\n\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  createExptCol: PropTypes.func.isRequired,\r\n\r\n  getColNames: PropTypes.func.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n\r\n  saveAddInfo: PropTypes.func.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\n// props: state\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  // experiments refer to the experiment configurations \r\n  // stored in collection [info] under the user's database\r\n  experiments: state.dataFlow.studyInfo,\r\n  colNames: state.dataFlow.colNames\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo, createExptCol, getColNames, saveAddInfo }\r\n)(ConfigStudy);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ExptConfigs extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(this.props.experiments);\r\n  }\r\n\r\n  showExptData() {\r\n    const thisExpt = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const exptObj =\r\n        this.props.experiments.find(item => item.exptName == thisExpt);\r\n      // const allKeys = Object.keys(exptObj);\r\n      // const questionKeys = allKeys.filter(\r\n      //   x => x != \"userID\" && x != \"count\" &&\r\n      //     x != \"type\" && x != \"exptName\");\r\n      // return questionKeys.map(q => {\r\n      //   const question = JSON.stringify(exptObj[q]);\r\n      //   return (\r\n      //     <div>\r\n      //       {question}\r\n      //     </div>\r\n      //   )\r\n      // })\r\n      const JSONString = JSON.stringify(exptObj);\r\n      return (\r\n        <div>\r\n          {JSONString}\r\n        </div>\r\n      )\r\n    }\r\n    // const exptName = exptObj.exptName;\r\n    // const info = JSON.stringify(exptObj);\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Configuration data: </b>\r\n        <br /><br />\r\n        {this.showExptData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  getColNames,\r\n  getColsData,\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass PartStudyData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.makeArr = this.makeArr.bind(this);\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n    this.getIndex = this.getIndex.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + username + \"/collections\")\r\n    .then(res => {\r\n      const nameArr = res.data;\r\n      const partColNames = nameArr.filter(name => \r\n        name != \"info\" && name != \"itemData\" && name.includes(studyName));\r\n      console.log(partColNames);\r\n      partColNames.map(colName => this.props.getColsData(username, colName));\r\n      this.props.getStudyInfo(username, studyName);\r\n    })\r\n  }\r\n\r\n  flattenObj(obj) {\r\n    var flattendObj = {};\r\n    const flattenObject = (obj, keyName) => {\r\n      Object.keys(obj).forEach(key => {\r\n        var newKey = `${keyName}.${key}` \r\n        if (typeof obj[key] === \"object\") {\r\n          // calling the function again\r\n          flattenObject(obj[key], newKey);\r\n        } else {\r\n          flattendObj[newKey] = obj[key];\r\n        }\r\n      });\r\n    };\r\n    flattenObject(obj, \"\");\r\n\r\n    function renameKey (obj, oldKey, newKey) {\r\n      obj[newKey] = obj[oldKey];\r\n      delete obj[oldKey];\r\n    }\r\n\r\n    const allKeys = Object.keys(flattendObj);\r\n    allKeys.map(k => {\r\n      const oldKey = k;\r\n      const newKey = oldKey.substr(1, oldKey.length);\r\n      renameKey(flattendObj, oldKey, newKey)\r\n    })\r\n\r\n    return flattendObj;\r\n  } \r\n\r\n  makeArr() {\r\n    if (!Object.keys(this.props.colsData).length == 0) {\r\n      // console.log(this.props.colData);\r\n      var arr = [];\r\n      var ids = [];\r\n      const arrToProcess = this.props.colsData;\r\n      // console.log(arrToProcess);\r\n      arrToProcess.forEach(item => {\r\n        const id = item.participantID;\r\n        const keysInItem = Object.keys(item);\r\n        const qKeys = \r\n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\r\n        \r\n        if (ids.includes(id)) {\r\n          // find that id in arr and update the item\r\n          arr.forEach(ele => {\r\n            if (ele.participantID == id) {\r\n              const prevData = ele;\r\n              qKeys.forEach(k => prevData[k] = item[k]);\r\n              ele = prevData;\r\n            }\r\n          })\r\n        } else {\r\n          // make a new item, put it in arr, and put id in ids \r\n          const doc = {};\r\n          doc[\"participantID\"] = id;\r\n          qKeys.forEach(k => doc[k] = item[k]);\r\n          arr.push(doc);\r\n          ids.push(id);\r\n          // console.log(doc);\r\n        }\r\n      })\r\n      // arr.map(ele => ele = this.flattenObj(ele));\r\n      arr.map(ele => {\r\n        const newEle = this.flattenObj(ele);\r\n        const i = arr.indexOf(ele);\r\n        arr[i] = newEle;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  showJSONData() {\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return arr.map(ele => {\r\n        const line = JSON.stringify(ele);\r\n        return (\r\n          <div>\r\n            <br/>\r\n            {line}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  getIndex() {\r\n    const studyName = this.props.match.params.studyName;\r\n    if (!this.props.experiments.length == 0) {\r\n      var allIndex = [];\r\n      this.props.experiments.map(item => {\r\n        allIndex.push(item[\"index\"]);\r\n      });\r\n\r\n      let str = \"\";\r\n      allIndex.map(item => {\r\n        const objKeys = Object.keys(item);\r\n        objKeys.map(key => {\r\n          const line = key.toString() + \": \" + item[key].toString() + \"\\n\"\r\n          str += line;\r\n        });\r\n      });\r\n\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([str], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = studyName + \"Legend.txt\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n      console.log(file);\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    const file_name = username + \"_\" + studyName + \"_data.csv\";\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return (\r\n        <div>\r\n          <h2>All Participant Data from Study: {studyName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br /><br />\r\n          <button>\r\n            <CSVLink data={arr} filename={file_name}>\r\n              Download Data as CSV\r\n            </CSVLink>\r\n          </button>\r\n          <br/><br/>\r\n          <button onClick={this.getIndex}>Download Legend</button>\r\n          {this.showJSONData()}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>All Participant Data from Study: {studyName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br /><br />\r\n          It seems like there's no participant data yet... \r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nPartStudyData.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColsData: PropTypes.func.isRequired,\r\n  getColNames: PropTypes.func.isRequired,\r\n  colsData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colsData: state.dataFlow.colsData,\r\n  colNames: state.dataFlow.colNames,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColNames, getColsData, getStudyInfo }\r\n)(PartStudyData);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  getColData,\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass PartExptData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // finalObj: {}\r\n    };\r\n\r\n    this.makeArr = this.makeArr.bind(this);\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n    this.getIndex = this.getIndex.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n    this.props.getStudyInfo(username, studyName);\r\n  }\r\n\r\n  flattenObj(obj) {\r\n    var flattendObj = {};\r\n    const flattenObject = (obj, keyName) => {\r\n      Object.keys(obj).forEach(key => {\r\n        var newKey = `${keyName}.${key}` \r\n        if (typeof obj[key] === \"object\") {\r\n          // calling the function again\r\n          flattenObject(obj[key], newKey);\r\n        } else {\r\n          flattendObj[newKey] = obj[key];\r\n        }\r\n      });\r\n    };\r\n    flattenObject(obj, \"\");\r\n\r\n    function renameKey (obj, oldKey, newKey) {\r\n      obj[newKey] = obj[oldKey];\r\n      delete obj[oldKey];\r\n    }\r\n\r\n    const allKeys = Object.keys(flattendObj);\r\n    allKeys.map(k => {\r\n      const oldKey = k;\r\n      const newKey = oldKey.substr(1, oldKey.length);\r\n      renameKey(flattendObj, oldKey, newKey)\r\n    })\r\n\r\n    return flattendObj;\r\n  } \r\n\r\n  makeArr() {\r\n    if (!Object.keys(this.props.colData).length == 0) {\r\n      // console.log(this.props.colData);\r\n      var arr = [];\r\n      var ids = [];\r\n      const arrToProcess = this.props.colData;\r\n      console.log(arrToProcess);\r\n      arrToProcess.forEach(item => {\r\n        const id = item.participantID;\r\n        const keysInItem = Object.keys(item);\r\n        // switch statement here\r\n        const qKeys = \r\n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\r\n        \r\n        if (ids.includes(id)) {\r\n          // find that id in arr and update the item\r\n          arr.forEach(ele => {\r\n            if (ele.participantID == id) {\r\n              const prevData = ele;\r\n              qKeys.forEach(k => prevData[k] = item[k]);\r\n              ele = prevData;\r\n            }\r\n          })\r\n        } else {\r\n          // make a new item, put it in arr, and put id in ids \r\n          const doc = {};\r\n          doc[\"participantID\"] = id;\r\n          qKeys.forEach(k => doc[k] = item[k]);\r\n          arr.push(doc);\r\n          ids.push(id);\r\n          // console.log(doc);\r\n        }\r\n      })\r\n      // arr.map(ele => ele = this.flattenObj(ele));\r\n      arr.map(ele => {\r\n        const newEle = this.flattenObj(ele);\r\n        const i = arr.indexOf(ele);\r\n        arr[i] = newEle;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  showJSONData() {\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return arr.map(ele => {\r\n        const line = JSON.stringify(ele);\r\n        return (\r\n          <div>\r\n            <br/>\r\n            {line}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  getIndex() {\r\n    const exptName = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const thisExpt = \r\n      this.props.experiments\r\n        .filter(item => item[\"exptName\"] == this.props.match.params.exptName)[0]\r\n      const index = thisExpt[\"index\"];\r\n\r\n      let str = \"\"\r\n      const objKeys = Object.keys(index);\r\n      objKeys.map(key => {\r\n        const line = key.toString() + \": \" + index[key].toString() + \"\\n\"\r\n        str += line;\r\n      });\r\n\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([str], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = exptName + \"Legend.txt\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n      console.log(file);\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    const file_name = username + \"_\" + studyName + \"_\" + exptName + \"_data.csv\";\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      console.log(arr);\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/>\r\n          <h4>Participants data: </h4> \r\n          {/* <button onClick={this.downloadData}>See data as csv</button> */}\r\n          <button>\r\n            <CSVLink data={arr} filename={file_name}>\r\n              Download Data as CSV\r\n            </CSVLink>\r\n          </button>\r\n          <br/><br/>\r\n          <button onClick={this.getIndex}>Download Legend</button><br/>\r\n          \r\n          <div>\r\n            {this.showJSONData()}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/><br/>\r\n          It seems like there's no participant data yet...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nPartExptData.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n\r\n  getStudyInfo: PropTypes.array.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData, getStudyInfo }\r\n)(PartExptData);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BuildExpt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exptName: '',\r\n      numOfItems: Number,\r\n      showItems: false,\r\n      itemToSelect: [\"slider\", \"normal curve\"]\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.preBuild = this.preBuild.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.toggleShowItems = this.toggleShowItems.bind(this);\r\n    this.inputNumItems = this.inputNumItems.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showItem() {\r\n    console.log(this.state.numOfItems);\r\n    const inputs = [];\r\n    for (let i = 1; i <= this.state.numOfItems; i ++) {\r\n      inputs.push(\r\n        <div>\r\n          Hello\r\n        </div>\r\n      )\r\n    }\r\n    return inputs;\r\n  }\r\n\r\n  toggleShowItems() {\r\n    this.setState({ showItems: true })\r\n  }\r\n\r\n  inputNumItems() {\r\n    return (\r\n      <div>\r\n        How many items do you want to build? <br/><br/>\r\n        <input type=\"text\" name=\"numOfItems\" value={this.state.numOfItems}\r\n          onChange={this.onChange}/> <p></p>\r\n        <button class=\"btn\" onClick={this.toggleShowItems}>Ok</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  preBuild() {\r\n    return (\r\n      <div className=\"container\">\r\n        Enter experiment name: <br/><br/>\r\n        <input type=\"text\" name=\"exptName\" value={this.state.exptName}\r\n          onChange={this.onChange}/> <br/><br/>\r\n          {\r\n            !this.state.showItems && \r\n            <this.inputNumItems/>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Experiment Builder</h3> <br/>\r\n        {this.preBuild()} <br/>\r\n        { this.state.showItems && <this.showItem/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BuildExpt;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport TabList from './components/TabList/TabList';\r\n\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport HomePage from './components/layout/HomePage';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login'\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ConfigStudy from './components/Study/ConfigStudy';\r\nimport ExptConfigs from './components/Study/ExptConfigs';\r\nimport PartStudyData from './components/Study/PartStudyData';\r\nimport PartExptData from './components/Study/PartExptData';\r\nimport BuildExpt from './components/Study/BuildExpt.jsx';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/survey-builder/\">\r\n        <div className=\"App\">\r\n          < NavBar />\r\n          <br/>\r\n          < Landing />\r\n          < Route exact path=\"/\" component={HomePage} />\r\n          < Route exact path=\"/register\" component={Register} />\r\n          < Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/:username/:studyName\"\r\n              component={ConfigStudy} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\r\n              component={TabList} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/newExpt\" \r\n              component={BuildExpt} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\r\n              component={ExptConfigs}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/participantsStudyData\"\r\n              component={PartStudyData}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsExptData\"\r\n              component={PartExptData}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}