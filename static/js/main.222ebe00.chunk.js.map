{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","actions/dataActions.js","components/TabBuilder/TabBuilder.jsx","components/items/Slider/SliderTab.jsx","components/items/StaticText/StaticText.js","components/items/NormalCurve/NormalCurve.jsx","components/items/NormalCurve/NormalCurveResearch.jsx","components/items/Threshold/Histogram.js","components/items/Threshold/HistogramResearch.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartStudyData.js","components/Study/PartExptData.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","colData","colsData","colNames","fileName","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","getStudyInfo","which_database","which_study","get","then","res","data","experiments","getColData","col_name","getColNames","TabBuilder","selectRef","React","createRef","importQRef","username","this","qType","allGroups","qSelectedToExptname","length","allExpts","renderOption","item","value","map","qKeys","Object","keys","filter","k","charAt","qArr","forEach","question","csvColName","mapQTypetoQKey","push","q","exptName","qOptions","label","name","id","ref","onClick","build","current","importQuestion","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","keyRef","checked","minVal","Number","maxVal","handleChange","bind","onChange","appendToKeysArr","delete","count","getCount","e","setState","target","imported","defaultQ","defaultMin","defaultMax","objType","nameType","qNum","className","onInput","defaultValue","StaticText","qToDisplay","editing","cols","rows","NormalCurve","rectRef","svgRef","areaRef","lengthRef","startPos1Ref","startPos2Ref","graph1keyRef","graph2keyRef","colNumValRef","radiusRef","ticksRef","checkBoxRef","toggleTriRef1","toggleTriRef2","questionKeyRef","legendKey1Ref","legendKey2Ref","color1Ref","color2Ref","dotReturn","curveArea","triMouseDown","triDrag","triUp","lengthSubmit","toggleXVals","alterStartPos1","alterStartPos2","svgColReturn","establishStateData","updateRadius","updateTicks","checkChange","toggleTri1","toggleTri2","returnTri1","returnTri2","changeColor1","changeColor2","changeJSON","edgeLim","unitHeight","circRad","len1","len2","distancing","height","Math","ceil","colNumInit","internalLength","edgeCol","edgeLength","ceilDist","axisStart","axisStartCol","axisWidth","axisEndCol","axisEnd","triCent1","triCent2","triCentCol1","triCentCol2","variance1","abs","variance2","startPos1","distancing1","col11","col12","variance","endCol","colNumVal","tickNum","tickDist","rangeVal","startPos2","distancing2","col21","col22","fixCurve1","fixCurve2","axisLength","parseInt","color1","color2","maxLength","x","y","isDown","rectX","down","svgWidth","svgHeight","svgX","colValHeiS","colValHeiS2","mousePointerRange","triDown","colLim1","round","colLim2","overlapVals","colNum","lowVal","showCoors","xPos","yPos","xPosOrig","CX","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","points","onMouseDown","num","dragger","distFromCent","svg","pt","createSVGPoint","clientX","svgP","matrixTransform","getScreenCTM","inverse","preventDefault","col","colRelative","svgPre","ptPre","svgPPre","prevState","svgColPlacement","innerHTML","key","console","log","newLength","col1","col2","newPos","radius","newData","newTickCount","colVal","Boolean","newColor","defaultVal","defaultCurveVal","dataType","onMouseMove","onMouseUp","width","Array","row","dotReturn2","tick","textAnchor","class","style","backgroundColor","updateColVal","for","NormalCurveResearch","handleDrop","handleSelectedFile","dataReceived","fileNames","setFileNames","fileChosen","jsonData","content","saveFile","acceptedFiles","file","dataFlowColData","itemType","includes","alert","reader","FileReader","onabort","onerror","onload","fileText","result","JSON","parse","files","readAsText","fileContent","unshift","fileOptions","onDrop","accept","getRootProps","getInputProps","Histogram","graphRef","sliderPos","drawChart","d3","append","attr","selectAll","enter","d","i","text","vertAlign","position","margin","top","step","HistogramResearch","histogramFiles","TabList","builderFunction","tabDefine","arr","children","tab","toString","curOutput","output","newCount","complete","deleted","expt","myRef","submitRef","nameRef","outputCreate","checkOutput","configDataToItem","match","params","location","newExpt","thisExpt","exptObj","find","questionKey","thisQKey","questionToDisplay","newDelete","newFile","concat","obj","int","elem","lowNum","isNaN","highNum","index","indexOf","exptItem","finalObj","sendFile","put","response","window","reload","catch","error","studyLink","method","opacity","history","dataFlowDBInfo","dataFlowFileName","post","Navbar","userIsLoggedIn","Landing","HomePage","href","Register","onSubmit","newUser","password","password2","registerUser","nextProps","noValidate","classnames","invalid","userExists","userData","err","withRouter","Login","loginUser","userNotFound","pwdIncorrect","setItem","jwt_decode","Dashboard","onLogoutClick","onAddStudy","onDeleteStudy","getDBInfo","link","addStudyName","confirm","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployed","deployExpts","changeState","onDeploy","onChecked","onDeleteExperiment","randomize","putRandomize","thisSudyDeployedExpt","split","database_name","nowState","dataToPut","processColNames","condition","surveyLink","exptDataLink","partExptDataLink","exptPartLink","previewLink","dbLink","exptBuilderLink","pathname","colName","currentTarget","conditionInfo","linkInfo","createExptCol","expt_name","exptNames","difference","color","padding","partStudyDataLink","getExptNames","deploy","which_expt","saveAddInfo","infoType","info","ExptConfigs","JSONString","stringify","showExptData","PartStudyData","makeArr","showJSONData","getIndex","partColNames","getColsData","flattendObj","flattenObject","keyName","newKey","oldKey","substr","renameKey","ids","participantID","ele","prevData","doc","newEle","flattenObj","line","allIndex","str","element","document","createElement","Blob","URL","createObjectURL","download","body","appendChild","click","file_name","filename","PartExptData","arrToProcess","jwtToken","currentTime","Date","now","exp","App","basename","NavBar","exact","path","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.222ebe00.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \r\n// if the user is already logged in \r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","// types are how actions communicate with reducers\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\r\nexport const GET_DB_INFO = \"GET_DB_INFO\";\r\n// we need to merge the following two items into one\r\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\r\nexport const GET_STUDY_INFO_RANDOMIZE = \"GET_STUDY_INFO_RANDOMIZE\";\r\nexport const GET_COL_DATA = \"GET_COL_DATA\";\r\nexport const GET_COLS_DATA = \"GET_COLS_DATA\";\r\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";\r\n\r\nexport const STORE_FILENAME = \"STORE_FILENAME\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const SEND_FILE = \"SEND_FILE\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\"); \r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default: return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: return action.payload;\r\n        default: return state;\r\n    }\r\n}","import {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COLS_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  studyName: '',\r\n  dbInfo: [],\r\n  studyInfo: [],\r\n  colData: [],\r\n  colsData: [],\r\n  colNames: [],\r\n  // files: []\r\n  fileName: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_STUDY_NAME:\r\n      return {\r\n        ...state,\r\n        studyName: action.payload\r\n      };\r\n    case GET_DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_STUDY_INFO:\r\n      return {\r\n        ...state,\r\n        studyInfo: action.payload\r\n      };\r\n    case GET_COL_DATA:\r\n      return {\r\n        ...state,\r\n        colData: action.payload\r\n      };\r\n    case GET_COLS_DATA:\r\n      return {\r\n        ...state,\r\n        colsData: [...state.colsData, action.payload]\r\n      };\r\n    case GET_COL_NAMES:\r\n      return {\r\n        ...state,\r\n        colNames: action.payload\r\n      };\r\n    // case STORE_FILE:\r\n    //   return {\r\n    //     ...state,\r\n    //     files: [...state.files, action.payload]\r\n    //   };\r\n    case STORE_FILENAME:\r\n      return {\r\n        ...state,\r\n        fileName: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport dataReducer from \"./dataReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  dataFlow: dataReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\nimport {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_STUDY_INFO_RANDOMIZE,\r\n  GET_COL_DATA,\r\n  GET_COLS_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME,\r\n  SEND_FILE\r\n} from \"./types\";\r\n\r\nexport const addStudyName = (which_database, study_name) => dispatch => {\r\n  const dataToPost = {\r\n    studyName: study_name,\r\n    experiments: []\r\n  };\r\n  // note that the goal of the following step is to show researchers \r\n  // the name of the study they have just created. This is totally doable\r\n  // via a simple this.state written in Dashboard. However, putting it here\r\n  // just makes things more organized and fits well with the rest of the \r\n  // redux structure I have used to create this demo\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\r\n      dataToPost)\r\n    .then(entry => {\r\n      // console.log(entry);\r\n      dispatch({\r\n        type: ADD_STUDY_NAME,\r\n        payload: entry.data.studyName\r\n      });\r\n      alert(\"Study [\" + study_name + \"] is created.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getDBInfo = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_DB_INFO,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      '/info/studyName-' + which_study)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_STUDY_INFO,\r\n        payload: res.data.experiments\r\n      });\r\n    })\r\n}\r\n\r\nexport const saveAddInfo = (which_database, study_name, expt_name, infoType, info) => dispatch => {\r\n  axios\r\n    .put('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      '/info/studyName-' + study_name + '/experiments/exptName-' + expt_name + '/' + infoType,\r\n      info)\r\n    .then(res => {\r\n      console.log(res.data);\r\n    })\r\n} \r\n\r\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\r\n      \"/createCol/\" + col_name)\r\n    .then(res => {\r\n      // we can potentially improve the alert box\r\n      alert(\"Experiment [\" + which_expt + \"] is deployed.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getColData = (which_database, col_name) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      \"/\" + col_name)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_DATA,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getColsData = (which_database, col_name) => dispatch => {\r\n  axios\r\n  .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n    \"/\" + col_name)\r\n  .then(res => {\r\n    res.data.forEach(doc => {\r\n      dispatch({\r\n        type: GET_COLS_DATA,\r\n        payload: doc\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport const getColNames = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_NAMES,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const storeFileName = (fileName) => dispatch => {\r\n  dispatch({\r\n    type: STORE_FILENAME,\r\n    payload: fileName\r\n  })\r\n}\r\n\r\nexport const sendFile = (which_database, file) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      \"/itemData\", file)\r\n    .then(res => {\r\n      console.log(\"Data sent to DB\");\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass TabBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectRef = React.createRef();\r\n    this.importQRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // username and studyName are passed from TabList.jsx\r\n    const username = this.props.username;\r\n    const studyName = this.props.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n  }\r\n\r\n  mapQTypetoQKey(qType) {\r\n    switch(qType) {\r\n      case \"slider\":\r\n        return \"slider-question-key\"\r\n      case \"static-text\":\r\n        return \"static-text-key\"\r\n      case \"normal-curve\":\r\n        return \"normal-curve-question-key\"\r\n      case \"threshold\":\r\n        return \"threshold-key\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n\r\n  // ###TODO###: add options here when you add your experiment type\r\n  render() {\r\n    var allGroups;\r\n    // this object contains the mapping from questions to their experiment\r\n    var qSelectedToExptname = {};\r\n    if (!this.props.experiments.length == 0) {\r\n      const allExpts = this.props.experiments;\r\n      // console.log(allExpts);\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      // per experiment\r\n      // input: item represents a JSON object containing the configuration data\r\n      //        of a specific experiment \r\n      const renderGroup = item => {\r\n        const qKeys = Object.keys(item).filter(\r\n          k => k.charAt(0) == \"q\");\r\n        // qArr contains all csvColNames of all questions in an experiment\r\n        var qArr = [];\r\n        qKeys.forEach(k => {\r\n          const question = item[k]; \r\n          const qKey = this.mapQTypetoQKey(question[\"Type\"]);\r\n          const csvColName = question[qKey];\r\n          qArr.push(csvColName);\r\n        })\r\n        // qArr.shift();\r\n        qArr.map(q => qSelectedToExptname[q] = item.exptName);\r\n        const qOptions = qArr.map(renderOption);\r\n        return (\r\n          <optgroup label={item.exptName}>\r\n            {qOptions}\r\n          </optgroup>\r\n        )\r\n      }\r\n      allGroups = allExpts.map(renderGroup);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <br/>\r\n        <span>Choose what element to add next</span><br />\r\n        <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\r\n          {/* <option value=\"slider\">Slider</option> */}\r\n          <option value=\"static-text\">Static Text</option>\r\n          <option value=\"normal-curve\">Normal Curve</option>\r\n          <option value=\"threshold\">Threshold</option>\r\n        </select>\r\n        <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\r\n        <br/><br/>\r\n        OR\r\n        <br/><br/>\r\n        {\r\n          this.props.experiments.length == 0 \r\n          ? \r\n          <div>\r\n            Cannot import question from another experiment because there are no \r\n            experiments in this study yet.\r\n          </div>\r\n          :\r\n          <div>\r\n            <span>Import a question from another experiment in this study</span><br/>\r\n            <select name=\"importQue\" id=\"importQue\" ref={this.importQRef}>\r\n              {allGroups}\r\n            </select>\r\n            <button onClick={() => \r\n              this.props.importQuestion(\r\n                qSelectedToExptname[this.importQRef.current.value], \r\n                this.importQRef.current.value)}>\r\n              +\r\n            </button>\r\n          </div>\r\n        }\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nTabBuilder.propTypes = {\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  experiments: state.dataFlow.studyInfo\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(TabBuilder);","import React, { Component } from 'react';\r\nimport './SliderTab.css';\r\n\r\nclass SliderTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sliderRef = React.createRef();\r\n    this.outputRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.state = { min: 1, max: 100 }\r\n    this.keyRef = React.createRef();\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.imported) {\r\n      this.handleChange(\"Question\", this.props.defaultQ, this.props.count);\r\n      this.handleChange(\"lowRange\", this.props.defaultMin, this.props.count);\r\n      this.handleChange(\"highRange\", this.props.defaultMax, this.props.count);\r\n    }\r\n  }\r\n\r\n  appendToKeysArr(objType, nameType, csvColName, count) {\r\n    this.props.appendToKeysArr(objType, nameType, csvColName, count);\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    return (\r\n      <form className=\"unit\">\r\n        <br/>\r\n        Question #{qNum} \r\n        <br/><br/>\r\n        <p>Enter your question below:\r\n        <br/>\r\n        <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} \r\n          ref={this.qRef} type=\"text\" defaultValue={this.props.defaultQ}/></p><br/>\r\n        {/* { this.qRef.current.value == null ? this.props.min : this.qRef.current.value } */}\r\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\r\n        {this.state.maxVal} <br/>\r\n        <p>Minimum: \r\n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n          ref={this.minRef} type=\"text\" \r\n          defaultValue={this.props.defaultMin}\r\n          // name=\"minVal\" value={this.state.minVal} onChange={this.onChange}\r\n          /></p><br/>\r\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\r\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n          ref={this.maxRef} type=\"text\" \r\n          defaultValue={this.props.defaultMax}\r\n          // name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}\r\n          /></p>\r\n        <br/><br/>\r\n        What csv column name do you want to assign to this question? <br/>\r\n        <b>Please use letters only, and the name must be unique.</b> <br/>\r\n        Recommedation: include your experiment name, this question number \r\n        ({qNum}), and the question type (slider)\r\n        <br/>\r\n        <input type=\"text\" ref={this.keyRef} \r\n          onInput={() => {\r\n            // this.appendToKeysArr(\r\n            //   \"csvColNames\", \r\n            //   \"slider-question-key\", \r\n            //   this.keyRef.current.value, \r\n            //   this.props.count);\r\n            this.handleChange(\"slider-question-key\", this.keyRef.current.value, this.props.count)\r\n            // this.appendToKeysArr(\r\n            //   \"keyValuePairs\",\r\n              \r\n            // )\r\n          }}/>\r\n        <br/><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderTab;","import React, { Component } from 'react';\r\n\r\nclass StaticText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.qRef = React.createRef();\r\n    this.keyRef = React.createRef();\r\n\r\n    this.state = {\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.imported) {\r\n      this.handleChange(\"Static Text\", this.props.qToDisplay[\"Static Text\"], this.props.count);\r\n    }; \r\n    if (this.props.editing) {\r\n      this.handleChange(\"static-text-key\", this.props.qToDisplay[\"static-text-key\"], this.props.count);\r\n    }; \r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    return (\r\n      <form className=\"unit\">\r\n        <br/>\r\n        Question #{qNum} \r\n        <br/>\r\n        Enter your static text below: <br/>\r\n        {\r\n          this.props.imported\r\n          ?\r\n          <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \r\n          defaultValue={this.props.qToDisplay[\"Static Text\"]}\r\n          onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\r\n          </textarea>\r\n          :\r\n          <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \r\n          onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\r\n          </textarea>\r\n        }\r\n        <br/><br/>\r\n        What csv column name do you want to assign to this question? <br/>\r\n        <b>Please use letters only, the name must be unique, leave no space between letters.</b> <br/>\r\n        Recommedation: include your experiment name, this question number \r\n        ({qNum}), and the question type (staticText)\r\n        <br/>\r\n        {\r\n          this.props.editing \r\n          ? \r\n          <input type=\"text\" ref={this.keyRef} \r\n          defaultValue={this.props.qToDisplay[\"static-text-key\"]}\r\n          onInput={() => this.handleChange(\"static-text-key\", this.keyRef.current.value, this.props.count)}/>\r\n          :\r\n          <input type=\"text\" ref={this.keyRef} \r\n          onInput={() => this.handleChange(\"static-text-key\", this.keyRef.current.value, this.props.count)}/>\r\n        }\r\n        <br/><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StaticText;","import React, { Component } from 'react';\r\nimport './NormalCurve.css';\r\n\r\nclass NormalCurve extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.sliderRef = React.createRef();\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n    this.lengthRef = React.createRef();\r\n    this.startPos1Ref = React.createRef();\r\n    this.startPos2Ref = React.createRef();\r\n    this.graph1keyRef = React.createRef();\r\n    this.graph2keyRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.colNumValRef = React.createRef();\r\n    this.radiusRef = React.createRef();\r\n    this.ticksRef = React.createRef();\r\n    this.checkBoxRef = React.createRef();\r\n    this.toggleTriRef1 = React.createRef();\r\n    this.toggleTriRef2 = React.createRef();\r\n    this.questionKeyRef = React.createRef();\r\n    this.legendKey1Ref = React.createRef();\r\n    this.legendKey2Ref = React.createRef();\r\n    this.color1Ref = React.createRef();\r\n    this.color2Ref = React.createRef();\r\n\r\n    this.dotReturn = this.dotReturn.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.triMouseDown = this.triMouseDown.bind(this);\r\n    this.triDrag = this.triDrag.bind(this);\r\n    this.triUp = this.triUp.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.lengthSubmit = this.lengthSubmit.bind(this);\r\n    this.toggleXVals = this.toggleXVals.bind(this);\r\n    this.alterStartPos1 = this.alterStartPos1.bind(this);\r\n    this.alterStartPos2 = this.alterStartPos2.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    this.establishStateData = this.establishStateData.bind(this);\r\n    this.updateRadius = this.updateRadius.bind(this);\r\n    this.updateTicks = this.updateTicks.bind(this);\r\n    this.checkChange = this.checkChange.bind(this);\r\n    this.toggleTri1 = this.toggleTri1.bind(this);\r\n    this.toggleTri2 = this.toggleTri2.bind(this);\r\n    this.returnTri1 = this.returnTri1.bind(this);\r\n    this.returnTri2 = this.returnTri2.bind(this);\r\n    this.changeColor1 = this.changeColor1.bind(this);\r\n    this.changeColor2 = this.changeColor2.bind(this);\r\n    this.changeJSON = this.changeJSON.bind(this);\r\n\r\n    this.state = this.establishStateData(this.props.data);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.curveArea();\r\n  }\r\n\r\n  establishStateData(data) {\r\n    // console.log(\"establishStateData()\", new Date());\r\n    const unitHeight = data[\"max-height\"];\r\n    const circRad = data[\"circle-radius\"];\r\n    const len1 = data[\"len1\"];\r\n    const len2 = data[\"len2\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n\r\n    const colNumInit = data[\"axis-length\"];\r\n    const internalLength = colNumInit * distancing;\r\n    const edgeCol = Math.ceil(Math.max(len1, len2) / 2);\r\n    const edgeLength = Math.max(len1, len2) * distancing;\r\n\r\n    const ceilDist = height - 50;\r\n    const length = edgeLength + internalLength;\r\n    const colNum = Math.ceil(length / distancing);\r\n\r\n    const axisStart = Math.ceil(edgeLength / 2);\r\n    const axisStartCol = edgeCol;\r\n    const axisWidth = length - ((len1 / 2 + 1) * distancing + (len2 / 2 + 1) * distancing - 1);\r\n    const axisEndCol = internalLength / distancing;\r\n    const axisEnd = axisEndCol * distancing;\r\n\r\n    const triCent1 = Math.ceil(0.5 * len1) * distancing;\r\n    const triCent2 = Math.ceil(0.5 * len2) * distancing;\r\n    const triCentCol1 = Math.ceil(triCent1 / distancing);\r\n    const triCentCol2 = Math.ceil(triCent2 / distancing);\r\n\r\n    const variance1 = Math.abs(Math.ceil(len1 / 2) - axisStartCol);\r\n    const variance2 = Math.abs(Math.ceil(len2 / 2) - axisStartCol);\r\n\r\n    let edgeLim;\r\n    if (\"edgeLim\" in data) {\r\n      edgeLim = data[\"edgeLim\"];\r\n    }\r\n    else {\r\n      edgeLim = true;\r\n    }\r\n\r\n    const startPos1 = data[\"startPos1\"];\r\n    let distancing1 = startPos1 + variance1 - 1;\r\n    let col11 = startPos1 + variance1;\r\n    let col12 = startPos1 + len1 - 1;\r\n    let col11Rel = startPos1;\r\n\r\n    let variance = axisStartCol - variance1;\r\n    if (edgeLim) {\r\n      if (col11 < axisStartCol - 1) {\r\n        distancing1 = (axisStartCol - 1) * distancing;\r\n        col11 = 0;\r\n        col12 = len1 - 1;\r\n      }\r\n      else if (col11 + len1 + 1 > axisStartCol + axisEndCol) {\r\n        const endCol = axisEndCol - len1;\r\n        distancing1 = distancing * (axisStartCol + endCol - 1);\r\n        col11 = endCol;\r\n        col12 = endCol + len2 - 1;\r\n      }\r\n      else {\r\n        distancing1 = distancing * col11;\r\n        col11 = col11Rel - variance;\r\n        col12 = col11Rel - variance + len1 - 1;\r\n      }\r\n    }\r\n    else {\r\n      // col11 = col11 - 1;\r\n      if (col11 + triCentCol1 < axisStartCol) {\r\n        distancing1 = (variance1) * distancing;\r\n        col11 = 0;\r\n        col12 = len1 - 1;\r\n      }\r\n      else if (col11 + triCentCol1 > axisStartCol + axisEndCol) {\r\n        distancing1 = distancing * (variance1 + axisEndCol);\r\n        col11 = axisEndCol;\r\n        col12 = axisEndCol + len1 - 1;\r\n      }\r\n      else {\r\n        distancing1 = distancing * (col11);\r\n        col11 = col11Rel;\r\n        col12 = col11Rel + len1 - 1;\r\n      }\r\n    }\r\n\r\n    const startPos2 = data[\"startPos2\"];\r\n    let distancing2 = startPos2 + variance2 - 1;\r\n    let col21 = startPos2 + variance2;\r\n    let col22 = startPos2 + len2 - 1;\r\n    let col21Rel = startPos2;\r\n\r\n    variance = axisStartCol - variance2;\r\n    if (edgeLim) {\r\n      if (col21 < axisStartCol - 1) {\r\n        distancing2 = (axisStartCol - 1) * distancing;\r\n        col21 = 0;\r\n        col22 = len2 - 1;\r\n      }\r\n      else if (col21 + len2 + 1 > axisStartCol + axisEndCol) {\r\n        const endCol = axisEndCol - len2;\r\n        distancing2 = distancing * (axisStartCol + endCol);\r\n        col21 = endCol;\r\n        col22 = endCol + len2 - 1;\r\n      }\r\n      else {\r\n        distancing2 = distancing * col21;\r\n        col21 = col21Rel - variance;\r\n        col22 = col21Rel - variance + len2 - 1;\r\n      }\r\n    }\r\n    else {\r\n      // col21 = col21 - 1;\r\n      if (col21 + triCentCol2 < axisStartCol) {\r\n        distancing2 = (variance2) * distancing;\r\n        col21 = 0;\r\n        col22 = len2 - 1;\r\n      }\r\n      else if (col21 + triCentCol2 > axisStartCol + axisEndCol) {\r\n        distancing2 = distancing * (variance2 + axisEndCol - 1);\r\n        col21 = axisEndCol;\r\n        col22 = axisEndCol + len2 - 1;\r\n      }\r\n      else {\r\n        distancing2 = distancing * (col21);\r\n        col21 = col21Rel;\r\n        col22 = col21Rel + len2 - 1;\r\n      }\r\n    }\r\n\r\n    let colNumVal;\r\n    if (\"colNumVal\" in data) {\r\n      colNumVal = this.props.data[\"colNumVal\"];\r\n    }\r\n    else {\r\n      colNumVal = 1;\r\n    }\r\n\r\n    let tickNum;\r\n    let tickDist;\r\n    let rangeVal;\r\n    const axisLength = colNumInit * colNumVal;\r\n    if (\"tickNum\" in data && axisLength % (parseInt(data[\"tickNum\"]) + 1) === 0) {\r\n      tickNum = parseInt(data[\"tickNum\"]);\r\n      tickDist = colNumInit * distancing / (tickNum + 1);\r\n      rangeVal = axisLength / (tickNum + 1);\r\n    }\r\n    else {\r\n      tickNum = 0;\r\n      tickDist = axisLength;\r\n      rangeVal = axisLength;\r\n    }\r\n\r\n    let fixCurve1;\r\n    if (\"fixCurve1\" in data) {\r\n      fixCurve1 = data[\"fixCurve1\"];\r\n    }\r\n    else {\r\n      fixCurve1 = false;\r\n    }\r\n\r\n    let fixCurve2;\r\n    if (\"fixCurve2\" in data) {\r\n      fixCurve2 = data[\"fixCurve2\"];\r\n    }\r\n    else {\r\n      fixCurve2 = false;\r\n    }\r\n\r\n    let maxLength = len1;\r\n    if (len2 > len1) {\r\n      maxLength = len2;\r\n    }\r\n\r\n    let color1;\r\n    if (\"color1\" in data) {\r\n      color1 = data[\"color1\"];\r\n    }\r\n    else {\r\n      color1 = \"CornflowerBlue\";\r\n    }\r\n\r\n    let color2;\r\n    if (\"color2\" in data) {\r\n      color2 = data[\"color2\"];\r\n    }\r\n    else {\r\n      color2 = \"Crimson\";\r\n    }\r\n\r\n    return {\r\n      axisLength: data[\"axis-length\"],\r\n      startPos1: data[\"startPos1\"],\r\n      startPos2: data[\"startPos2\"],\r\n      x: 0, y: 0, isDown: false,\r\n      rectX: 12.5,\r\n      down: false,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      svgX: 6,\r\n      len1: len1,\r\n      colValHeiS: data[\"colValHeiS\"],\r\n      len2: len2,\r\n      colValHeiS2: data[\"colValHeiS2\"],\r\n      distancing: distancing,\r\n      distancing1 : distancing1,\r\n      distancing2: distancing2,\r\n      triCent1: triCentCol1 * distancing,\r\n      triCentCol1: triCentCol1,\r\n      triCent2: triCentCol2 * distancing,\r\n      triCentCol2: triCentCol2,\r\n      mousePointerRange: 0,\r\n      triDown: false,\r\n      col11: col11,\r\n      col12: col12,\r\n      col21: col21,\r\n      col22: col22,\r\n      colLim1: Math.round((length - (len1 * distancing)) / distancing),\r\n      colLim2: Math.round((length - (len2 * distancing)) / distancing),\r\n      overlapVals: data[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist,\r\n      axisStart: axisStart,\r\n      axisStartCol: axisStartCol,\r\n      axisWidth: axisWidth,\r\n      axisEnd: axisEnd,\r\n      axisEndCol: axisEndCol,\r\n      edgeCol: edgeCol,\r\n      edgeLength: edgeLength,\r\n      colNum: colNumInit,\r\n      variance1: variance1,\r\n      variance2: variance2,\r\n      lowVal: this.props.data[\"lowVal\"],\r\n      showCoors: true,\r\n      colNumVal: colNumVal,\r\n      tickNum: tickNum,\r\n      tickDist: tickDist,\r\n      rangeVal: rangeVal,\r\n      edgeLim: edgeLim,\r\n      fixCurve1: fixCurve1,\r\n      fixCurve2: fixCurve2,\r\n      maxLength: maxLength,\r\n      color1: color1,\r\n      color2: color2\r\n    };\r\n  }\r\n\r\n  dotReturn(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing1 + this.state.distancing * (xPosOrig + 1) + this.state.circRad - this.state.maxLength + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    var hard = \r\n    <circle \r\n    // onMouseEnter={e => this.displayTag1(e)}\r\n    // onMouseLeave={e => this.hideTag1(e)}\r\n    // onMouseMove={e => this.updateTag1(e)} \r\n    className=\"icon\" \r\n    stroke={this.state.color1} \r\n    fill={this.state.color1}\r\n    fillOpacity=\"0.3\" \r\n    strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}>\r\n    </circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  dotReturn2(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing2 + this.state.distancing * (xPosOrig + 1) + this.state.circRad - this.state.maxLength + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    var hard = \r\n    <circle \r\n    // onMouseEnter={e => this.displayTag2(e)}\r\n    // onMouseLeave={e => this.hideTag2(e)}\r\n    // onMouseMove={e => this.updateTag2(e)} \r\n    className=\"icon\" \r\n    stroke={this.state.color2}\r\n    fill={this.state.color2}\r\n    fillOpacity=\"0.3\" \r\n    strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}>\r\n\r\n    </circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  returnTri1() {\r\n    if (this.state.fixCurve1) {\r\n      return (null);\r\n    }\r\n    else {\r\n      return (\r\n        <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent1 + this.state.distancing1 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\r\n          />\r\n      )\r\n    }\r\n  }\r\n\r\n  returnTri2() {\r\n    if (this.state.fixCurve2) {\r\n      return (null);\r\n    }\r\n    else {\r\n      return (\r\n        <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent2 + this.state.distancing2 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\r\n          />\r\n      )\r\n    }\r\n  }\r\n\r\n  svgColReturn(e, dragger) {\r\n    let distFromCent;\r\n    let variance;\r\n    if (dragger === 1) {\r\n      distFromCent = this.state.triCentCol1;\r\n      variance = this.state.variance1;\r\n    }\r\n    else if (dragger === 2) {\r\n      distFromCent = this.state.triCentCol2;\r\n      variance = this.state.variance2;\r\n    }\r\n    var svg = this.svgRef.current;\r\n    var pt = svg.createSVGPoint();\r\n    pt.x = e.clientX;\r\n    var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    e.preventDefault();\r\n    var x = svgP.x - distFromCent + this.state.mousePointerRange;\r\n    var col = Math.round((x - this.state.axisStart) / this.state.distancing) + variance;\r\n    var colRelative = Math.round((x - this.state.axisStart) / this.state.distancing) + 1;\r\n    // console.log(col, colRelative, variance);\r\n    return [col, colRelative];\r\n  }\r\n\r\n  svgColPlacement(col, colRelative, dragger) {\r\n    // console.log(col);\r\n    // console.log(this.state.axisStartCol);\r\n    // console.log(this.state.axisStart);\r\n    if (this.state.edgeLim) {\r\n      if (dragger === 2) {\r\n        const variance = this.state.axisStartCol - this.state.variance2;\r\n        if (col < this.state.axisStartCol - 1) {\r\n          // console.log(\"edge\");\r\n          this.setState({ distancing2: (this.state.axisStartCol - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n        }\r\n        else if (col + this.state.len2 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          const endCol = this.state.axisEndCol - this.state.len2;\r\n          this.setState({ distancing2: this.state.distancing * (this.state.axisStartCol + endCol - 1), col21: endCol, col22: endCol + this.state.len2 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative - variance, col22: colRelative - variance + this.state.len2 - 1 });\r\n        }\r\n        this.curveArea();\r\n      }\r\n      else if (dragger === 1) {\r\n        const variance = this.state.axisStartCol - this.state.variance1;\r\n        if (col < this.state.axisStartCol - 1) {\r\n          this.setState({ distancing1: (this.state.axisStartCol - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n        }\r\n        else if (col + this.state.len1 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          const endCol = this.state.axisEndCol - this.state.len1;\r\n          this.setState({ distancing1: this.state.distancing * (this.state.axisStartCol + endCol - 1), col11: endCol, col12: endCol + this.state.len1 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative - variance, col12: colRelative - variance + this.state.len1 - 1 });\r\n        }\r\n        // this.setState({ distancing2 : x })\r\n      }\r\n    }\r\n    else {\r\n      col = col - 1;\r\n      if (dragger === 2) {\r\n        // colRelative = colRelative - this.state.axisStartCol + this.state.variance2;\r\n        if (col + this.state.triCentCol2 < this.state.axisStartCol) {\r\n          this.setState({ distancing2: (this.state.variance2) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n        }\r\n        else if (col + this.state.triCentCol2 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          this.setState({ distancing2: this.state.distancing * (this.state.variance2 + this.state.axisEndCol - 1), col21: this.state.axisEndCol, col22: this.state.axisEndCol + this.state.len2 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative, col22: colRelative + this.state.len2 - 1 });\r\n        }\r\n        this.curveArea();\r\n      }\r\n      else if (dragger === 1) {\r\n        // colRelative = colRelative - this.state.axisStartCol + this.state.variance1;\r\n        if (col + this.state.triCentCol1 < this.state.axisStartCol) {\r\n          this.setState({ distancing1: (this.state.variance1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n        }\r\n        else if (col + this.state.triCentCol1 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          this.setState({ distancing1: this.state.distancing * (this.state.variance1 + this.state.axisEndCol - 1), col11: this.state.axisEndCol, col12: this.state.axisEndCol + this.state.len1 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative, col12: colRelative + this.state.len1 - 1 });\r\n        }\r\n        this.curveArea();\r\n      }\r\n    }\r\n  }\r\n\r\n  triMouseDown(e, num) {\r\n    if (e.type === \"mousedown\") {\r\n      // console.log(\"MOUSEDOWN\");\r\n      e.preventDefault();\r\n      var svgPre = this.svgRef.current;\r\n      // Set mousePointerRange so that we know the distance\r\n      // from the mouse tip to the x-value of the triangle\r\n      // tip\r\n      var ptPre = svgPre.createSVGPoint();\r\n      ptPre.x = e.clientX;\r\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n      if (num === 1) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\r\n        }));\r\n      }\r\n      else if (num === 2) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\r\n        }));\r\n      }\r\n      // console.log(this.state);\r\n    }\r\n  }\r\n\r\n  triDrag(e) {\r\n      e.preventDefault();\r\n      var dragger = this.state.triDown;\r\n      var cols = this.svgColReturn(e, dragger);\r\n      var col = cols[0];\r\n      var colRelative = cols[1]\r\n      // console.log(col);\r\n      this.setState(this.svgColPlacement(col, colRelative, dragger));\r\n      this.curveArea();\r\n  }\r\n\r\n  triUp(e) {\r\n    // console.log(\"UP\");\r\n    if (this.state.triDown) {\r\n      this.setState({ triDown: false });\r\n    }\r\n  }\r\n\r\n  curveArea() {\r\n    let col11;\r\n    let col12;\r\n    let col21;\r\n    let col22;\r\n\r\n    if (this.state.edgeLim) {\r\n      col11 = this.state.col11;\r\n      col12 = this.state.col12;\r\n      col21 = this.state.col21;\r\n      col22 = this.state.col22;\r\n    }\r\n    else {\r\n      col11 = this.state.col11 + this.state.variance1;\r\n      col12 = this.state.col12 + this.state.variance1;\r\n      col21 = this.state.col21 + this.state.variance2;\r\n      col22 = this.state.col22 + this.state.variance2;\r\n    }\r\n\r\n    if (col11 > col22 || col12 < col21) {\r\n      this.areaRef.current.innerHTML = 0;\r\n    }\r\n    else {\r\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\r\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(col22 - col11)];\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n  \r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    this.props.changeJSON(key, value);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.data[\"edgeLim\"]);\r\n    // importing component, save imported data\r\n    if (this.props.imported) {\r\n      this.handleChange(\"Question\", this.props.qToDisplay[\"Question\"], this.props.count);\r\n      this.handleChange(\"graph1key\", this.props.qToDisplay[\"graph1key\"], this.props.count);\r\n      this.handleChange(\"graph2key\", this.props.qToDisplay[\"graph2key\"], this.props.count);\r\n    };\r\n    if (this.props.editing) {\r\n      this.handleChange(\"normal-curve-question-key\", this.props.qToDisplay[\"normal-curve-question-key\"], this.props.count);\r\n      this.handleChange(\"normal-curve-legend-key1\", this.props.qToDisplay[\"normal-curve-legend-key1\"], this.props.count);\r\n      this.handleChange(\"normal-curve-legend-key2\", this.props.qToDisplay[\"normal-curve-legend-key2\"], this.props.count);\r\n    };\r\n  }\r\n\r\n  lengthSubmit() {\r\n    const newLength = this.lengthRef.current.value;\r\n    const internalLength = newLength * this.state.distancing;\r\n    const length = this.state.edgeLength + internalLength;\r\n\r\n    const axisEndCol = internalLength / this.state.distancing;\r\n    const axisEnd = axisEndCol * this.state.distancing;\r\n    // console.log(axisEndCol);\r\n\r\n    this.changeJSON(\"axis-length\", Number(newLength));\r\n\r\n    this.setState({\r\n      colNum: newLength,\r\n      svgWidth: length,\r\n      axisEndCol: axisEndCol,\r\n      axisEnd: axisEnd\r\n    });\r\n\r\n    const col1 = this.state.col11 - 1 + this.state.variance1;\r\n    this.svgColPlacement(col1, this.state.col11, 1);\r\n\r\n    const col2 = this.state.col21 - 1 + this.state.variance2;\r\n    this.svgColPlacement(col2, this.state.col21, 2);\r\n  }\r\n\r\n  toggleXVals() {\r\n    this.setState(prevState => {\r\n      return {\r\n        showCoors: !prevState.showCoors\r\n      }\r\n    })\r\n  }\r\n\r\n  alterStartPos1(newPos) {\r\n    let startPos1 = parseInt(this.startPos1Ref.current.value) + this.state.variance1 - 1;\r\n    let col11 = startPos1 - this.state.variance1 + 1;\r\n    let col12 = col11 + this.state.len1 - 1;\r\n    if (startPos1 + this.state.triCentCol1 < this.state.axisStartCol) {\r\n      startPos1 = this.state.variance1 - 1;\r\n      col11 = 0;\r\n      col12 = this.state.len1 - 1;\r\n    }\r\n    else if (startPos1 + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos1 = this.state.variance1 + this.state.axisEndCol - 1;\r\n      col11 = this.state.axisEndCol;\r\n      col12 = this.state.axisEndCol + this.state.len1 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos1\", Number(newPos));\r\n\r\n    this.setState({\r\n      distancing1: startPos1 * this.state.distancing,\r\n      col11: col11,\r\n      col12: col12\r\n    });\r\n  }\r\n\r\n  alterStartPos2(newPos) {\r\n    let startPos2 = parseInt(this.startPos2Ref.current.value) + this.state.variance2 - 1;\r\n    let col21 = startPos2 - this.state.variance2 + 1;\r\n    let col22 = col21 + this.state.len2 - 1;\r\n    if (startPos2 + this.state.triCentCol2 < this.state.axisStartCol) {\r\n      startPos2 = this.state.variance2 - 1;\r\n      col21 = 0;\r\n      col22 = this.state.len2 - 1;\r\n    }\r\n    else if (startPos2 + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos2 = this.state.variance2 + this.state.axisEndCol - 1;\r\n      col21 = this.state.axisEndCol;\r\n      col22 = this.state.axisEndCol + this.state.len2 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos2\", Number(newPos));\r\n\r\n    this.setState({\r\n      distancing2: startPos2 * this.state.distancing,\r\n      col21: col21,\r\n      col22: col22\r\n    });\r\n  }\r\n  \r\n  updateRadius(radius) {\r\n    // console.log(\"updateRadius\", radius);\r\n    this.changeJSON(\"circle-radius\", parseInt(radius));\r\n    let newData = this.props.data;\r\n    newData[\"circle-radius\"] = parseInt(radius);\r\n    this.setState(this.establishStateData(newData));\r\n  }\r\n\r\n  updateTicks(newTickCount) {\r\n    this.changeJSON(\"tickNum\", parseInt(newTickCount));\r\n    let newData = this.props.data;\r\n    newData[\"tickNum\"] = parseInt(newTickCount);\r\n    this.setState(this.establishStateData(newData));\r\n  }\r\n\r\n  updateColVal(colVal) {\r\n    this.changeJSON(\"colNumVal\", colVal);\r\n    this.setState({ colNumVal : colVal });\r\n  }\r\n\r\n  checkChange() {\r\n    this.setState(prevState => {\r\n      this.changeJSON(\"edgeLim\", !Boolean(prevState.edgeLim));\r\n      return {\r\n        edgeLim: Number(!Boolean(prevState.edgeLim))\r\n      }\r\n    })\r\n    console.log(this.state.edgeLim);\r\n  }\r\n\r\n  toggleTri1() {\r\n    if (!this.state.fixCurve1) {\r\n      this.setState({startPos1 : this.state.distancing1})\r\n    }\r\n    this.setState(prevState => {\r\n      this.changeJSON(\"fixCurve1\", !prevState.fixCurve1);\r\n      return {\r\n        fixCurve1 : !prevState.fixCurve1\r\n      }});\r\n  }\r\n\r\n  toggleTri2() {\r\n    if (!this.state.fixCurve2) {\r\n      this.setState({startPos2 : this.state.distancing2})\r\n    }\r\n    this.setState(prevState => {\r\n      this.changeJSON(\"fixCurve2\", !prevState.fixCurve2);\r\n      return {\r\n        fixCurve2 : !prevState.fixCurve2\r\n      }});\r\n  }\r\n\r\n  changeColor1() {\r\n    const newColor = this.color1Ref.current.value;\r\n    this.changeJSON(\"color1\", newColor);\r\n    this.setState({ color1 : newColor });\r\n  }\r\n\r\n  changeColor2() {\r\n    const newColor = this.color2Ref.current.value;\r\n    this.changeJSON(\"color2\", newColor);\r\n    this.setState({ color2 : newColor });\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n\r\n    const defaultVal = (qType) => {\r\n      if (this.props.qToDisplay) {\r\n        return this.props.qToDisplay[qType]\r\n      } else {\r\n        return \"\"\r\n      }}\r\n    \r\n    const defaultCurveVal = (dataType) => {\r\n      if (this.props.qToDisplay) {\r\n        return this.props.qToDisplay[\"FileContent\"][dataType]\r\n      } else {\r\n        return \"\"\r\n      }\r\n    }\r\n\r\n    const defaultColor = (dataType, deCol) => {\r\n      if (this.props.qToDisplay) {\r\n        if (this.props.qToDisplay[\"FileContent\"][dataType]) {\r\n          return this.props.qToDisplay[\"FileContent\"][dataType];\r\n        } else {\r\n          return deCol;\r\n        }\r\n      } else {\r\n        return deCol;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        onMouseMove={e => this.triDrag(e)}\r\n        onMouseUp={e => this.triUp(e)}>\r\n        <svg width={this.state.svgWidth} height={this.state.svgHeight + 10} ref={this.svgRef}>\r\n          {/* <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\"/> */}\r\n          {[...Array(this.state.len1).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS[col]).keys()].map(\r\n                (row) => this.dotReturn(col, row)\r\n              )\r\n          )}\r\n          {[...Array(this.state.len2).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS2[col]).keys()].map(\r\n                (row) => this.dotReturn2(col, row)\r\n              )\r\n          )}\r\n          <rect width={this.state.axisEnd - this.state.distancing}\r\n            height=\"2\"\r\n            fill=\"black\"\r\n            x={this.state.axisStartCol * this.state.distancing - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisStartCol * this.state.distancing - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisEnd - this.state.distancing + this.state.axisStartCol * this.state.distancing - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          {[...Array(this.state.tickNum).keys()].map(\r\n            (tick) =>\r\n              <rect\r\n                width=\"2\"\r\n                height=\"20\"\r\n                fill=\"black\"\r\n                x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \r\n                y={this.state.ceilDist + 20}\r\n              />\r\n          )}\r\n          {[...Array(this.state.tickNum).keys()].map(\r\n            (tick) =>\r\n            <text \r\n            textAnchor=\"middle\" \r\n            x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \r\n            y={this.state.ceilDist + 55}>\r\n              {this.state.lowVal + (this.state.rangeVal * (tick + 1))}\r\n            </text>\r\n          )}\r\n          {/* triangle rendering below */}\r\n          {this.returnTri1()}\r\n          {this.returnTri2()}\r\n          <text textAnchor=\"middle\" x={this.state.axisStart} y={this.state.ceilDist + 55}>{this.state.lowVal}</text>\r\n          <text textAnchor=\"middle\" x={this.state.axisStart + this.state.axisEnd} y={this.state.ceilDist + 55}>{this.state.lowVal + this.state.colNum * this.state.colNumVal}</text>\r\n                    Sorry, please use a different browser.\r\n                </svg>\r\n        <br />\r\n        {/* Use defaultValue to show imported data */}\r\n        <div class=\"boxed\">\r\n          <div class=\"flex-container\">\r\n            <div class=\"flex-child-one\">\r\n              Question: <br/>\r\n              <textarea class=\"normal-curve-text\" cols=\"60\" rows=\"11\" \r\n                  ref={this.qRef} \r\n                  defaultValue={defaultVal(\"Question\")}\r\n                onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n              </textarea>\r\n\r\n              <br/><br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: this.state.color1 }}></div>\r\n              <input type=\"text\" \r\n                ref={this.graph1keyRef} \r\n                defaultValue={defaultVal(\"graph1key\")}\r\n                onInput={() => this.handleChange(\"graph1key\", this.graph1keyRef.current.value, this.props.count)}></input>\r\n              <br />\r\n\r\n              <div class=\"color-box\" style={{ backgroundColor: this.state.color2 }}></div>\r\n              <input type=\"text\" \r\n                ref={this.graph2keyRef} \r\n                defaultValue={defaultVal(\"graph2key\")}\r\n                onInput={() => this.handleChange(\"graph2key\", this.graph2keyRef.current.value, this.props.count)}></input>\r\n            </div>\r\n\r\n            <div class=\"flex-child-two\">\r\n              <br/>\r\n              What csv column name do you want to assign to this question?\r\n              <br/>\r\n              {\r\n                this.props.editing\r\n                ?\r\n                <input type=\"text\" ref={this.questionKeyRef} \r\n                defaultValue={this.props.qToDisplay[\"normal-curve-question-key\"]}\r\n                onInput={() => this.handleChange(\"normal-curve-question-key\", this.questionKeyRef.current.value, this.props.count)}/>\r\n                :\r\n                <input type=\"text\" ref={this.questionKeyRef} \r\n                onInput={() => this.handleChange(\"normal-curve-question-key\", this.questionKeyRef.current.value, this.props.count)}/>\r\n              }\r\n              <br/>\r\n              <b>Use letters only, the name must be unique, leave no space between letters.</b> <br/>\r\n              Recommedation: include your experiment name, this question number \r\n              ({qNum}), and the question type (normalCurve)<br/>\r\n              <br/>\r\n              Please enter the csv column names for the graph key: <br/><br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: this.state.color1 }}></div>\r\n              {\r\n                this.props.editing\r\n                ?\r\n                <input type=\"text\" ref={this.legendKey1Ref}\r\n                defaultValue={this.props.qToDisplay[\"normal-curve-legend-key1\"]}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key1\", this.legendKey1Ref.current.value, this.props.count)}></input>\r\n                :\r\n                <input type=\"text\" ref={this.legendKey1Ref}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key1\", this.legendKey1Ref.current.value, this.props.count)}></input>\r\n              }\r\n              <br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: this.state.color2 }}></div>\r\n              {\r\n                this.props.editing\r\n                ?\r\n                <input type=\"text\" ref={this.legendKey2Ref}\r\n                defaultValue={this.props.qToDisplay[\"normal-curve-legend-key2\"]}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key2\", this.legendKey2Ref.current.value, this.props.count)}></input>\r\n                :\r\n                <input type=\"text\" ref={this.legendKey2Ref}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key2\", this.legendKey2Ref.current.value, this.props.count)}></input>\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-child-three\">\r\n            <span>Enter the width of the graph (each point in the curves is \r\n              equivalent to 1 unit of width) </span>\r\n            <input ref={this.lengthRef} type=\"text\" \r\n              defaultValue={defaultCurveVal(\"axis-length\")}\r\n              // name=\"axisLength\" value={this.state.axisLength} \r\n              // onChange={this.onChange}\r\n              />\r\n            <button onClick={() => {this.lengthSubmit(this.lengthRef.current.value)}}>\r\n              Change Width\r\n            </button>\r\n            <br/>\r\n\r\n            <span>Enter your preferred value for the width of each unit in the curve</span>\r\n            <input type=\"text\" ref={this.colNumValRef}\r\n              defaultValue={defaultCurveVal(\"colNumVal\")}></input>\r\n            <button onClick={() => this.updateColVal(this.colNumValRef.current.value)}>Change Unit Value</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred value for the radius of each unit in the curve (2 - 5, inclusive)</span>\r\n            <input type=\"text\" ref={this.radiusRef}\r\n              defaultValue={defaultCurveVal(\"circle-radius\")}></input>\r\n            <button onClick={() => this.updateRadius(this.radiusRef.current.value)}>Change Radius</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred number of ticks on the graph (equal parts must be divisible by x-axis width)</span>\r\n            <input type=\"text\" ref={this.ticksRef}\r\n              defaultValue={defaultCurveVal(\"tickNum\")}></input>\r\n            <button onClick={() => this.updateTicks(this.ticksRef.current.value)}>Change Tick Count</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred starting position for curve 1, \r\n              if you want to change it </span>\r\n            <input ref={this.startPos1Ref} type=\"text\" \r\n              // name=\"startPos1\" value={this.state.startPos1} onChange={this.onChange}\r\n              defaultValue={defaultCurveVal(\"startPos1\")}></input>\r\n            <button onClick={() => this.alterStartPos1(this.startPos1Ref.current.value)}>\r\n              Change Curve 1\r\n            </button>\r\n            <br/>\r\n\r\n            <input \r\n            type=\"checkbox\"\r\n            ref={this.toggleTriRef1}\r\n            onChange={this.toggleTri1} checked={this.state.fixCurve1}/>\r\n            <label for=\"toggle1\"> Check to lock the position of the curve</label>\r\n            <p> || </p>\r\n\r\n            <label for=\"color1\">Choose a color for curve 1: </label>\r\n            <select name=\"color1\" id=\"color1\" ref={this.color1Ref}\r\n              defaultValue={this.state.color1}>\r\n              <option value=\"CornflowerBlue\">Blue</option>\r\n              <option value=\"Crimson\">Red</option>\r\n              <option value=\"MediumSeaGreen\">Green</option>\r\n              <option value=\"LightGray\">Gray</option>\r\n            </select>\r\n            <input onClick={() => this.changeColor1()} type=\"submit\" value=\"Submit\"></input>\r\n            <br />\r\n\r\n            <span>Enter your preferred starting position for curve 2, \r\n              if you want to change it </span>\r\n            <input ref={this.startPos2Ref} type=\"text\" \r\n              // name=\"startPos2\" value={this.state.startPos2} onChange={this.onChange}\r\n              defaultValue={defaultCurveVal(\"startPos2\")}></input>\r\n            <button onClick={() => this.alterStartPos2(this.startPos2Ref.current.value)}>\r\n              Change Curve 2\r\n            </button>\r\n            <br/>\r\n\r\n            <input \r\n            type=\"checkbox\"\r\n            ref={this.toggleTriRef2}\r\n            onChange={this.toggleTri2} checked={this.state.fixCurve2}/>\r\n            <label for=\"toggle2\"> Check to lock the position of the curve</label>\r\n            <p> || </p>\r\n\r\n            <label for=\"color2\">Choose a color for curve 2: </label>\r\n            <select name=\"color2\" id=\"color2\" ref={this.color2Ref}\r\n              defaultValue={this.state.color2}>\r\n              <option value=\"CornflowerBlue\">Blue</option>\r\n              <option value=\"Crimson\">Red</option>\r\n              <option value=\"MediumSeaGreen\">Green</option>\r\n              <option value=\"LightGray\">Gray</option>\r\n            </select>\r\n            <input onClick={() => this.changeColor2()} type=\"submit\" value=\"Submit\"></input>\r\n            <br />\r\n            <div>\r\n              <input \r\n                type=\"checkbox\" \r\n                id=\"vehicle1\" \r\n                name=\"vehicle1\" \r\n                value=\"Bike\" \r\n                ref={this.checkBoxRef}\r\n                onChange={this.checkChange} checked={this.state.edgeLim}/>\r\n              <label for=\"vehicle1\">Turn edge limiting on/off</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <h4>Area Under Curve: <span ref={this.areaRef}></span> | First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h4>\r\n        \r\n        {/* <h1>{this.props.data[\"startPos1\"]} | {this.props.data[\"startPos2\"]}</h1> */}\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NormalCurve;","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport NormalCurve from './NormalCurve';\r\nimport './NormalCurve.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass NormalCurveResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.changeJSON = this.changeJSON.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileNames: [],\r\n      setFileNames: [],\r\n      fileChosen: '',\r\n      key: this.props.key\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // importing component\r\n    if (this.props.imported) {\r\n      this.handleChange(\"FileName\", this.props.qToDisplay[\"FileName\"], this.props.count);\r\n      const jsonData = this.props.qToDisplay[\"FileContent\"];\r\n      this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n      const unitHeight = jsonData[\"max-height\"];\r\n      const circRad = jsonData[\"circle-radius\"];\r\n      const distancing = circRad * 4 - 1;\r\n      const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n      const ceilDist = height - 50;\r\n      const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n      const colNum = Math.round(length / distancing);\r\n      this.setState({\r\n        dataReceived: true,\r\n        // fileText: fileText,\r\n        jsonData: jsonData,\r\n        svgWidth: length,\r\n        svgHeight: height,\r\n        distancing: distancing,\r\n        dataReceived: true,\r\n        len1: jsonData[\"len1\"],\r\n        colValHeiS: jsonData[\"colValHeiS\"],\r\n        len2: jsonData[\"len2\"],\r\n        colValHeiS2: jsonData[\"colValHeiS2\"],\r\n        distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n        distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n        triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n        triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n        col11: jsonData[\"len2\"] + 1,\r\n        col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n        col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n        col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n        colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n        colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n        overlapVals: jsonData[\"overlapVals\"],\r\n        circRad: circRad,\r\n        ceilDist: ceilDist\r\n      });\r\n    }\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"normal-curve\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n\r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n            if (this.props.files.length == 0) {\r\n              this.saveFile(\"normal-curve\", file.name, jsonData);\r\n            } else {\r\n              const names = this.props.files.map(item => item.fileName);\r\n              if (!names.includes(file.name)) {\r\n                this.saveFile(\"normal-curve\", file.name, jsonData);\r\n              }\r\n            }\r\n\r\n            const unitHeight = jsonData[\"max-height\"];\r\n            const circRad = jsonData[\"circle-radius\"];\r\n            const distancing = circRad * 4 - 1;\r\n            const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n            const ceilDist = height - 50;\r\n            const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n            const colNum = Math.round(length / distancing);\r\n            this.setState({\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData, \r\n              svgWidth: length,\r\n              svgHeight: height,\r\n              distancing: distancing,\r\n              dataReceived: true,\r\n              len1: jsonData[\"len1\"],\r\n              colValHeiS: jsonData[\"colValHeiS\"],\r\n              len2: jsonData[\"len2\"],\r\n              colValHeiS2: jsonData[\"colValHeiS2\"],\r\n              distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n              distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n              triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n              triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n              col11: jsonData[\"len2\"] + 1,\r\n              col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n              col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n              col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n              colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n              colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n              overlapVals: jsonData[\"overlapVals\"],\r\n              circRad: circRad,\r\n              ceilDist: ceilDist\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    const unitHeight = jsonData[\"max-height\"];\r\n    const circRad = jsonData[\"circle-radius\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n    const ceilDist = height - 50;\r\n    const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n    const colNum = Math.round(length / distancing);\r\n    this.setState({\r\n      dataReceived: true,\r\n      // fileText: fileText,\r\n      jsonData: jsonData,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      distancing: distancing,\r\n      dataReceived: true,\r\n      len1: jsonData[\"len1\"],\r\n      colValHeiS: jsonData[\"colValHeiS\"],\r\n      len2: jsonData[\"len2\"],\r\n      colValHeiS2: jsonData[\"colValHeiS2\"],\r\n      distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n      distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n      triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n      triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n      col11: jsonData[\"len2\"] + 1,\r\n      col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n      col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n      col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n      colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n      colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n      overlapVals: jsonData[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist\r\n    })\r\n  }  \r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    var data = this.state.jsonData;\r\n    data[key] = value;\r\n    this.handleChange(\"FileContent\", data, this.props.count);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <NormalCurve \r\n            data={this.state.jsonData} count={this.props.count}\r\n            changeJSON={this.changeJSON} \r\n            handleChange={this.handleChange} \r\n            delete={this.delete} />\r\n          <br/>\r\n        </div>\r\n      )\r\n    // importing component\r\n    } else if (this.props.imported) {\r\n      return (\r\n        <div>\r\n          <NormalCurve \r\n            imported={true}\r\n            editing={this.props.editing}\r\n            data={this.props.qToDisplay[\"FileContent\"]} \r\n            qToDisplay={this.props.qToDisplay}\r\n            count={this.props.count}\r\n            changeJSON={this.changeJSON} \r\n            handleChange={this.handleChange} \r\n            delete={this.delete} />\r\n        </div>\r\n      )\r\n    } else {\r\n      const normalCurveFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"normal-curve\");\r\n      var fileNames = normalCurveFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n          <br/>\r\n          <button onClick={this.delete.bind(this)}>Delete</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nNormalCurveResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(NormalCurveResearch);","import React, { Component } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nimport './HistSlider.css';\r\n\r\nclass Histogram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.sliderRef = React.createRef();\r\n    this.graphRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.questionKeyRef = React.createRef();\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number,\r\n      sliderPos: Number\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawChart();\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  drawChart() {\r\n    const data = this.props.data;\r\n\r\n    const svg = d3.select(this.graphRef.current).append(\"svg\")\r\n      .attr(\"width\", this.props.width)\r\n      .attr(\"height\", this.props.height)\r\n\r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * this.props.width / data.length)\r\n      .attr(\"y\", (d, i) => this.props.height - 10 * d)\r\n      .attr(\"width\", this.props.width / data.length - 10)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"#4CAF50\")\r\n      .attr(\"opacity\", 0.5)\r\n\r\n    svg.selectAll(\"text\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text((d) => d)\r\n      .attr(\"x\", (d, i) => i * this.props.width / data.length)\r\n      .attr(\"y\", (d, i) => this.props.height - (10 * d) - 3)\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    const vertAlign = this.props.height / 2;\r\n    // const step_size = this.props.width / this.props.data.length;\r\n    return (\r\n      <div>\r\n        <div ref={this.graphRef}\r\n          style={{ \r\n            position: \"relative\", \r\n            width: this.props.width, \r\n            margin: \"auto\" }}>\r\n          <div \r\n            style={{ \r\n              position: \"absolute\",\r\n              top: vertAlign}}>\r\n            <input type=\"range\" min={this.state.minVal} max={this.state.maxVal} \r\n              className=\"hist-slider\" onChange={this.onChange}\r\n              name=\"sliderPos\" value={this.state.sliderPos}\r\n              step={this.props.step} ref={this.sliderRef}\r\n              style={{ width: this.props.width }}/>\r\n          </div>\r\n        </div>\r\n        {this.state.minVal}\r\n        <input type=\"range\" class=\"dummy-slider\" \r\n          style={{ width: this.props.width }} onChange={this.onChange}\r\n          name=\"sliderPos\" value={this.state.sliderPos} step={this.props.step}\r\n          min={this.state.minVal} max={this.state.maxVal} />\r\n        {this.state.maxVal}\r\n        \r\n        <br/><br/>\r\n        <div className=\"boxed\">\r\n          Question #{qNum} <br/>\r\n          <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \r\n            onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n          </textarea>\r\n\r\n          <br/>\r\n          <p>Minimum: \r\n            <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n            ref={this.minRef} type=\"text\" \r\n            name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p>\r\n          \r\n          <br/>\r\n          <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n            ref={this.maxRef} type=\"text\" \r\n            name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p>\r\n\r\n          <br/><br/>\r\n          What csv column name do you want to assign to this question? <br/>\r\n          <b>Please use letters only, the name must be unique, leave no space between letters.</b> <br/>\r\n          Recommedation: include your experiment name, this question number \r\n          ({qNum}), and the question type (threshold)\r\n          <br/>\r\n          <input type=\"text\" ref={this.questionKeyRef} \r\n            onInput={() => this.handleChange(\"threshold-key\", this.questionKeyRef.current.value, this.props.count)}/>\r\n          \r\n          <br/><br/>\r\n          <button onClick={this.delete.bind(this)}>Delete Question</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Histogram;","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport Histogram from './Histogram.js';\r\nimport './HistogramResearch.css';\r\nimport '../../../../src/App.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass HistogramResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileChosen: ''\r\n    }\r\n\r\n    this.delete = this.delete.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(e.target.name);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"threshold\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n  \r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n              if (this.props.files.length == 0) {\r\n                this.saveFile(\"threshold\", file.name, jsonData);\r\n              } else {\r\n                const names = this.props.files.map(item => item.fileName);\r\n                if (!names.includes(file.name)) {\r\n                  this.saveFile(\"threshold\", file.name, jsonData);\r\n                }\r\n              }\r\n  \r\n            this.setState({\r\n              data: jsonData[\"data\"],\r\n              width: jsonData[\"width\"],\r\n              height: jsonData[\"height\"],\r\n              id: HistogramResearch,\r\n              step: jsonData[\"step\"],\r\n              defaultValue: jsonData[\"defaultValue\"],\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData[\"data\"]\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({\r\n      fileNames: acceptedFiles.map(file => file.name)\r\n    });\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    this.setState({\r\n      data: jsonData[\"data\"],\r\n      width: jsonData[\"width\"],\r\n      height: jsonData[\"height\"],\r\n      id: HistogramResearch,\r\n      step: jsonData[\"step\"],\r\n      defaultValue: jsonData[\"defaultValue\"],\r\n      dataReceived: true,\r\n      jsonData: jsonData[\"data\"]\r\n    });\r\n  }  \r\n\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <Histogram\r\n            data={this.state.data}\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n            step={this.state.step}\r\n            delete={this.delete}\r\n            handleChange={this.handleChange}\r\n            count={this.props.count}\r\n            class=\"center\" />\r\n          <br />\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      const histogramFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"threshold\");\r\n      console.log(histogramFiles);\r\n      var fileNames = histogramFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n          <br/>\r\n          <button onClick={this.delete.bind(this)}>Delete</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nHistogramResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(HistogramResearch);","import React, { Component } from 'react';\r\nimport './TabList.css';\r\nimport '../TabBuilder/TabBuilder'\r\nimport TabBuilder from '../TabBuilder/TabBuilder'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ###TODO###: import your component here\r\nimport SliderTab from '../items/Slider/SliderTab';\r\nimport StaticText from '../items/StaticText/StaticText';\r\nimport NormalCurve from '../items/NormalCurve/NormalCurve';\r\nimport NormalCurveResearch from '../items/NormalCurve/NormalCurveResearch';\r\nimport HistogramResearch from '../items/Threshold/HistogramResearch';\r\n\r\nimport { \r\n  sendFile,\r\n  getStudyInfo\r\n} from '../../actions/dataActions'\r\n\r\nconst axios = require('axios');\r\n\r\n// This component allows Psych researchers to configure an experiment \r\nclass TabList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      count: 0,\r\n      output: {},\r\n      deleted: [],\r\n      complete: false,\r\n      exptName: '',\r\n      files: [],\r\n      expt: {}\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.submitRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n\r\n    this.builderFunction = this.builderFunction.bind(this);\r\n    this.importQuestion = this.importQuestion.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.outputCreate = this.outputCreate.bind(this);\r\n    this.checkOutput = this.checkOutput.bind(this);\r\n    this.configDataToItem = this.configDataToItem.bind(this);\r\n    this.saveFile = this.saveFile.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    console.log(this.props.location.state);\r\n    if (this.props.location.state != null) {\r\n      if (!this.props.location.state.newExpt) {\r\n        const thisExpt = this.props.location.state.exptName;\r\n        if (!this.props.experiments.length == 0) {\r\n          const exptObj =\r\n            this.props.experiments.find(item => item.exptName == thisExpt);\r\n          this.setState({ expt: exptObj });\r\n          const qKeys = Object.keys(exptObj).filter(key => key.charAt(0) == \"q\");\r\n          var qArr = [];\r\n          qKeys.forEach(key => qArr.push(exptObj[key]));\r\n          qArr.forEach(q => {\r\n            this.configDataToItem(q, true);\r\n            this.setState({ count: this.state.count += 1 });\r\n          });\r\n        };\r\n      };\r\n    };\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  builderFunction = (tabDefine) => {\r\n    var arr = this.state.children;\r\n    // ###TODO###: Add more cases here for TabList to display \r\n    //             Follow the format of the provided components below\r\n    switch (tabDefine) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()}\r\n                  appendToKeysArr={this.appendToKeysArr} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      case \"threshold\":\r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <HistogramResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\r\n  }\r\n\r\n  mapQTypetoQKey(qType) {\r\n    switch(qType) {\r\n      case \"slider\":\r\n        return \"slider-question-key\"\r\n      case \"static-text\":\r\n        return \"static-text-key\"\r\n      case \"normal-curve\":\r\n        return \"normal-curve-question-key\"\r\n      case \"threshold\":\r\n        return \"threshold-key\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n\r\n  importQuestion(exptName, questionKey) {\r\n    const thisExpt = this.props.experiments.filter(item => \r\n      item[\"exptName\"] == exptName)[0];\r\n    const thisExptQKeys = Object.keys(thisExpt).filter(k => \r\n      k.charAt(0) == \"q\");\r\n    // the question key (e.g. q1) that user has selected\r\n    const thisQKey = thisExptQKeys.filter(k => {\r\n      const key = this.mapQTypetoQKey(thisExpt[k][\"Type\"]);\r\n      return thisExpt[k][key] == questionKey;\r\n    })[0];\r\n    const questionToDisplay = thisExpt[thisQKey];\r\n    console.log(questionToDisplay);\r\n\r\n    // questions will show up once an expt type is pushed to this.state.children\r\n    this.configDataToItem(questionToDisplay, false);\r\n  }\r\n\r\n  // input: question, a question in json format\r\n  //        editing, a boolean indicating whether the component is displayed \r\n  //                  as part of \"Edit Experiment\"\r\n  // output: a React component\r\n  configDataToItem(question, editing) {\r\n    var arr = this.state.children;\r\n    switch (question[\"Type\"]) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab \r\n                  defaultQ={question[\"Question\"]}\r\n                  defaultMin={question[\"lowRange\"]}\r\n                  defaultMax={question[\"highRange\"]}\r\n                  imported={true}\r\n                  editing={editing}\r\n                  getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()}\r\n                  appendToKeysArr={this.appendToKeysArr} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText \r\n                  qToDisplay={question}\r\n                  imported={true}\r\n                  editing={editing}\r\n                  getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch \r\n                  qToDisplay={question}\r\n                  imported={true}\r\n                  editing={editing}\r\n                  getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      case \"threshold\":\r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <HistogramResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    };\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": question[\"Type\"] };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });    \r\n  }\r\n\r\n  // Input: \r\n  //  key: key of JSON object\r\n  //  value: value of JSON object\r\n  //  count: the numerical order of the JSON object\r\n  // Action: put the key and value pair in the final output JSON object\r\n  handleChange(key, value, count) {\r\n    var curOutput = this.state.output;\r\n    curOutput[count.toString()][key] = value;\r\n    this.setState({ output: curOutput });\r\n  }\r\n\r\n  appendToKeysArr(objType, nameType, csvColName, count) {\r\n    var curOutput = this.state.output;\r\n    const objKeys = Object.keys(curOutput[count.toString()]);\r\n    // console.log(objKeys);\r\n    if (objKeys.includes(objType)) {\r\n      curOutput[count.toString()][objType][nameType] = csvColName;\r\n    } else {\r\n      curOutput[count.toString()][objType] = {};\r\n      curOutput[count.toString()][objType][nameType] = csvColName;\r\n    }\r\n    console.log(curOutput);\r\n    // curOutput[count.toString()][\"csvColNames\"]\r\n  }\r\n\r\n  delete(id) {\r\n    var newDelete = this.state.deleted;\r\n    newDelete.push(id);\r\n    this.setState({ deleted: newDelete });\r\n  }\r\n\r\n  getCount(count) {\r\n    return count;\r\n  }\r\n\r\n  // Action: put newly uploaded files into this.state. \r\n  //         All newly uploaded files will be sent to database as JSON objs\r\n  saveFile(type, name, content) {\r\n    const newFile = {\r\n      \"itemType\": type,\r\n      \"fileName\": name,\r\n      \"fileContent\": content\r\n    };\r\n    this.setState({ files: this.state.files.concat(newFile) });\r\n  }\r\n\r\n  // validating input fields. \r\n  // for now: developers will need to add a case below \r\n  checkOutput(obj) {\r\n    var int = 0;\r\n    var complete = true;\r\n    while ((int.toString()) in obj) {\r\n      var elem = obj[int.toString()];\r\n      switch (elem[\"Type\"]) {\r\n        case \"slider\":\r\n          var lowIs = \"lowRange\" in elem;\r\n          var highIs = \"highRange\" in elem;\r\n          var qIs = \"Question\" in elem;\r\n          if (lowIs && highIs && qIs) {\r\n            var lowNum = !isNaN(elem[\"lowRange\"]);\r\n            var highNum = !isNaN(elem[\"highRange\"]);\r\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\r\n            if (highLow && lowNum && highNum) {\r\n              complete = complete && true;\r\n            }\r\n            else {\r\n              complete = false;\r\n            }\r\n          }\r\n          else {\r\n            complete = false;\r\n          }\r\n          break;\r\n        default:\r\n          complete = false;\r\n      case \"normal-curve\":\r\n        complete = true;\r\n      }\r\n      int++;\r\n    }\r\n    return complete;\r\n  }\r\n\r\n  // input: newExpt, a boolean representing whether this expt is new\r\n  outputCreate(newExpt) {\r\n    var obj = {};\r\n    var index = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { \r\n        obj[item.id.toString()] = this.state.output[item.id.toString()];\r\n        const exptItem = this.state.output[item.id.toString()];\r\n        switch (exptItem[\"Type\"]) {\r\n          case \"static-text\":\r\n            index[exptItem[\"static-text-key\"]] = exptItem[\"Static Text\"];\r\n          case \"normal-curve\":\r\n            index[exptItem[\"normal-curve-question-key\"]] = exptItem[\"Question\"];\r\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key1\"]] = exptItem[\"graph1key\"];\r\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key2\"]] = exptItem[\"graph2key\"];\r\n          case \"threshold\":\r\n            index[exptItem[\"threshold-key\"]] = exptItem[\"Question\"];\r\n        }\r\n      });\r\n    // var validName = this.nameRef.current.value.length > 0;\r\n    // if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\r\n    // if (!validName) {\r\n    if (false) {\r\n      alert(\"You have not filled out all fields, or have entered an invalid value!\");\r\n    }\r\n    else {\r\n      var finalObj = {};\r\n      finalObj[\"exptName\"] = this.nameRef.current.value;\r\n      var int = 0;\r\n      while (int < this.state.count) {\r\n        if ((int.toString()) in obj) {\r\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n        }\r\n        int++;\r\n      }\r\n      finalObj[\"count\"] = int;\r\n      delete index[\"undefined\"];\r\n      finalObj[\"index\"] = index;\r\n\r\n      console.log(finalObj);\r\n\r\n      const username = this.props.auth.user.username;\r\n      const studyName = this.props.match.params.studyName;\r\n\r\n      if (!this.state.files.length == 0) {\r\n        this.state.files.map(item => this.props.sendFile(username, item))\r\n      };\r\n\r\n      if (newExpt) {\r\n        axios\r\n        .put(\r\n          'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n          '/info/studyName-' + studyName + '/experiments',\r\n          finalObj\r\n        )\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .then(function (response) {\r\n          alert(\"Your experiment has been successfully created\");\r\n          window.location.reload(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      } else {\r\n        if (this.props.location.state != null) {\r\n          const exptName = this.props.location.state.exptName;\r\n          axios\r\n          .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n            username + '/info/studyName-' + studyName + '/experiments/exptName-' +\r\n            exptName)\r\n          .then(res => {\r\n            axios\r\n            .put(\r\n              'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n              '/info/studyName-' + studyName + '/experiments',\r\n              finalObj\r\n            )\r\n            .then(res => {\r\n              console.log(res)\r\n            })\r\n            .then(function (response) {\r\n              alert(\"Your experiment has been successfully updated\");\r\n              window.location.reload(false);\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n          });\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n\r\n    var obj = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\r\n    var finalObj = {};\r\n    // finalObj[\"exptName\"] = this.nameRef.current.value;\r\n    var int = 0;\r\n    while (int < this.state.count) {\r\n      if ((int.toString()) in obj) {\r\n        finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n      }\r\n      int++;\r\n    }\r\n    finalObj[\"count\"] = int;\r\n    return (\r\n      <div ref={this.myRef}>\r\n        <h2>Experiment Builder</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <div>\r\n          {/* <button onClick={() => console.log(this.state.children)}>see children</button> */}\r\n          <form action=\"/submit\" method=\"POST\" className=\"unit\">\r\n            <p>Enter a name for this experiment </p>\r\n            <input ref={this.nameRef}\r\n              // value={this.state.exptName}\r\n              // onChange={this.onChange}\r\n              defaultValue={this.state.expt.exptName}\r\n              type=\"text\" id=\"userid\" name=\"exptName\" /><br />\r\n            <b>all experiments in a study must have unique names</b>\r\n          </form>\r\n          {\r\n            this.state.children\r\n              .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n              .map((item) => {\r\n                return item.tab;\r\n              })\r\n          }\r\n          <TabBuilder \r\n            build={this.builderFunction} \r\n            importQuestion={this.importQuestion}\r\n            username={this.props.match.params.username}\r\n            studyName={this.props.match.params.studyName} />\r\n          {/* Add condition here. Submit / Update Experiment */}\r\n          {\r\n            this.props.location.state != null \r\n            ?\r\n            <div>\r\n              {\r\n                this.props.location.state.newExpt\r\n                ?\r\n                <div className=\"extraPad\">\r\n                  <button onClick={() => this.outputCreate(true)} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n                </div>\r\n                :\r\n                <div className=\"extraPad\">\r\n                  <button onClick={() => this.outputCreate(false)} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Update Experiment</button>\r\n                  <p style={{ opacity: 0 }}> place holder </p> \r\n                  <button className=\"btn\" onClick={() => this.props.history.push(studyLink)}>\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              }\r\n            </div>\r\n            :\r\n            <div className=\"extraPad\">\r\n              <button onClick={() => this.outputCreate(true)} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n            </div>\r\n          }\r\n        </div>\r\n        <br/>\r\n        <button onClick={() => console.log(finalObj)}>Show finalObj</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired,\r\n  sendFile: PropTypes.func.isRequired,\r\n  dataFlowFileName: PropTypes.string.isRequired,\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo,\r\n  dataFlowFileName: state.dataFlow.fileName,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\n// export default TabList;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendFile, getStudyInfo }\r\n)(TabList);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n            <br/>\r\n            {userIsLoggedIn ? '' : \r\n              <Link to=\"/register\">Register</Link>}\r\n            <br/>\r\n            {userIsLoggedIn ? \r\n              <Link to=\"/dashboard\"> Dashboard </Link> \r\n              : \r\n              <Link to=\"/login\">Login</Link>}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Navbar;\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentWillMount() {\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          Scientist: <b>{this.props.auth.user.username}</b>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n      return(\r\n        <div className=\"container\">\r\n            <h1>\r\n            Welcome to Psych Researcher App!\r\n            </h1>\r\n            Please click on this <p></p>\r\n            <a target=\"_blank\" href=\"https://github.com/statistical-perceptions/statistical-perceptions.github.io\">link</a> <p></p>\r\n            to view researcher user guide. \r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(HomePage);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    };\r\n  };\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form and flask request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register below</h1>\r\n        <p className=\"grey-text text-darken-1\">\r\n          Already have an account?\r\n                    <Link to=\"/login\">Log in</Link>\r\n        </p>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              // userExists comes from res json message in API\r\n              invalid: errors.userExists\r\n            })} />\r\n          <span className=\"red-text\">{errors.userExists}</span>\r\n          <br />\r\n          <br />\r\n            Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n              invalid: errors.password})} />\r\n          <span className=\"red-text\">{errors.password}</span>\r\n          <br />\r\n          <br />\r\n            Confirm Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password2})} />\r\n          <span className=\"red-text\">{errors.password2}</span>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\" className=\"btn\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Register;\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// map state from redux props to use inside components\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n// linking redux to Register component\r\n// withRouter makes it easy to redirect within a component\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // push user to dashboard when they login\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form post and request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    // we are redirecting wthin a component, so we don't need to\r\n    // pass in this.props.history\r\n    this.props.loginUser(userData);\r\n  };\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Log in</h1>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.userNotFound\r\n              // || USERNAME NOT FOUND\r\n            })} />\r\n          <span className=\"red-text\">{errors.userNotFound}</span>\r\n          <br />\r\n          <br />\r\n                    Password:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.pwdIncorrect\r\n            })} />\r\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Log in\"\r\n            className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Login;\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport {\r\n  addStudyName,\r\n  getDBInfo\r\n} from \"../../actions/dataActions\";\r\n\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studyName: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onAddStudy = this.onAddStudy.bind(this);\r\n    this.onDeleteStudy = this.onDeleteStudy.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // load experiment names when the page loads\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getDBInfo(username); // dbInfo will be in the store now\r\n  }\r\n\r\n  getStudyNames() {\r\n    // TODO. Filter out study names. If an item doesn't have study names\r\n    // as a key, then don't do anything. (wrap everything inside an if)\r\n    const allInfo = this.props.dataFlowDBInfo;\r\n    return allInfo.map(item => {\r\n      const allKeys = Object.keys(item);\r\n      if (allKeys.includes(\"studyName\")) {\r\n        const username = this.props.auth.user.username;\r\n        const link = \"/\" + username + \"/\" + item.studyName;\r\n        return (\r\n          <div className=\"container\">\r\n            <p id={item.studyName}>\r\n              {item.studyName} <p> </p> \r\n              <Link to={link}>\r\n                View\r\n              </Link> <p> </p>\r\n              <button id={item.studyName} onClick={this.onDeleteStudy}>\r\n                Delete\r\n              </button>\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddStudy() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.addStudyName(username, this.state.studyName);\r\n    // // alert(\"Your study has been succesfully created.\");\r\n    // window.location.reload(false);\r\n  };\r\n\r\n  onDeleteStudy(e) {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = e.target.id;\r\n    var confirm = window.confirm(\"Are you sure you want to delete this\" + \r\n      \" study [\" + studyName + \"] and all its experiment data?\");\r\n    if (confirm) {\r\n      // delete the study doc in /info collection\r\n      axios\r\n        .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n          username + '/info/studyName-' + studyName);\r\n      // delete all deployed experiment collections in user's database\r\n      axios\r\n        .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n          username + \"/all\", { data: { studyName: studyName }})\r\n        .then(res => {\r\n          alert(\"You have succesfully deleted [\" + studyName + \"] and all\" + \r\n            \" its experiment data!\");\r\n          window.location.reload(true);\r\n        })\r\n    } else {\r\n      alert(\"Deletion cancelled!\");\r\n      window.location.reload(true);\r\n    }\r\n  }\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const username = this.props.auth.user.username;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Dashboard</h2>\r\n\r\n        <div className=\"boxed\" style={{ width: \"60%\", margin: \"auto\" }}>\r\n          <br/>\r\n          <b>Configure Experiment Types:</b> <br/>\r\n          <a href=\"https://colab.research.google.com/drive/1yleVQB_CrNJ5Z3v-YPatW2XqAD7yS8yp?usp=sharing\" target=\"_blank\">Normal Curves</a>\r\n          <div><br/></div>\r\n        </div>\r\n\r\n        <h3>Add a Study</h3>\r\n        Enter a name for your study: <br/>\r\n        <input type=\"text\" name=\"studyName\"\r\n          value={this.state.studyName} onChange={this.onChange} />\r\n        <button onClick={this.onAddStudy}>Add Study</button>\r\n        <br/>\r\n        Please do <b>not</b> use \"-\" in the name\r\n\r\n        <br/><br/>\r\n        <div className=\"boxed\" style={{ width: \"60%\", margin: \"auto\" }}>\r\n          <br />\r\n          {this.getStudyNames()}\r\n          <br />\r\n        </div>\r\n\r\n        <br/><br/>\r\n        <button\r\n          onClick={this.onLogoutClick}\r\n          className=\"btn\">\r\n          Logout\r\n        </button>\r\n        <div><br/><br/></div>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  logoutUser: PropTypes.func.isRequired,\r\n  addStudyName: PropTypes.func.isRequired,\r\n  getDBInfo: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, addStudyName, getDBInfo }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  getStudyInfo,\r\n  createExptCol,\r\n  getColNames,\r\n  saveAddInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ConfigStudy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: true,\r\n      deployed: Boolean\r\n    };\r\n\r\n    this.deployExpts = this.deployExpts.bind(this);\r\n    this.changeState = this.changeState.bind(this);\r\n    this.onDeploy = this.onDeploy.bind(this);\r\n    this.onChecked = this.onChecked.bind(this);\r\n    this.onDeleteExperiment = this.onDeleteExperiment.bind(this);\r\n  }\r\n  // note: using params to get studyName is probably not good practice. \r\n  // figure out a better way to get info from previous page later, might\r\n  // use cookies? or does react have some way to pass states between pages?\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    axios\r\n      .get('https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName)\r\n      .then(res => {\r\n        const dataToPut = {\r\n          \"randomize\": true\r\n        };\r\n        console.log(res.data);\r\n        if (!Object.keys(res.data).includes(\"randomize\")) {\r\n          this.putRandomize(username, studyName, dataToPut);\r\n        } else {\r\n          this.setState({ checked: res.data.randomize });\r\n        };\r\n      });\r\n    this.props.getStudyInfo(username, studyName);\r\n    this.props.getColNames(username);\r\n    axios\r\n      .get('https://test-api-615.herokuapp.com/api/' + username + \"/collections\")\r\n      .then(res => {\r\n        const thisSudyDeployedExpt = res.data.filter(name => \r\n          name.split(\"-\")[0] == studyName);\r\n        this.setState({ deployed: thisSudyDeployedExpt.length >= 1 });\r\n      });\r\n  }\r\n\r\n  processColNames() {\r\n    const studyName = this.props.match.params.studyName;\r\n    const processedArr = this.props.colNames.filter(name => name !== \"info\");\r\n    const currentStudyExpts = processedArr.filter(name =>\r\n      name.split('-')[0] == studyName);\r\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\r\n    // this.setState({ deployExpts: deployedExpts });\r\n    return deployedExpts;\r\n  }\r\n\r\n  putRandomize(database_name, study_name, data) {\r\n    axios.put('https://test-api-615.herokuapp.com/api/feedback/' + \r\n      database_name + '/info/studyName-' + study_name, data);\r\n  }\r\n\r\n  onChecked() {\r\n    const nowState = !this.state.checked;\r\n    this.setState({ checked: !this.state.checked });\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const dataToPut = {\r\n      \"randomize\": nowState\r\n    }\r\n    this.putRandomize(username, studyName, dataToPut);\r\n  }\r\n\r\n  getExptNames() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    // check if the experiments are deployed \r\n    return this.props.experiments.map(expt => {\r\n      const exptName = expt.exptName;\r\n      const surveyLink = expt.link;\r\n\r\n      var condition;\r\n      if (expt.condition == null) {\r\n        condition = \"N/A\";\r\n      } else {\r\n        condition = expt.condition;\r\n      }\r\n\r\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/configs\";\r\n      // const partDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n      //   exptName + \"/participantsData\";\r\n      const partExptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsExptData\";\r\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \r\n        \"participant-app/#/participant-app/expt/\" + username + \r\n          \"/\" + studyName + \"-\" + exptName\r\n      const previewLink = \"https://statistical-perceptions.github.io/\" + \r\n      \"participant-app/#/participant-app/preview/\" + username + \r\n        \"/\" + studyName + \"-\" + exptName\r\n      const dbLink = \"https://test-api-615.herokuapp.com/api/feedback/\" + \r\n        username + \"/\" + studyName + \"-\" + exptName\r\n      const exptBuilderLink = \"/\" + username + \"/\" +\r\n        studyName + \"/exptBuilder\";\r\n\r\n      if (deployed.includes(exptName)) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"boxed\">\r\n              <b>{expt.exptName}</b> <br/>\r\n              <a target=\"_blank\" href={previewLink}>\r\n                Preview Experiment\r\n              </a> <br/><br/>\r\n              <Link to={exptDataLink}>\r\n                <button type=\"button\">\r\n                  Experiment Configs\r\n                </button>\r\n              </Link> <p> </p>\r\n              <Link to={partExptDataLink}>\r\n                <button type=\"button\">\r\n                  View Participants Data\r\n                </button>\r\n              </Link> <p> </p> \r\n              <br/><br/>\r\n              <button id={expt.exptName} onClick={this.onDeleteExperiment}>\r\n              Delete this Experiment\r\n              </button>\r\n              <br/><br/>\r\n              Condition: <b>{condition}</b>\r\n\r\n              {/* <br/>\r\n              <button onClick={() => console.log(condition)}></button> */}\r\n\r\n              <br/><br/>\r\n              <b>Database Link:</b><br/>\r\n              {dbLink} <br/>\r\n              <CopyToClipboard text={dbLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Database link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Experiment Link:</b> <br/>\r\n              {exptPartLink} <br/>\r\n              <CopyToClipboard text={exptPartLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Experiment link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Qualtrics Demographics Survey Link:</b> <br/>\r\n              {surveyLink} <br/>\r\n              <CopyToClipboard text={surveyLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Qualtrics Survey link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div>\r\n            <div className=\"boxed\">\r\n            Experiment: <b>{expt.exptName}</b><br/><br/>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Configurations\r\n              </button>\r\n            </Link> <p> </p>\r\n            <Link to={{\r\n                pathname: exptBuilderLink,\r\n                state: {\r\n                  newExpt: false,\r\n                  exptName: exptName  \r\n                }\r\n              }}>\r\n              <button type=\"button\">\r\n                Edit Experiment\r\n              </button>\r\n            </Link>\r\n            <br/><br/>\r\n            <button id={expt.exptName} onClick={this.onDeleteExperiment}>\r\n            Delete this Experiment\r\n            </button>\r\n            <br/><br/>\r\n            <b>Experiment Link:</b><br/>\r\n            {exptPartLink} <br/>\r\n            <CopyToClipboard text={exptPartLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Experiment link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>Database Link:</b><br/>\r\n            {dbLink} <br/>\r\n            <CopyToClipboard text={dbLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Database link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>TODO</b> <br/>\r\n            Paste the link to demographics qualtrics survey below: <br/>\r\n            <textarea cols=\"60\" rows=\"1\" id={exptName + \"link\"}\r\n              onInput={this.changeState} value={this.state.exptName}></textarea>\r\n            <br/><br/>\r\n            {\r\n              this.state.checked\r\n              ? <div>\r\n                <b>TODO</b> <br/>\r\n                Name the condition of this experiment: <br/>\r\n                <textarea cols=\"60\" rows=\"1\" id={exptName + \"condition\"}\r\n                  onInput={this.changeState} value={this.state.condition}></textarea>\r\n                <br/>\r\n              </div>\r\n              : <div></div>\r\n            }\r\n            <br/>\r\n            {/* <button onClick={() => console.log(this.state)}>Show State</button><br/> */}\r\n            <button id={exptName} onClick={this.onDeploy}> \r\n              <b>DEPLOY</b>\r\n            </button>\r\n            <br/>\r\n          </div>\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  changeState(e) {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  onDeleteExperiment(e) {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = e.target.id;\r\n    var confirm = window.confirm(\"Are you sure you want to delete this\" +\r\n      \" experiment [\" + exptName + \"] (and all its participant data)?\");\r\n    if (confirm) {\r\n      // first delete expt config from /info\r\n      axios\r\n      .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n        username + '/info/studyName-' + studyName + '/experiments/exptName-' +\r\n        exptName)\r\n      .then(res => {\r\n        // then delete participant data collection\r\n        axios\r\n          .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n            username + \"/one\", {data: {colName: studyName + \"-\" + exptName}})\r\n          .then(res => {\r\n            alert(\"You have successfully deleted [\" + exptName + \r\n              \"] and all its data!\");\r\n            window.location.reload(true);\r\n          })\r\n      });\r\n    } else {\r\n      alert(\"Deletion cancelled!\");\r\n      window.location.reload(true);\r\n    }\r\n  }\r\n\r\n  onDeploy(e) {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    var exptName;\r\n    if (e.currentTarget != null) {\r\n      exptName = e.currentTarget.id;\r\n    } else {\r\n      exptName = e;\r\n    };\r\n    console.log(exptName);\r\n\r\n    const link = this.state[exptName + \"link\"];\r\n    const condition = this.state[exptName + \"condition\"];\r\n\r\n    // process condition first\r\n    var conditionInfo;\r\n    if (condition == null) {\r\n      conditionInfo = { \"condition\": \"N/A\" };\r\n    } else {\r\n      conditionInfo = { \"condition\": condition };\r\n    }\r\n    // this.props.saveAddInfo(username, studyName, exptName, \"condition\", conditionInfo);\r\n\r\n    // NEED TO CLEAN THIS UP\r\n    // i only used axios here for debugging\r\n    axios\r\n      .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \r\n           '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'condition',\r\n           conditionInfo)\r\n      .then(res => {\r\n        var linkToSend;\r\n        if (this.state.checked) {\r\n          linkToSend = link + \"?condition=\" + condition\r\n        } else {\r\n          linkToSend = link;\r\n        }\r\n        const linkInfo = { \"link\": linkToSend };\r\n        axios\r\n          .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \r\n               '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'link',\r\n               linkInfo)\r\n          .then(res => {\r\n            this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\r\n          })\r\n      })\r\n  }\r\n\r\n  // for now deployment simply creates a collection for each experiment \r\n  // that would later store participants data\r\n  deployExpts() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    difference.forEach(expt_name => {\r\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\r\n    });\r\n  }\r\n\r\n  deploy() {\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    if (exptNames.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            No experiments.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            All experiments are deployed.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length >= 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <button style={{ padding: \"12px 28px\" }}\r\n          onClick={() => difference.forEach(name => this.onDeploy(name))}>\r\n            <b>Deploy All Experiments</b>\r\n          </button>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptBuilderLink = \"/\" + username + \"/\" +\r\n      studyName + \"/exptBuilder\";\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n\r\n    const partStudyDataLink = \"/\" + username + \"/\" + studyName + \"/participantsStudyData\";\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Study: {this.props.match.params.studyName}</h2>\r\n        <Link to={{\r\n          pathname: exptBuilderLink,\r\n          state: {\r\n              newExpt: true\r\n            }\r\n          }}>\r\n          <button>\r\n            Build an Experiment\r\n          </button>\r\n        </Link>\r\n        <br/><br/>\r\n        <Link to={partStudyDataLink}>\r\n          <button>\r\n            View All Participant Data\r\n          </button>\r\n        </Link>\r\n        <h3>\r\n          Your Experiments\r\n        </h3>\r\n        {\r\n          this.state.deployed\r\n          ? <div></div>\r\n          : <div>\r\n              <input type=\"checkbox\" onChange={this.onChecked} checked={this.state.checked}/>\r\n                I want to randomize experiments in this study\r\n              <br/>\r\n          </div>\r\n        }\r\n        {\r\n          this.state.checked \r\n          ? <div>\r\n            You have chosen to randomize experiments in this study.\r\n          </div>\r\n          : <div>\r\n            You have chosen not to randomize experiments in this study. \r\n            <br/>\r\n          </div>\r\n        }\r\n        <br/>\r\n        {this.getExptNames()}\r\n        <br /><br />\r\n        {this.deploy()}\r\n        <br />\r\n        {/* <button onClick={() => console.log(this.props.experiments)}>show state</button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nConfigStudy.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  auth: PropTypes.object.isRequired,\r\n\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  createExptCol: PropTypes.func.isRequired,\r\n\r\n  getColNames: PropTypes.func.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n\r\n  saveAddInfo: PropTypes.func.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\n// props: state\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  // experiments refer to the experiment configurations \r\n  // stored in collection [info] under the user's database\r\n  experiments: state.dataFlow.studyInfo,\r\n  colNames: state.dataFlow.colNames\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo, createExptCol, getColNames, saveAddInfo }\r\n)(ConfigStudy);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ExptConfigs extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(this.props.experiments);\r\n  }\r\n\r\n  showExptData() {\r\n    const thisExpt = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const exptObj =\r\n        this.props.experiments.find(item => item.exptName == thisExpt);\r\n      // const allKeys = Object.keys(exptObj);\r\n      // const questionKeys = allKeys.filter(\r\n      //   x => x != \"userID\" && x != \"count\" &&\r\n      //     x != \"type\" && x != \"exptName\");\r\n      // return questionKeys.map(q => {\r\n      //   const question = JSON.stringify(exptObj[q]);\r\n      //   return (\r\n      //     <div>\r\n      //       {question}\r\n      //     </div>\r\n      //   )\r\n      // })\r\n      const JSONString = JSON.stringify(exptObj);\r\n      return (\r\n        <div>\r\n          {JSONString}\r\n        </div>\r\n      )\r\n    }\r\n    // const exptName = exptObj.exptName;\r\n    // const info = JSON.stringify(exptObj);\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Configuration data: </b>\r\n        <br /><br />\r\n        {this.showExptData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  getColNames,\r\n  getColsData,\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass PartStudyData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.makeArr = this.makeArr.bind(this);\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n    this.getIndex = this.getIndex.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + username + \"/collections\")\r\n    .then(res => {\r\n      const nameArr = res.data;\r\n      const partColNames = nameArr.filter(name => \r\n        name != \"info\" && name != \"itemData\" && name.includes(studyName));\r\n      console.log(partColNames);\r\n      partColNames.map(colName => this.props.getColsData(username, colName));\r\n      this.props.getStudyInfo(username, studyName);\r\n    })\r\n  }\r\n\r\n  flattenObj(obj) {\r\n    var flattendObj = {};\r\n    const flattenObject = (obj, keyName) => {\r\n      Object.keys(obj).forEach(key => {\r\n        var newKey = `${keyName}.${key}` \r\n        if (typeof obj[key] === \"object\") {\r\n          // calling the function again\r\n          flattenObject(obj[key], newKey);\r\n        } else {\r\n          flattendObj[newKey] = obj[key];\r\n        }\r\n      });\r\n    };\r\n    flattenObject(obj, \"\");\r\n\r\n    function renameKey (obj, oldKey, newKey) {\r\n      obj[newKey] = obj[oldKey];\r\n      delete obj[oldKey];\r\n    }\r\n\r\n    const allKeys = Object.keys(flattendObj);\r\n    allKeys.map(k => {\r\n      const oldKey = k;\r\n      const newKey = oldKey.substr(1, oldKey.length);\r\n      renameKey(flattendObj, oldKey, newKey)\r\n    })\r\n\r\n    return flattendObj;\r\n  } \r\n\r\n  makeArr() {\r\n    if (!Object.keys(this.props.colsData).length == 0) {\r\n      // console.log(this.props.colData);\r\n      var arr = [];\r\n      var ids = [];\r\n      const arrToProcess = this.props.colsData;\r\n      // console.log(arrToProcess);\r\n      arrToProcess.forEach(item => {\r\n        const id = item.participantID;\r\n        const keysInItem = Object.keys(item);\r\n        const qKeys = \r\n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\r\n        \r\n        if (ids.includes(id)) {\r\n          // find that id in arr and update the item\r\n          arr.forEach(ele => {\r\n            if (ele.participantID == id) {\r\n              const prevData = ele;\r\n              qKeys.forEach(k => prevData[k] = item[k]);\r\n              ele = prevData;\r\n            }\r\n          })\r\n        } else {\r\n          // make a new item, put it in arr, and put id in ids \r\n          const doc = {};\r\n          doc[\"participantID\"] = id;\r\n          qKeys.forEach(k => doc[k] = item[k]);\r\n          arr.push(doc);\r\n          ids.push(id);\r\n          // console.log(doc);\r\n        }\r\n      })\r\n      // arr.map(ele => ele = this.flattenObj(ele));\r\n      arr.map(ele => {\r\n        const newEle = this.flattenObj(ele);\r\n        const i = arr.indexOf(ele);\r\n        arr[i] = newEle;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  showJSONData() {\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return arr.map(ele => {\r\n        const line = JSON.stringify(ele);\r\n        return (\r\n          <div>\r\n            <br/>\r\n            {line}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  getIndex() {\r\n    const studyName = this.props.match.params.studyName;\r\n    if (!this.props.experiments.length == 0) {\r\n      var allIndex = [];\r\n      this.props.experiments.map(item => {\r\n        allIndex.push(item[\"index\"]);\r\n      });\r\n\r\n      let str = \"\";\r\n      allIndex.map(item => {\r\n        const objKeys = Object.keys(item);\r\n        objKeys.map(key => {\r\n          const line = key.toString() + \": \" + item[key].toString() + \"\\n\"\r\n          str += line;\r\n        });\r\n      });\r\n\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([str], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = studyName + \"Legend.txt\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n      console.log(file);\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    const file_name = username + \"_\" + studyName + \"_data.csv\";\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return (\r\n        <div>\r\n          <h2>All Participant Data from Study: {studyName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br /><br />\r\n          <button>\r\n            <CSVLink data={arr} filename={file_name}>\r\n              Download Data as CSV\r\n            </CSVLink>\r\n          </button>\r\n          <br/><br/>\r\n          <button onClick={this.getIndex}>Download Legend</button>\r\n          {this.showJSONData()}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>All Participant Data from Study: {studyName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br /><br />\r\n          It seems like there's no participant data yet... \r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nPartStudyData.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColsData: PropTypes.func.isRequired,\r\n  getColNames: PropTypes.func.isRequired,\r\n  colsData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colsData: state.dataFlow.colsData,\r\n  colNames: state.dataFlow.colNames,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColNames, getColsData, getStudyInfo }\r\n)(PartStudyData);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  getColData,\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass PartExptData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // finalObj: {}\r\n    };\r\n\r\n    this.makeArr = this.makeArr.bind(this);\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n    this.getIndex = this.getIndex.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n    this.props.getStudyInfo(username, studyName);\r\n  }\r\n\r\n  flattenObj(obj) {\r\n    var flattendObj = {};\r\n    const flattenObject = (obj, keyName) => {\r\n      Object.keys(obj).forEach(key => {\r\n        var newKey = `${keyName}.${key}` \r\n        if (typeof obj[key] === \"object\") {\r\n          // calling the function again\r\n          flattenObject(obj[key], newKey);\r\n        } else {\r\n          flattendObj[newKey] = obj[key];\r\n        }\r\n      });\r\n    };\r\n    flattenObject(obj, \"\");\r\n\r\n    function renameKey (obj, oldKey, newKey) {\r\n      obj[newKey] = obj[oldKey];\r\n      delete obj[oldKey];\r\n    }\r\n\r\n    const allKeys = Object.keys(flattendObj);\r\n    allKeys.map(k => {\r\n      const oldKey = k;\r\n      const newKey = oldKey.substr(1, oldKey.length);\r\n      renameKey(flattendObj, oldKey, newKey)\r\n    })\r\n\r\n    return flattendObj;\r\n  } \r\n\r\n  makeArr() {\r\n    if (!Object.keys(this.props.colData).length == 0) {\r\n      // console.log(this.props.colData);\r\n      var arr = [];\r\n      var ids = [];\r\n      const arrToProcess = this.props.colData;\r\n      console.log(arrToProcess);\r\n      arrToProcess.forEach(item => {\r\n        const id = item.participantID;\r\n        const keysInItem = Object.keys(item);\r\n        // switch statement here\r\n        const qKeys = \r\n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\r\n        \r\n        if (ids.includes(id)) {\r\n          // find that id in arr and update the item\r\n          arr.forEach(ele => {\r\n            if (ele.participantID == id) {\r\n              const prevData = ele;\r\n              qKeys.forEach(k => prevData[k] = item[k]);\r\n              ele = prevData;\r\n            }\r\n          })\r\n        } else {\r\n          // make a new item, put it in arr, and put id in ids \r\n          const doc = {};\r\n          doc[\"participantID\"] = id;\r\n          qKeys.forEach(k => doc[k] = item[k]);\r\n          arr.push(doc);\r\n          ids.push(id);\r\n          // console.log(doc);\r\n        }\r\n      })\r\n      // arr.map(ele => ele = this.flattenObj(ele));\r\n      arr.map(ele => {\r\n        const newEle = this.flattenObj(ele);\r\n        const i = arr.indexOf(ele);\r\n        arr[i] = newEle;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  showJSONData() {\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return arr.map(ele => {\r\n        const line = JSON.stringify(ele);\r\n        return (\r\n          <div>\r\n            <br/>\r\n            {line}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  getIndex() {\r\n    const exptName = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const thisExpt = \r\n      this.props.experiments\r\n        .filter(item => item[\"exptName\"] == this.props.match.params.exptName)[0]\r\n      const index = thisExpt[\"index\"];\r\n\r\n      let str = \"\"\r\n      const objKeys = Object.keys(index);\r\n      objKeys.map(key => {\r\n        const line = key.toString() + \": \" + index[key].toString() + \"\\n\"\r\n        str += line;\r\n      });\r\n\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([str], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = exptName + \"Legend.txt\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n      console.log(file);\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    const file_name = username + \"_\" + studyName + \"_\" + exptName + \"_data.csv\";\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      console.log(arr);\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/>\r\n          <h4>Participants data: </h4> \r\n          {/* <button onClick={this.downloadData}>See data as csv</button> */}\r\n          <button>\r\n            <CSVLink data={arr} filename={file_name}>\r\n              Download Data as CSV\r\n            </CSVLink>\r\n          </button>\r\n          <br/><br/>\r\n          <button onClick={this.getIndex}>Download Legend</button><br/>\r\n          \r\n          <div>\r\n            {this.showJSONData()}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/><br/>\r\n          It seems like there's no participant data yet...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nPartExptData.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n\r\n  getStudyInfo: PropTypes.array.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData, getStudyInfo }\r\n)(PartExptData);","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport TabList from './components/TabList/TabList';\r\n\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport HomePage from './components/layout/HomePage';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login'\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ConfigStudy from './components/Study/ConfigStudy';\r\nimport ExptConfigs from './components/Study/ExptConfigs';\r\nimport PartStudyData from './components/Study/PartStudyData';\r\nimport PartExptData from './components/Study/PartExptData';\r\n// import BuildExpt from './components/Study/BuildExpt.jsx';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/survey-builder/\">\r\n        <div className=\"App\">\r\n          < NavBar />\r\n          <br/>\r\n          < Landing />\r\n          < Route exact path=\"/\" component={HomePage} />\r\n          < Route exact path=\"/register\" component={Register} />\r\n          < Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/:username/:studyName\"\r\n              component={ConfigStudy} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\r\n              component={TabList} />\r\n            {/* <PrivateRoute exact path=\"/:username/:studyName/newExpt\" \r\n              component={BuildExpt} /> */}\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\r\n              component={ExptConfigs}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/participantsStudyData\"\r\n              component={PartStudyData}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsExptData\"\r\n              component={PartExptData}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}