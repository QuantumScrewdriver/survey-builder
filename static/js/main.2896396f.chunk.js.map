{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","components/TabBuilder/TabBuilder.jsx","components/items/Slider/SliderTab.jsx","components/items/StaticText/StaticText.js","actions/dataActions.js","components/items/NormalCurve/NormalCurveResearch.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartData.js","components/Study/PartJSONData.js","components/Study/BuildExpt.jsx","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","colData","colNames","fileName","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","TabBuilder","selectRef","React","createRef","className","name","id","ref","this","value","onClick","build","current","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","checked","minVal","Number","maxVal","handleChange","bind","onChange","delete","count","getCount","e","setState","target","q","onInput","defaultValue","StaticText","cols","rows","getStudyInfo","which_database","which_study","get","then","res","data","experiments","getColData","col_name","NormalCurveResearch","svgRef","data1Ref","data2Ref","dotReturn","triMouseDown","triDrag","triUp","handleDrop","handleSelectedFile","x","y","isDown","rectX","down","svgWidth","svgHeight","svgX","distancing","mousePointerRange","triDown","dataReceived","fileNames","setFileNames","fileChosen","username","xPos","yPos","xPosOrig","CX","distancing1","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","distancing2","num","preventDefault","svgPre","ptPre","createSVGPoint","clientX","svgPPre","matrixTransform","getScreenCTM","inverse","prevState","triCent1","triCent2","svgPPree","screenX","screenY","pt","svg","svgP","col","Math","round","col21","col22","len2","colLim2","col11","col12","len1","colLim1","col2","content","saveFile","acceptedFiles","console","log","map","file","forEach","dataFlowColData","filter","item","itemType","includes","alert","reader","FileReader","onabort","onerror","onload","fileText","result","jsonData","JSON","parse","files","length","colValHeiS","colValHeiS2","overlapVals","readAsText","fileContent","onMouseMove","onMouseUp","width","height","Array","keys","row","dotReturn2","points","onMouseDown","style","backgroundColor","unshift","fileOptions","onDrop","accept","getRootProps","getInputProps","TabList","builderFunction","tabDefine","arr","children","push","tab","key","toString","curOutput","output","newCount","complete","deleted","exptName","myRef","submitRef","nameRef","outputCreate","checkOutput","pos","newVal","newDelete","newFile","concat","obj","int","elem","lowNum","isNaN","highNum","parseInt","indexOf","finalObj","userID","Date","match","params","sendFile","put","response","window","location","reload","catch","error","studyLink","method","dataFlowDBInfo","dataFlowFileName","post","Navbar","userIsLoggedIn","Landing","HomePage","Register","onSubmit","newUser","password","password2","registerUser","history","nextProps","noValidate","classnames","invalid","userExists","userData","err","withRouter","Login","loginUser","userNotFound","pwdIncorrect","class","setItem","jwt_decode","Dashboard","onLogoutClick","onAddStudy","getDBInfo","Object","link","addStudyName","href","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployExpts","getColNames","split","deployed","processColNames","expt","exptDataLink","partJSONDataLink","exptPartLink","text","expt_name","createExptCol","exptNames","difference","color","exptBuilderLink","getExptNames","deploy","which_expt","ExptConfigs","thisExpt","exptObj","find","question","stringify","showExptData","returnRow","colName","hd","answer","align","partDataHeader","showPartData","showJSONData","BuildExpt","numOfItems","showItems","itemToSelect","preBuild","showItem","toggleShowItems","inputNumItems","inputs","i","jwtToken","currentTime","now","exp","App","basename","NavBar","exact","path","PartData","PartJSONData","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2896396f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \r\n// if the user is already logged in \r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","// types are how actions communicate with reducers\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\r\nexport const GET_DB_INFO = \"GET_DB_INFO\";\r\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\r\nexport const GET_COL_DATA = \"GET_COL_DATA\";\r\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";\r\n\r\nexport const STORE_FILENAME = \"STORE_FILENAME\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const SEND_FILE = \"SEND_FILE\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\"); \r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default: return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: return action.payload;\r\n        default: return state;\r\n    }\r\n}","import {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  studyName: '',\r\n  dbInfo: [],\r\n  studyInfo: [],\r\n  colData: [],\r\n  colNames: [],\r\n  // files: []\r\n  fileName: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_STUDY_NAME:\r\n      return {\r\n        ...state,\r\n        studyName: action.payload\r\n      };\r\n    case GET_DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_STUDY_INFO:\r\n      return {\r\n        ...state,\r\n        studyInfo: action.payload\r\n      };\r\n    case GET_COL_DATA:\r\n      return {\r\n        ...state,\r\n        colData: action.payload\r\n      };\r\n    case GET_COL_NAMES:\r\n      return {\r\n        ...state,\r\n        colNames: action.payload\r\n      };\r\n    // case STORE_FILE:\r\n    //   return {\r\n    //     ...state,\r\n    //     files: [...state.files, action.payload]\r\n    //   };\r\n    case STORE_FILENAME:\r\n      return {\r\n        ...state,\r\n        fileName: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport dataReducer from \"./dataReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  dataFlow: dataReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nclass TabBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  // ###TODO###: add options here when you add your experiment type\r\n  render() {\r\n    return (\r\n      <div className=\"unit\">\r\n        <span>Choose what element to add next</span><br />\r\n        <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\r\n          <option value=\"slider\">Slider</option>\r\n          <option value=\"static-text\">Static Text</option>\r\n          <option value=\"normal-curve\">Normal Curve</option>\r\n        </select>\r\n        <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabBuilder;","import React, { Component } from 'react';\r\nimport './SliderTab.css';\r\n\r\nclass SliderTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sliderRef = React.createRef();\r\n    this.outputRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.state = { min: 1, max: 100 }\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"unit\">\r\n        <p>Question: <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} ref={this.qRef} type=\"text\" /></p><br/>\r\n        {this.state.minVal}\r\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\r\n        {this.state.maxVal} <br/>\r\n        <p>Minimum: \r\n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n          ref={this.minRef} type=\"text\" \r\n          name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p><br/>\r\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\r\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n          ref={this.maxRef} type=\"text\" \r\n          name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderTab;","import React, { Component } from 'react';\r\n\r\nclass StaticText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.qRef = React.createRef();\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"unit\">\r\n        Enter your static text below: <br/>\r\n        <textarea cols=\"60\" rows=\"10\" ref={this.qRef}\r\n          onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\r\n        </textarea>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StaticText;","import axios from \"axios\";\r\nimport {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME,\r\n  SEND_FILE\r\n} from \"./types\";\r\n\r\nexport const addStudyName = (which_database, study_name) => dispatch => {\r\n  const dataToPost = {\r\n    studyName: study_name,\r\n    experiments: []\r\n  };\r\n  // note that the goal of the following step is to show researchers \r\n  // the name of the study they have just created. This is totally doable\r\n  // via a simple this.state written in Dashboard. However, putting it here\r\n  // just makes things more organized and fits well with the rest of the \r\n  // redux structure I have used to create this demo\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\r\n      dataToPost)\r\n    .then(entry => {\r\n      // console.log(entry);\r\n      dispatch({\r\n        type: ADD_STUDY_NAME,\r\n        payload: entry.data.studyName\r\n      });\r\n      alert(\"Study [\" + study_name + \"] is created.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getDBInfo = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_DB_INFO,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      '/info/studyName-' + which_study)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_STUDY_INFO,\r\n        payload: res.data.experiments\r\n      })\r\n    })\r\n}\r\n\r\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\r\n      \"/createCol/\" + col_name)\r\n    .then(res => {\r\n      // we can potentially improve the alert box\r\n      // alert(\"Experiment [\" + which_expt + \"] is deployed.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getColData = (which_database, col_name) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      \"/\" + col_name)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_DATA,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getColNames = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_NAMES,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const storeFileName = (fileName) => dispatch => {\r\n  dispatch({\r\n    type: STORE_FILENAME,\r\n    payload: fileName\r\n  })\r\n}\r\n\r\nexport const sendFile = (which_database, file) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      \"/itemData\", file)\r\n    .then(res => {\r\n      console.log(\"Data sent to DB\");\r\n    })\r\n}","import React, { Component } from 'react';\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport './NormalCurve.css';\n\n// NEW:\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { \n  getColData\n} from '../../../actions/dataActions'\n\nclass NormalCurveResearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.svgRef = React.createRef();\n\n    this.qRef = React.createRef();\n    this.data1Ref = React.createRef();\n    this.data2Ref = React.createRef();\n\n    this.dotReturn = this.dotReturn.bind(this);\n    this.triMouseDown = this.triMouseDown.bind(this);\n    this.triDrag = this.triDrag.bind(this);\n    this.triUp = this.triUp.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\n\n    this.state = {\n      x: 0, y: 0, isDown: false,\n      rectX: 12.5,\n      down: false,\n      svgWidth: 500,\n      svgHeight: 250,\n      svgX: 6,\n      distancing: 7,\n      mousePointerRange: 0,\n      triDown: false,\n      dataReceived: false,\n      fileNames: [],\n      setFileNames: [],\n      fileChosen: ''\n    };\n  }\n\n  componentDidMount() {\n    const username = this.props.auth.user.username;\n    this.props.getColData(username, \"itemData\");\n  }\n\n  dotReturn(xPos, yPos) {\n    const xPosOrig = xPos;\n    if (xPos > 7) {\n      xPos = 15 - xPos;\n    }\n    const CX = this.state.distancing1 + this.state.distancing * xPosOrig + 10;\n    const CY = 140 - this.state.distancing * yPos + 10;\n    var hard;\n    if (CX < this.state.rectX) {\n      hard = <circle className=\"icon\" stroke=\"DarkCyan\" fill=\"DarkCyan\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n    else {\n      hard = <circle className=\"icon\" stroke=\"DarkCyan\" fill=\"DarkCyan\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n    return hard;\n  }\n\n  dotReturn2(xPos, yPos) {\n    const xPosOrig = xPos;\n    if (xPos > 7) {\n      xPos = 15 - xPos;\n    }\n    const CX = this.state.distancing2 + this.state.distancing * xPosOrig + 10;\n    const CY = 140 - this.state.distancing * yPos + 10;\n    var hard;\n    if (CX < this.state.rectX) {\n      hard = <circle className=\"icon\" stroke=\"Crimson\" fill=\"Crimson\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n    else {\n      hard = <circle className=\"icon\" stroke=\"Crimson\" fill=\"Crimson\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n    return hard;\n  }\n\n  triMouseDown(e, num) {\n    if (e.type === \"mousedown\") {\n      // console.log(\"MOUSEDOWN\");\n      e.preventDefault();\n      var svgPre = this.svgRef.current;\n      // Set mousePointerRange so that we know the distance\n      // from the mouse tip to the x-value of the triangle\n      // tip\n      var ptPre = svgPre.createSVGPoint();\n      ptPre.x = e.clientX;\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\n      if (num === 1) {\n        this.setState(prevState => ({\n          // rectX : svgP.x,\n          triDown: num,\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\n        }));\n      }\n      else if (num === 2) {\n        this.setState(prevState => ({\n          // rectX : svgP.x,\n          triDown: num,\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\n        }));\n      }\n      // console.log(this.state);\n    }\n  }\n\n  triDrag(e) {\n    // Set mousePointerRange so that we know the distance\n    // from the mouse tip to the x-value of the triangle\n    // tip\n    var svgPre = this.svgRef.current;\n    var ptPre = svgPre.createSVGPoint();\n    ptPre.x = e.clientX;\n    var svgPPree = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\n    this.setState({ x: e.screenX, y: e.screenY, svgX: svgPPree.x });\n    if (this.state.triDown === 2) {\n      // console.log(\"DRAG CONT'D\");\n      var svg = this.svgRef.current;\n      var pt = svg.createSVGPoint();\n      pt.x = e.clientX;\n      var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n      e.preventDefault();\n      var x = svgP.x - this.state.triCent2 + this.state.mousePointerRange;\n      var col = Math.round((x - 6) / 7);\n      if (col < 0) {\n        this.setState({ distancing2: 0, col21: 0, col22: this.state.len2 - 1 });\n      }\n      else if (col > this.state.colLim2) {\n        this.setState({ distancing2: this.state.distancing * this.state.colLim2, col21: this.state.colLim2, col22: this.state.colLim2 + this.state.len2 - 1 })\n      }\n      else {\n        this.setState({ distancing2: this.state.distancing * col, col21: col, col22: col + this.state.len2 - 1 });\n      }\n      // this.setState({ distancing2 : x })\n    }\n    else if (this.state.triDown === 1) {\n      // console.log(\"DRAG CONT'D\");\n      var svg = this.svgRef.current;\n      var pt = svg.createSVGPoint();\n      pt.x = e.clientX;\n      var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n      e.preventDefault();\n      var x = svgP.x - this.state.triCent1 + this.state.mousePointerRange;\n      var col = Math.round((x - 6) / 7);\n      if (col < 0) {\n        this.setState({ distancing1: 0, col11: 0, col12: this.state.len1 - 1 });\n      }\n      else if (col > this.state.colLim1) {\n        this.setState({ distancing1: this.state.distancing * this.state.colLim1, col11: this.state.colLim1, col2: this.state.colLim1 + this.state.len1 - 1 })\n      }\n      else {\n        this.setState({ distancing1: this.state.distancing * col, col11: col, col12: col + this.state.len1 - 1 });\n      }\n      // this.setState({ distancing2 : x })\n    }\n  }\n\n  triUp(e) {\n    // console.log(\"UP\");\n    if (this.state.triDown) {\n      this.setState({ triDown: false });\n    }\n  }\n\n  saveFile(type, name, content) {\n    this.props.saveFile(type, name, content);\n  }\n\n  handleDrop(acceptedFiles) {\n    if (acceptedFiles) {\n      console.log(acceptedFiles.map(file => {\n        acceptedFiles.forEach((file) => {\n\n          const normalCurveFiles = this.props.dataFlowColData.filter(\n            item => item.itemType == \"normal-curve\");\n          var fileNames = normalCurveFiles.map(item => item.fileName);\n          if (fileNames.includes(file.name)) {\n            alert(\"File name already exists. Please upload a file\" +  \n              \" with a unique name.\");\n            this.setState({ dataReceived: false });\n          } else {\n            \n            this.handleChange(\"FileName\", file.name, this.props.count);\n\n            const reader = new FileReader();\n            reader.onabort = () => console.log('file reading was aborted')\n            reader.onerror = () => console.log('file reading has failed')\n            reader.onload = () => {\n              // Do whatever you want with the file contents\n              const fileText = reader.result;\n              // console.log(fileText);\n              const jsonData = JSON.parse(fileText);\n\n              this.handleChange(\"FileContent\", jsonData, this.props.count);\n              if (this.props.files.length == 0) {\n                this.saveFile(\"normal-curve\", file.name, jsonData);\n              } else {\n                const names = this.props.files.map(item => item.fileName);\n                if (!names.includes(file.name)) {\n                  this.saveFile(\"normal-curve\", file.name, jsonData);\n                }\n              }\n              this.setState({\n                dataReceived: true,\n                len1: jsonData[\"len1\"],\n                colValHeiS: jsonData[\"colValHeiS\"],\n                len2: jsonData[\"len2\"],\n                colValHeiS2: jsonData[\"colValHeiS2\"],\n                distancing1: (jsonData[\"len2\"] + 1) * 7,\n                distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * 7,\n                triCent1: Math.round((0.5 * jsonData[\"len1\"]) * 7) + 7,\n                triCent2: Math.round((0.5 * jsonData[\"len2\"]) * 7) + 7,\n                col11: jsonData[\"len2\"] + 1,\n                col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\n                col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\n                col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\n                colLim1: Math.round((500 - (jsonData[\"len1\"] * 7)) / 7),\n                colLim2: Math.round((500 - (jsonData[\"len2\"] * 7)) / 7),\n                overlapVals: jsonData[\"overlapVals\"]\n              });\n            };\n            reader.readAsText(file);\n          };\n        })\n      }));\n    }\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\n  }\n\n  handleSelectedFile() {\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\n\n    const jsonData = this.props.dataFlowColData.filter(item => \n      item.fileName == this.state.fileChosen)[0].fileContent;\n\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\n\n    this.setState({\n      dataReceived: true,\n      len1: jsonData[\"len1\"],\n      colValHeiS: jsonData[\"colValHeiS\"],\n      len2: jsonData[\"len2\"],\n      colValHeiS2: jsonData[\"colValHeiS2\"],\n      distancing1: (jsonData[\"len2\"] + 1) * 7,\n      distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * 7,\n      triCent1: Math.round((0.5 * jsonData[\"len1\"]) * 7) + 7,\n      triCent2: Math.round((0.5 * jsonData[\"len2\"]) * 7) + 7,\n      col11: jsonData[\"len2\"] + 1,\n      col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\n      col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\n      col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\n      colLim1: Math.round((500 - (jsonData[\"len1\"] * 7)) / 7),\n      colLim2: Math.round((500 - (jsonData[\"len2\"] * 7)) / 7),\n      overlapVals: jsonData[\"overlapVals\"]\n    })\n  }\n\n  delete() {\n    this.props.delete(this.props.count);\n  }\n\n  getCount() {\n    this.props.getCount(this.props.count);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleChange(type, q, count) {\n    this.props.handleChange(type, q, count);\n  }\n\n  render() {\n    if (this.state.dataReceived) {\n      return (\n        <form\n          onMouseMove={e => this.triDrag(e)}\n          onMouseUp={e => this.triUp(e)}>\n          <svg width={this.state.svgWidth} height={this.state.svgHeight} ref={this.svgRef}>\n            {/* <rect width=\"100%\" height=\"100%\" fill=\"red\"/> */}\n            {[...Array(this.state.len1).keys()].map(\n              (col) =>\n                [...Array(this.state.colValHeiS[col]).keys()].map(\n                  (row) => this.dotReturn(col, row)\n                )\n            )}\n            {[...Array(this.state.len2).keys()].map(\n              (col) =>\n                [...Array(this.state.colValHeiS2[col]).keys()].map(\n                  (row) => this.dotReturn2(col, row)\n                )\n            )}\n            <polygon\n              points={\n                [\n                  [this.state.triCent1 + this.state.distancing1 - 15, 175],\n                  [this.state.triCent1 + this.state.distancing1 + 15, 175],\n                  [this.state.triCent1 + this.state.distancing1, 160]\n                ]\n              }\n              onMouseDown={(e, num) => this.triMouseDown(e, 1)}\n            />\n            <polygon\n              points={\n                [\n                  [this.state.triCent2 + this.state.distancing2 - 15, 175],\n                  [this.state.triCent2 + this.state.distancing2 + 15, 175],\n                  [this.state.triCent2 + this.state.distancing2, 160]\n                ]\n              }\n              onMouseDown={(e, num) => this.triMouseDown(e, 2)}\n            />\n            Sorry, please use a different browser.\n          </svg><br/>\n          <p>\n            Question: <p></p> <br/>\n            <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \n              onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\n            </textarea>\n            {/* <input type=\"text\" ref={this.qRef} style={{ height: \"100px\", width: \"100px\" }}\n              onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}/> */}\n          </p><br/><br/>\n          {/* Modified below */}\n          <div className=\"boxed\">\n            <div className=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\n            <input type=\"text\" id=\"Data1\" name=\"Data1\" ref={this.data1Ref}\n              onInput={() => this.handleChange(\"Data1\", this.data1Ref.current.value, this.props.count)} />\n            <br />\n            <div className=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\n            <input type=\"text\" id=\"Data2\" name=\"Data2\" ref={this.data2Ref}\n              onInput={() => this.handleChange(\"Data2\", this.data2Ref.current.value, this.props.count)}/>\n          </div><br/>\n          <button onClick={this.delete.bind(this)}>Delete this Question</button>\n          <br/><br/>\n        </form>\n      )\n    }\n    else {\n      const normalCurveFiles = this.props.dataFlowColData.filter(\n        item => item.itemType == \"normal-curve\");\n      var fileNames = normalCurveFiles.map(item => item.fileName);\n      fileNames.unshift(\"Select File\");\n      const renderOption = item => <option value={item}>{item}</option>\n      const fileOptions = fileNames.map(renderOption);\n      \n      return (\n        <div className=\"boxed\">\n          Select previously uploaded files: \n          <br/>\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\n            {fileOptions}\n          </select>\n          <button onClick={this.handleSelectedFile}>OK</button>\n          <br/>\n          <Dropzone\n            onDrop={this.handleDrop}\n            accept=\"application/JSON, .json\"\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps({ className: \"dropzone\" })}>\n                <input {...getInputProps()} />\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\n              </div>\n            )}\n          </Dropzone>\n        </div>\n      )\n    }\n  }\n}\n\nNormalCurveResearch.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getColData: PropTypes.func.isRequired,\n  dataFlowColData: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  dataFlowColData: state.dataFlow.colData\n});\n\nexport default connect(\n  mapStateToProps,\n  { getColData }\n)(NormalCurveResearch);","import React, { Component } from 'react';\r\nimport './TabList.css';\r\nimport '../TabBuilder/TabBuilder'\r\nimport TabBuilder from '../TabBuilder/TabBuilder'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ###TODO###: import your component here\r\nimport SliderTab from '../items/Slider/SliderTab';\r\nimport StaticText from '../items/StaticText/StaticText';\r\nimport NormalCurveResearch from '../items/NormalCurve/NormalCurveResearch';\r\n\r\nimport { sendFile } from '../../actions/dataActions'\r\n\r\nconst axios = require('axios');\r\n\r\n// This component allows Psych researchers to configure an experiment \r\nclass TabList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      count: 0,\r\n      output: {},\r\n      deleted: [],\r\n      complete: false,\r\n      exptName: '',\r\n      files: []\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.submitRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n\r\n    this.builderFunction = this.builderFunction.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.outputCreate = this.outputCreate.bind(this);\r\n    this.checkOutput = this.checkOutput.bind(this);\r\n\r\n    this.saveFile = this.saveFile.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  builderFunction = (tabDefine) => {\r\n    var arr = this.state.children;\r\n    // ###TODO###: Add more cases here for TabList to display \r\n    //             Follow the format of the provided components below\r\n    switch (tabDefine) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\r\n  }\r\n\r\n  // Input: \r\n  //  pos: key of JSON object\r\n  //  newVal: value of JSON object\r\n  //  count: the numerical order of the JSON object\r\n  // Action: put the key and value pair in the final output JSON object\r\n  handleChange(pos, newVal, count) {\r\n    var curOutput = this.state.output;\r\n    curOutput[count.toString()][pos] = newVal;\r\n    this.setState({ output: curOutput });\r\n  }\r\n\r\n  delete(id) {\r\n    var newDelete = this.state.deleted;\r\n    newDelete.push(id);\r\n    this.setState({ deleted: newDelete });\r\n  }\r\n\r\n  getCount(count) {\r\n    return count;\r\n  }\r\n\r\n  // Action: put newly uploaded files into this.state. \r\n  //         All newly uploaded files will be sent to database as JSON objs\r\n  saveFile(type, name, content) {\r\n    const newFile = {\r\n      \"itemType\": type,\r\n      \"fileName\": name,\r\n      \"fileContent\": content\r\n    };\r\n    this.setState({ files: this.state.files.concat(newFile) });\r\n  }\r\n\r\n  // validating input fields. \r\n  // for now: developers will need to add a case below \r\n  checkOutput(obj) {\r\n    var int = 0;\r\n    var complete = true;\r\n    while ((int.toString()) in obj) {\r\n      var elem = obj[int.toString()];\r\n      switch (elem[\"Type\"]) {\r\n        case \"slider\":\r\n          var lowIs = \"lowRange\" in elem;\r\n          var highIs = \"highRange\" in elem;\r\n          var qIs = \"Question\" in elem;\r\n          if (lowIs && highIs && qIs) {\r\n            var lowNum = !isNaN(elem[\"lowRange\"]);\r\n            var highNum = !isNaN(elem[\"highRange\"]);\r\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\r\n            if (highLow && lowNum && highNum) {\r\n              complete = complete && true;\r\n            }\r\n            else {\r\n              complete = false;\r\n            }\r\n          }\r\n          else {\r\n            complete = false;\r\n          }\r\n          break;\r\n        default:\r\n          complete = false;\r\n      case \"normal-curve\":\r\n        complete = true;\r\n      }\r\n      int++;\r\n    }\r\n    return complete;\r\n  }\r\n\r\n  outputCreate() {\r\n    var obj = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\r\n    var validName = this.nameRef.current.value.length > 0;\r\n    // if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\r\n    if (!validName) {\r\n      alert(\"You have not filled out all fields, or have entered an invalid value!\");\r\n    }\r\n    else {\r\n      var finalObj = { userID: new Date().toString() };\r\n      finalObj[\"exptName\"] = this.nameRef.current.value;\r\n      var int = 0;\r\n      while (int < this.state.count) {\r\n        if ((int.toString()) in obj) {\r\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n        }\r\n        int++;\r\n      }\r\n      finalObj[\"count\"] = int;\r\n\r\n      const username = this.props.auth.user.username;\r\n      const studyName = this.props.match.params.studyName;\r\n\r\n      if (!this.state.files.length == 0) {\r\n        this.state.files.map(item => this.props.sendFile(username, item))\r\n      };\r\n\r\n      axios.put(\r\n        'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName + '/experiments',\r\n        finalObj\r\n      )\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .then(function (response) {\r\n          alert(\"Your experiment has been successfully created\");\r\n          window.location.reload(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div ref={this.myRef}>\r\n        <h2>Experiment Builder</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <form action=\"/submit\" method=\"POST\" className=\"unit\">\r\n          <p>Enter a name for this experiment </p>\r\n          <input ref={this.nameRef}\r\n            value={this.state.exptName}\r\n            onChange={this.onChange}\r\n            type=\"text\" id=\"userid\" name=\"exptName\" /><br /><br />\r\n        </form>\r\n        {\r\n          this.state.children\r\n            .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n            .map((item) => {\r\n              return item.tab;\r\n            })\r\n        }\r\n        <TabBuilder build={this.builderFunction} />\r\n        <div className=\"extraPad\">\r\n          <button onClick={this.outputCreate} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired,\r\n  sendFile: PropTypes.func.isRequired,\r\n  dataFlowFileName: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo,\r\n  dataFlowFileName: state.dataFlow.fileName\r\n});\r\n\r\n// export default TabList;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendFile }\r\n)(TabList);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n            <br/>\r\n            {userIsLoggedIn ? '' : \r\n              <Link to=\"/register\">Register</Link>}\r\n            <br/>\r\n            {userIsLoggedIn ? \r\n              <Link to=\"/dashboard\"> Dashboard </Link> \r\n              : \r\n              <Link to=\"/login\">Login</Link>}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Navbar;\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentWillMount() {\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          Scientist: <b>{this.props.auth.user.username}</b>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n      return(\r\n        <div className=\"container\">\r\n            <h1>\r\n            Welcome to Psych Researcher App!\r\n            </h1>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(HomePage);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    };\r\n  };\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form and flask request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register below</h1>\r\n        <p className=\"grey-text text-darken-1\">\r\n          Already have an account?\r\n                    <Link to=\"/login\">Log in</Link>\r\n        </p>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              // userExists comes from res json message in API\r\n              invalid: errors.userExists\r\n            })} />\r\n          <span className=\"red-text\">{errors.userExists}</span>\r\n          <br />\r\n          <br />\r\n            Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n              invalid: errors.password})} />\r\n          <span className=\"red-text\">{errors.password}</span>\r\n          <br />\r\n          <br />\r\n            Confirm Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password2})} />\r\n          <span className=\"red-text\">{errors.password2}</span>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\" className=\"btn\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Register;\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// map state from redux props to use inside components\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n// linking redux to Register component\r\n// withRouter makes it easy to redirect within a component\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // push user to dashboard when they login\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form post and request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    console.log(userData);\r\n    // we are redirecting wthin a component, so we don't need to\r\n    // pass in this.props.history\r\n    this.props.loginUser(userData);\r\n  };\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Log in</h1>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.userNotFound\r\n              // || USERNAME NOT FOUND\r\n            })} />\r\n          <span className=\"red-text\">{errors.userNotFound}</span>\r\n          <br />\r\n          <br />\r\n                    Password:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.pwdIncorrect\r\n            })} />\r\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Log in\"\r\n            class=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Login;\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport {\r\n  addStudyName,\r\n  getDBInfo\r\n} from \"../../actions/dataActions\";\r\n\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studyName: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onAddStudy = this.onAddStudy.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // load experiment names when the page loads\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getDBInfo(username); // dbInfo will be in the store now\r\n  }\r\n\r\n  getStudyNames() {\r\n    // TODO. Filter out study names. If an item doesn't have study names\r\n    // as a key, then don't do anything. (wrap everything inside an if)\r\n    const allInfo = this.props.dataFlowDBInfo;\r\n    return allInfo.map(item => {\r\n      const allKeys = Object.keys(item);\r\n      if (allKeys.includes(\"studyName\")) {\r\n        const username = this.props.auth.user.username;\r\n        const link = \"/\" + username + \"/\" + item.studyName;\r\n        return (\r\n          <div className=\"container\">\r\n            <p>\r\n              {item.studyName} <p> </p>\r\n              <Link to={link}>\r\n                View\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddStudy() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.addStudyName(username, this.state.studyName);\r\n    // // alert(\"Your study has been succesfully created.\");\r\n    // window.location.reload(false);\r\n  };\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const username = this.props.auth.user.username;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Dashboard</h2>\r\n\r\n        <form>\r\n          Click on this <p></p>\r\n          <b>\r\n          <a href=\"https://colab.research.google.com/drive/1yleVQB_CrNJ5Z3v-YPatW2XqAD7yS8yp?usp=sharing\" target=\"_blank\">link</a>\r\n          </b> <p></p>\r\n          to configure a <b>normal curve</b> item.\r\n        </form>\r\n\r\n        <form onSubmit={this.onAddStudy}>\r\n          <b>Enter a name for your study:</b> <br/>\r\n          <input type=\"text\" name=\"studyName\"\r\n            value={this.state.studyName} onChange={this.onChange} />\r\n          <input type=\"submit\" value=\"Add Study\" /> <br/>\r\n          Please do <b>not</b> use \"-\" in the name\r\n        </form>\r\n\r\n        <form>\r\n          <br />\r\n          {this.getStudyNames()}\r\n          <br />\r\n        </form>\r\n\r\n        <button\r\n          onClick={this.onLogoutClick}\r\n          className=\"btn\">\r\n          Logout\r\n                </button>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  logoutUser: PropTypes.func.isRequired,\r\n  addStudyName: PropTypes.func.isRequired,\r\n  getDBInfo: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, addStudyName, getDBInfo }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  getStudyInfo,\r\n  createExptCol,\r\n  getColNames\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ConfigStudy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.deployExpts = this.deployExpts.bind(this);\r\n  }\r\n  // note: using params to get studyName is probably not good practice. \r\n  // figure out a better way to get info from previous page later, might\r\n  // use cookies? or does react have some way to pass states between pages?\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    this.props.getColNames(username);\r\n  }\r\n\r\n  processColNames() {\r\n    const studyName = this.props.match.params.studyName;\r\n    const processedArr = this.props.colNames.filter(name => name !== \"info\");\r\n    const currentStudyExpts = processedArr.filter(name =>\r\n      name.split('-')[0] == studyName);\r\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\r\n    // this.setState({ deployExpts: deployedExpts });\r\n    return deployedExpts;\r\n  }\r\n\r\n  getExptNames() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    // check if the experiments are deployed \r\n    return this.props.experiments.map(expt => {\r\n      const exptName = expt.exptName;\r\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/configs\";\r\n      const partDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsData\";\r\n      const partJSONDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsJSONData\";\r\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \r\n        \"participant-app/#/participant-app/expt/\" + username + \r\n          \"/\" + studyName + \"-\" + exptName\r\n      if (deployed.includes(exptName)) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"boxed\">\r\n              <b>{expt.exptName}</b> <br/>\r\n              <Link to={exptDataLink}>\r\n                <button type=\"button\">\r\n                  Experiment Configs\r\n                </button>\r\n              </Link> <p> </p>\r\n              <Link to={partJSONDataLink}>\r\n                <button type=\"button\">\r\n                  View Participants Data\r\n                </button>\r\n              </Link> <p> </p> <br/><br/>\r\n              Experiment Link: <br/>\r\n              {exptPartLink} <br/>\r\n              <CopyToClipboard text={exptPartLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Experiment link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"boxed\">\r\n            {expt.exptName} <p> </p>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Experiment Configs\r\n              </button>\r\n            </Link><br/>\r\n            <b>TODO</b>: Paste the link to demographics qualtrics survey below: <br/>\r\n            <textarea cols=\"60\" rows=\"1\"></textarea>\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  // for now deployment simply creates a collection for each experiment \r\n  // that would later store participants data\r\n  deployExpts() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    difference.forEach(expt_name => {\r\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\r\n    });\r\n  }\r\n\r\n  deploy() {\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    if (exptNames.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            No experiments.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            All experiments are deployed.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <button\r\n            class=\"btn\"\r\n            onClick={this.deployExpts}>\r\n            Deploy: <p></p>\r\n              {difference.map(name => { return (<b>[{name}] </b>) })}\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptBuilderLink = \"/\" + username + \"/\" +\r\n      studyName + \"/exptBuilder\";\r\n    const normalCurvesLink = \"/\" + username + \"/\" +\r\n      studyName + \"/normalCurves\";\r\n    const buildExptLink = \"/\" + username + \"/\" + studyName + \"/newExpt\";\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>{this.props.match.params.studyName}</h2>\r\n        <Link to={exptBuilderLink}>\r\n          <button>\r\n            Build an Experiment\r\n          </button>\r\n        </Link>\r\n        <br/>\r\n        {/* <Link to={buildExptLink}>\r\n          Build a new experiment\r\n        </Link>\r\n        <br/> */}\r\n        {/* <Link to={normalCurvesLink}>\r\n          Build a normal curve item\r\n        </Link> */}\r\n        <form>\r\n          <h3>\r\n            Your Experiments\r\n          </h3>\r\n          {this.getExptNames()}\r\n          <br /><br />\r\n          {this.deploy()}\r\n          <br />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nConfigStudy.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  auth: PropTypes.object.isRequired,\r\n\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  createExptCol: PropTypes.func.isRequired,\r\n\r\n  getColNames: PropTypes.func.isRequired,\r\n  colNames: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\n// props: state\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  // experiments refer to the experiment configurations \r\n  // stored in collection [info] under the user's database\r\n  experiments: state.dataFlow.studyInfo,\r\n  colNames: state.dataFlow.colNames\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo, createExptCol, getColNames }\r\n)(ConfigStudy);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ExptConfigs extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(this.props.experiments);\r\n  }\r\n\r\n  showExptData() {\r\n    const thisExpt = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const exptObj =\r\n        this.props.experiments.find(item => item.exptName == thisExpt);\r\n      const allKeys = Object.keys(exptObj);\r\n      const questionKeys = allKeys.filter(\r\n        x => x != \"userID\" && x != \"count\" &&\r\n          x != \"type\" && x != \"exptName\");\r\n      return questionKeys.map(q => {\r\n        const question = JSON.stringify(exptObj[q]);\r\n        return (\r\n          <div>\r\n            {question}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n    // const exptName = exptObj.exptName;\r\n    // const info = JSON.stringify(exptObj);\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"container\">\r\n        <br /><br />\r\n                Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Configuration data: </b>\r\n        <br /><br />\r\n        {this.showExptData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getColData\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass ExptConfigs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.returnRow = this.returnRow.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n  }\r\n\r\n  partDataHeader() {\r\n    var item = {};\r\n    if (!this.props.colData.length == 0) {\r\n      item = this.props.colData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n      <th>{hd}</th>\r\n      )\r\n    })\r\n  }\r\n\r\n  returnRow(answer) {\r\n    var item = {};\r\n    if (!this.props.colData.length == 0) {\r\n      item = this.props.colData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n        <th>\r\n          {answer[hd]}\r\n        </th>\r\n      )\r\n    })\r\n  }\r\n\r\n  showPartData() {\r\n    if (!this.props.colData.length == 0) {\r\n      return this.props.colData.map(answer => {\r\n        return (\r\n          <tr>\r\n            {this.returnRow(answer)}\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div>\r\n        <br /><br />\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Participants data: </b>\r\n        <br /><br />\r\n        <table align=\"center\">\r\n          <tbody>\r\n            <tr>{this.partDataHeader()}</tr>\r\n            {this.showPartData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getColData\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass ExptConfigs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.exptName);\r\n  }\r\n\r\n  showJSONData() {\r\n    if (!Object.keys(this.props.colData).length == 0) {\r\n      const data = JSON.stringify(this.props.colData);\r\n      return (\r\n        <div>\r\n          {data}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div>\r\n        <br /><br />\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <h3>{this.props.match.params.exptName}</h3>\r\n        <h4>Participants data: </h4>\r\n        {this.showJSONData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BuildExpt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exptName: '',\r\n      numOfItems: Number,\r\n      showItems: false,\r\n      itemToSelect: [\"slider\", \"normal curve\"]\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.preBuild = this.preBuild.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.toggleShowItems = this.toggleShowItems.bind(this);\r\n    this.inputNumItems = this.inputNumItems.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showItem() {\r\n    console.log(this.state.numOfItems);\r\n    const inputs = [];\r\n    for (let i = 1; i <= this.state.numOfItems; i ++) {\r\n      inputs.push(\r\n        <div>\r\n          Hello\r\n        </div>\r\n      )\r\n    }\r\n    return inputs;\r\n  }\r\n\r\n  toggleShowItems() {\r\n    this.setState({ showItems: true })\r\n  }\r\n\r\n  inputNumItems() {\r\n    return (\r\n      <div>\r\n        How many items do you want to build? <br/><br/>\r\n        <input type=\"text\" name=\"numOfItems\" value={this.state.numOfItems}\r\n          onChange={this.onChange}/> <p></p>\r\n        <button class=\"btn\" onClick={this.toggleShowItems}>Ok</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  preBuild() {\r\n    return (\r\n      <div className=\"container\">\r\n        Enter experiment name: <br/><br/>\r\n        <input type=\"text\" name=\"exptName\" value={this.state.exptName}\r\n          onChange={this.onChange}/> <br/><br/>\r\n          {\r\n            !this.state.showItems && \r\n            <this.inputNumItems/>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Experiment Builder</h3> <br/>\r\n        {this.preBuild()} <br/>\r\n        { this.state.showItems && <this.showItem/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BuildExpt;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport TabList from './components/TabList/TabList';\r\nimport NormalCurveResearch from './components/items/NormalCurve/NormalCurveResearch';\r\n\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport HomePage from './components/layout/HomePage';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login'\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ConfigStudy from './components/Study/ConfigStudy';\r\nimport ExptConfigs from './components/Study/ExptConfigs';\r\nimport PartData from './components/Study/PartData';\r\nimport PartJSONData from './components/Study/PartJSONData';\r\nimport BuildExpt from './components/Study/BuildExpt.jsx';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/survey-builder/\">\r\n        <div className=\"App\">\r\n          < NavBar />\r\n          <br/>\r\n          < Landing />\r\n          < Route exact path=\"/\" component={HomePage} />\r\n          < Route exact path=\"/register\" component={Register} />\r\n          < Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/:expt/participantsData\"\r\n              component={PartData} />\r\n            <PrivateRoute exact path=\"/:username/:studyName\"\r\n              component={ConfigStudy} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\r\n              component={TabList} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/newExpt\" \r\n              component={BuildExpt} />\r\n            {/* <PrivateRoute exact path=\"/:username/:studyName/normalCurves\"\r\n              component={NormalCurveResearch} /> */}\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\r\n              component={ExptConfigs}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsData\"\r\n              component={PartData}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsJSONData\"\r\n              component={PartJSONData}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}