{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","components/TabBuilder/TabBuilder.jsx","components/items/Slider/SliderTab.jsx","components/items/StaticText/StaticText.js","components/items/NormalCurve/NormalCurve.jsx","actions/dataActions.js","components/items/NormalCurve/NormalCurveResearch.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartData.js","components/Study/PartJSONData.js","components/Study/BuildExpt.jsx","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","colData","colNames","fileName","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","TabBuilder","selectRef","React","createRef","className","name","id","ref","this","value","onClick","build","current","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","checked","minVal","Number","maxVal","handleChange","bind","onChange","delete","count","getCount","e","setState","target","q","onInput","defaultValue","StaticText","cols","rows","NormalCurve","rectRef","svgRef","areaRef","lengthRef","startPos1Ref","startPos2Ref","graph1keyRef","graph2keyRef","dotReturn","curveArea","triMouseDown","triDrag","triUp","lengthSubmit","toggleXVals","alterStartPos1","alterStartPos2","unitHeight","data","circRad","len1","len2","distancing","height","Math","ceil","colNumInit","internalLength","edgeCol","edgeLength","ceilDist","length","colNum","console","log","axisStart","axisStartCol","axisWidth","axisEndCol","axisEnd","triCent1","triCent2","triCentCol1","triCentCol2","variance1","abs","variance2","startPos1","col11","col12","startPos2","col21","col22","axisLength","x","y","isDown","rectX","down","svgWidth","svgHeight","svgX","colValHeiS","colValHeiS2","distancing1","distancing2","mousePointerRange","triDown","colLim1","round","colLim2","overlapVals","lowVal","showCoors","xPos","yPos","xPosOrig","CX","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","num","preventDefault","svgPre","ptPre","createSVGPoint","clientX","svgPPre","matrixTransform","getScreenCTM","inverse","prevState","svgPPree","screenX","screenY","pt","svg","svgP","col","innerHTML","key","changeJSON","newLength","newPos","parseInt","onMouseMove","onMouseUp","width","Array","keys","map","row","dotReturn2","points","onMouseDown","text-anchor","class","style","backgroundColor","getStudyInfo","which_database","which_study","get","then","res","experiments","getColData","col_name","NormalCurveResearch","handleDrop","handleSelectedFile","dataReceived","fileNames","setFileNames","fileChosen","username","content","saveFile","acceptedFiles","file","forEach","dataFlowColData","filter","item","itemType","includes","alert","reader","FileReader","onabort","onerror","onload","fileText","result","jsonData","JSON","parse","files","readAsText","fileContent","unshift","fileOptions","onDrop","accept","getRootProps","getInputProps","TabList","builderFunction","tabDefine","arr","children","push","tab","toString","curOutput","output","newCount","complete","deleted","exptName","myRef","submitRef","nameRef","outputCreate","checkOutput","pos","newVal","newDelete","newFile","concat","obj","int","elem","lowNum","isNaN","highNum","indexOf","finalObj","match","params","sendFile","put","response","window","location","reload","catch","error","studyLink","method","dataFlowDBInfo","dataFlowFileName","post","Navbar","userIsLoggedIn","Landing","HomePage","href","Register","onSubmit","newUser","password","password2","registerUser","history","nextProps","noValidate","classnames","invalid","userExists","userData","err","withRouter","Login","loginUser","userNotFound","pwdIncorrect","setItem","jwt_decode","Dashboard","onLogoutClick","onAddStudy","getDBInfo","Object","link","addStudyName","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployExpts","recordLink","onDeploy","getColNames","split","deployed","processColNames","expt","exptDataLink","partJSONDataLink","exptPartLink","previewLink","dbLink","text","currentTarget","dataToPUT","saveLink","createExptCol","expt_name","exptNames","difference","color","exptBuilderLink","getExptNames","deploy","which_expt","ExptConfigs","thisExpt","exptObj","find","JSONString","stringify","showExptData","returnRow","colName","hd","answer","align","partDataHeader","showPartData","showJSONData","BuildExpt","numOfItems","showItems","itemToSelect","preBuild","showItem","toggleShowItems","inputNumItems","inputs","i","jwtToken","currentTime","Date","now","exp","App","basename","NavBar","exact","path","PartData","PartJSONData","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3b3d4561.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \r\n// if the user is already logged in \r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","// types are how actions communicate with reducers\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\r\nexport const GET_DB_INFO = \"GET_DB_INFO\";\r\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\r\nexport const GET_COL_DATA = \"GET_COL_DATA\";\r\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";\r\n\r\nexport const STORE_FILENAME = \"STORE_FILENAME\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const SEND_FILE = \"SEND_FILE\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\"); \r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default: return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: return action.payload;\r\n        default: return state;\r\n    }\r\n}","import {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  studyName: '',\r\n  dbInfo: [],\r\n  studyInfo: [],\r\n  colData: [],\r\n  colNames: [],\r\n  // files: []\r\n  fileName: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_STUDY_NAME:\r\n      return {\r\n        ...state,\r\n        studyName: action.payload\r\n      };\r\n    case GET_DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_STUDY_INFO:\r\n      return {\r\n        ...state,\r\n        studyInfo: action.payload\r\n      };\r\n    case GET_COL_DATA:\r\n      return {\r\n        ...state,\r\n        colData: action.payload\r\n      };\r\n    case GET_COL_NAMES:\r\n      return {\r\n        ...state,\r\n        colNames: action.payload\r\n      };\r\n    // case STORE_FILE:\r\n    //   return {\r\n    //     ...state,\r\n    //     files: [...state.files, action.payload]\r\n    //   };\r\n    case STORE_FILENAME:\r\n      return {\r\n        ...state,\r\n        fileName: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport dataReducer from \"./dataReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  dataFlow: dataReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nclass TabBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  // ###TODO###: add options here when you add your experiment type\r\n  render() {\r\n    return (\r\n      <div className=\"unit\">\r\n        <span>Choose what element to add next</span><br />\r\n        <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\r\n          <option value=\"slider\">Slider</option>\r\n          <option value=\"static-text\">Static Text</option>\r\n          <option value=\"normal-curve\">Normal Curve</option>\r\n        </select>\r\n        <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabBuilder;","import React, { Component } from 'react';\r\nimport './SliderTab.css';\r\n\r\nclass SliderTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sliderRef = React.createRef();\r\n    this.outputRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.state = { min: 1, max: 100 }\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"unit\">\r\n        <p>Question: <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} ref={this.qRef} type=\"text\" /></p><br/>\r\n        {this.state.minVal}\r\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\r\n        {this.state.maxVal} <br/>\r\n        <p>Minimum: \r\n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n          ref={this.minRef} type=\"text\" \r\n          name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p><br/>\r\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\r\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n          ref={this.maxRef} type=\"text\" \r\n          name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderTab;","import React, { Component } from 'react';\r\n\r\nclass StaticText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.qRef = React.createRef();\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"unit\">\r\n        Enter your static text below: <br/>\r\n        <textarea cols=\"60\" rows=\"10\" ref={this.qRef}\r\n          onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\r\n        </textarea>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StaticText;","import React, { Component } from 'react';\r\nimport './NormalCurve.css';\r\n\r\nclass NormalCurve extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.sliderRef = React.createRef();\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n    this.lengthRef = React.createRef();\r\n    this.startPos1Ref = React.createRef();\r\n    this.startPos2Ref = React.createRef();\r\n    this.graph1keyRef = React.createRef();\r\n    this.graph2keyRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n\r\n    this.dotReturn = this.dotReturn.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.triMouseDown = this.triMouseDown.bind(this);\r\n    this.triDrag = this.triDrag.bind(this);\r\n    this.triUp = this.triUp.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.lengthSubmit = this.lengthSubmit.bind(this);\r\n    this.toggleXVals = this.toggleXVals.bind(this);\r\n    this.alterStartPos1 = this.alterStartPos1.bind(this);\r\n    this.alterStartPos2 = this.alterStartPos2.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n\r\n    const unitHeight = this.props.data[\"max-height\"];\r\n    const circRad = this.props.data[\"circle-radius\"];\r\n    const len1 = this.props.data[\"len1\"];\r\n    const len2 = this.props.data[\"len2\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n\r\n    const colNumInit = this.props.data[\"axis-length\"];\r\n    const internalLength = colNumInit * distancing;\r\n    const edgeCol = Math.ceil(Math.max(len1, len2) / 2);\r\n    const edgeLength = Math.max(len1, len2) * distancing;\r\n\r\n    const ceilDist = height - 50;\r\n    // const length = Math.ceil((distancing * this.props.data[\"len1\"] * 2 + distancing * this.props.data[\"len2\"] * 2) / 100) * 100;\r\n    const length = edgeLength + internalLength;\r\n    const colNum = Math.ceil(length / distancing);\r\n    console.log(height, distancing, ceilDist, colNum);\r\n\r\n    const axisStart = Math.ceil(edgeLength / 2);\r\n    const axisStartCol = edgeCol;\r\n    const axisWidth = length - ((len1 / 2 + 1) * distancing + (len2 / 2 + 1) * distancing - 1);\r\n    const axisEndCol = internalLength / distancing;\r\n    const axisEnd = axisEndCol * distancing;\r\n\r\n    const triCent1 = Math.ceil((0.5 * len1 + 1) * distancing);\r\n    const triCent2 = Math.ceil((0.5 * len2 + 1) * distancing);\r\n    const triCentCol1 = Math.ceil(triCent1 / distancing);\r\n    const triCentCol2 = Math.ceil(triCent2 / distancing);\r\n\r\n    const variance1 = Math.abs(Math.ceil(len1 / 2) - edgeCol);\r\n    const variance2 = Math.abs(Math.ceil(len2 / 2) - edgeCol);\r\n\r\n    let startPos1 = this.props.data[\"startPos1\"];\r\n    let col11 = startPos1;\r\n    let col12 = startPos1 + len1 - 1;\r\n    if (startPos1 + triCentCol1 < axisStartCol) {\r\n      startPos1 = variance1 - 1;\r\n      col11 = 0;\r\n      col12 = len1 - 1;\r\n    }\r\n    else if (startPos1 + triCentCol1 > axisStartCol + axisEndCol) {\r\n      startPos1 = variance1 + axisEndCol - 1;\r\n      col11 = axisEndCol;\r\n      col12 = axisEndCol + len1 - 1;\r\n    }\r\n\r\n    let startPos2 = this.props.data[\"startPos2\"];\r\n    let col21 = startPos2;\r\n    let col22 = startPos2 + len2 - 1;\r\n    if (startPos2 + triCentCol2 < axisStartCol) {\r\n      startPos2 = variance2 - 1;\r\n      col21 = 0;\r\n      col22 = len2 - 1;\r\n    }\r\n    else if (startPos2 + triCentCol2 > axisStartCol + axisEndCol) {\r\n      startPos2 = variance2 + axisEndCol - 1;\r\n      col21 = axisEndCol;\r\n      col22 = axisEndCol + len2 - 1;\r\n    }\r\n\r\n    this.state = {\r\n      axisLength: this.props.data[\"axis-length\"],\r\n      startPos1: this.props.data[\"startPos1\"],\r\n      startPos2: this.props.data[\"startPos2\"],\r\n      x: 0, y: 0, isDown: false,\r\n      rectX: 12.5,\r\n      down: false,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      svgX: 6,\r\n      len1: len1,\r\n      colValHeiS: this.props.data[\"colValHeiS\"],\r\n      len2: len2,\r\n      colValHeiS2: this.props.data[\"colValHeiS2\"],\r\n      distancing: distancing,\r\n      distancing1: startPos1 * distancing,\r\n      distancing2: startPos2 * distancing,\r\n      triCent1: triCent1,\r\n      triCentCol1: triCentCol1,\r\n      triCent2: triCent2,\r\n      triCentCol2: triCentCol2,\r\n      mousePointerRange: 0,\r\n      triDown: false,\r\n      col11: col11,\r\n      col12: col12,\r\n      col21: col21,\r\n      col22: col22,\r\n      colLim1: Math.round((length - (len1 * distancing)) / distancing),\r\n      colLim2: Math.round((length - (len2 * distancing)) / distancing),\r\n      overlapVals: this.props.data[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist,\r\n      axisStart: axisStart,\r\n      axisStartCol: axisStartCol,\r\n      axisWidth: axisWidth,\r\n      axisEnd: axisEnd,\r\n      axisEndCol: axisEndCol,\r\n      edgeCol: edgeCol,\r\n      edgeLength: edgeLength,\r\n      colNum: colNumInit,\r\n      variance1: variance1 - 1,\r\n      variance2: variance2 - 1,\r\n      lowVal: this.props.data[\"lowVal\"],\r\n      showCoors: true\r\n    };\r\n  }\r\n\r\n  dotReturn(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing1 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"DarkCyan\" fill=\"DarkCyan\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  dotReturn2(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing2 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"Crimson\" fill=\"Crimson\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  triMouseDown(e, num) {\r\n    if (e.type === \"mousedown\") {\r\n      // console.log(\"MOUSEDOWN\");\r\n      e.preventDefault();\r\n      var svgPre = this.svgRef.current;\r\n      // Set mousePointerRange so that we know the distance\r\n      // from the mouse tip to the x-value of the triangle\r\n      // tip\r\n      var ptPre = svgPre.createSVGPoint();\r\n      ptPre.x = e.clientX;\r\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n      if (num === 1) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\r\n        }));\r\n      }\r\n      else if (num === 2) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\r\n        }));\r\n      }\r\n      // console.log(this.state);\r\n    }\r\n  }\r\n\r\n  triDrag(e) {\r\n    // Set mousePointerRange so that we know the distance\r\n    // from the mouse tip to the x-value of the triangle\r\n    // tip\r\n    var svgPre = this.svgRef.current;\r\n    var ptPre = svgPre.createSVGPoint();\r\n    ptPre.x = e.clientX;\r\n    var svgPPree = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n    this.setState({ x: e.screenX, y: e.screenY, svgX: svgPPree.x });\r\n    if (this.state.triDown === 2) {\r\n      // console.log(\"DRAG CONT'D\");\r\n      var svg = this.svgRef.current;\r\n      var pt = svg.createSVGPoint();\r\n      pt.x = e.clientX;\r\n      var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n      e.preventDefault();\r\n      var x = svgP.x - this.state.triCent2 + this.state.mousePointerRange;\r\n      var col = Math.round((x - this.state.edgeCol) / this.state.distancing);\r\n      if (col + this.state.triCentCol2 < this.state.axisStartCol) {\r\n        this.setState({ distancing2: this.state.variance2 * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n      }\r\n      else if (col + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n        this.setState({ distancing2: this.state.distancing * (this.state.variance2 + this.state.axisEndCol), col21: this.state.axisEndCol, col22: this.state.axisEndCol + this.state.len2 - 1 })\r\n      }\r\n      else {\r\n        this.setState({ distancing2: this.state.distancing * col, col21: col - this.state.variance2, col22: col - this.state.variance2 + this.state.len2 - 1 });\r\n      }\r\n      this.curveArea(col);\r\n      // this.setState({ distancing2 : x })\r\n    }\r\n    else if (this.state.triDown === 1) {\r\n      // console.log(\"DRAG CONT'D\");\r\n      var svg = this.svgRef.current;\r\n      var pt = svg.createSVGPoint();\r\n      pt.x = e.clientX;\r\n      var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n      e.preventDefault();\r\n      var x = svgP.x - this.state.triCent1 + this.state.mousePointerRange;\r\n      var col = Math.round((x - this.state.edgeCol) / this.state.distancing);\r\n      if (col + this.state.triCentCol1 < this.state.axisStartCol) {\r\n        this.setState({ distancing1: this.state.variance1 * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n      }\r\n      else if (col + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n        this.setState({ distancing1: this.state.distancing * (this.state.variance1 + this.state.axisEndCol), col11: this.state.axisEndCol, col12: this.state.axisEndCol + this.state.len1 - 1 })\r\n      }\r\n      else {\r\n        this.setState({ distancing1: this.state.distancing * col, col11: col - this.state.variance1, col12: col - this.state.variance1 + this.state.len1 - 1 });\r\n      }\r\n      this.curveArea(col);\r\n      // this.setState({ distancing2 : x })\r\n    }\r\n  }\r\n\r\n  triUp(e) {\r\n    // console.log(\"UP\");\r\n    if (this.state.triDown) {\r\n      this.setState({ triDown: false });\r\n    }\r\n  }\r\n\r\n  curveArea(col) {\r\n    const col11 = this.state.col11 + this.state.variance1;\r\n    const col12 = this.state.col12 + this.state.variance1;\r\n    const col21 = this.state.col21 + this.state.variance2;\r\n    const col22 = this.state.col22 + this.state.variance2;\r\n\r\n    if (col11 > col22 || col12 < col21) {\r\n      this.areaRef.current.innerHTML = 0;\r\n    }\r\n    else {\r\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\r\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(col22 - col11)];\r\n    }\r\n  }\r\n  \r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    this.props.changeJSON(key, value);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  lengthSubmit(newLength) {\r\n    var newLength = this.lengthRef.current.value;\r\n    const internalLength = newLength * this.state.distancing;\r\n    const length = this.state.edgeLength + internalLength;\r\n\r\n    const axisEndCol = internalLength / this.state.distancing;\r\n    const axisEnd = axisEndCol * this.state.distancing;\r\n    console.log(axisEndCol);\r\n\r\n    this.changeJSON(\"axis-length\", newLength);\r\n\r\n    this.setState({\r\n      colNum: newLength,\r\n      svgWidth: length,\r\n      axisEndCol: axisEndCol,\r\n      axisEnd: axisEnd\r\n    });\r\n  }\r\n\r\n  toggleXVals() {\r\n    this.setState(prevState => {\r\n      return {\r\n        showCoors: !prevState.showCoors\r\n      }\r\n    })\r\n  }\r\n\r\n  alterStartPos1(newPos) {\r\n    let startPos1 = parseInt(this.startPos1Ref.current.value) + this.state.variance1;\r\n    let col11 = startPos1 - this.state.variance1;\r\n    let col12 = col11 + this.state.len1 - 1;\r\n    if (startPos1 + this.state.triCentCol1 < this.state.axisStartCol) {\r\n      startPos1 = this.state.variance1;\r\n      col11 = 0;\r\n      col12 = this.state.len1 - 1;\r\n    }\r\n    else if (startPos1 + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos1 = this.state.variance1 + this.state.axisEndCol;\r\n      col11 = this.state.axisEndCol;\r\n      col12 = this.state.axisEndCol + this.state.len1 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos1\", newPos);\r\n\r\n    this.setState({\r\n      distancing1: startPos1 * this.state.distancing,\r\n      col11: col11,\r\n      col12: col12\r\n    });\r\n  }\r\n\r\n  alterStartPos2(newPos) {\r\n    let startPos2 = parseInt(this.startPos2Ref.current.value) + this.state.variance2;\r\n    let col21 = startPos2 - this.state.variance2;\r\n    let col22 = col21 + this.state.len2 - 1;\r\n    if (startPos2 + this.state.triCentCol2 < this.state.axisStartCol) {\r\n      startPos2 = this.state.variance2;\r\n      col21 = 0;\r\n      col22 = this.state.len2 - 1;\r\n    }\r\n    else if (startPos2 + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos2 = this.state.variance2 + this.state.axisEndCol;\r\n      col21 = this.state.axisEndCol;\r\n      col22 = this.state.axisEndCol + this.state.len2 - 1;\r\n    }\r\n\r\n    // this.changeStartPos2(newPos);\r\n    this.changeJSON(\"startPos2\", newPos);\r\n\r\n    this.setState({\r\n      distancing2: startPos2 * this.state.distancing,\r\n      col21: col21,\r\n      col22: col22\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        onMouseMove={e => this.triDrag(e)}\r\n        onMouseUp={e => this.triUp(e)}>\r\n        <svg width={this.state.svgWidth} height={this.state.svgHeight + 10} ref={this.svgRef}>\r\n          {/* <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\"/> */}\r\n          {[...Array(this.state.len1).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS[col]).keys()].map(\r\n                (row) => this.dotReturn(col, row)\r\n              )\r\n          )}\r\n          {[...Array(this.state.len2).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS2[col]).keys()].map(\r\n                (row) => this.dotReturn2(col, row)\r\n              )\r\n          )}\r\n          <rect width={this.state.axisEnd}\r\n            height=\"2\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisEnd + this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent1 + this.state.distancing1 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\r\n          />\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent2 + this.state.distancing2 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\r\n          />\r\n          <text text-anchor=\"middle\" x={this.state.axisStart} y={this.state.ceilDist + 55}>{this.state.lowVal}</text>\r\n          <text text-anchor=\"middle\" x={this.state.axisStart + this.state.axisEnd} y={this.state.ceilDist + 55}>{this.state.lowVal + this.state.colNum}</text>\r\n                    Sorry, please use a different browser.\r\n                </svg>\r\n        <br />\r\n        <div class=\"boxed\">\r\n          Question: <br/>\r\n          <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \r\n            onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n          </textarea><br/>\r\n          <div class=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\r\n          <input type=\"text\" \r\n            ref={this.graph1keyRef}\r\n            onInput={() => this.handleChange(\"graph1key\", this.graph1keyRef.current.value, this.props.count)}></input>\r\n          <br />\r\n          <div class=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\r\n          <input type=\"text\" \r\n            ref={this.graph2keyRef}\r\n            onInput={() => this.handleChange(\"graph2key\", this.graph2keyRef.current.value, this.props.count)}></input>\r\n          <br />\r\n          <span>Enter the width of the graph (each point in the curves is \r\n            equivalent to 1 unit of width) </span>\r\n          <input ref={this.lengthRef} type=\"text\" \r\n            name=\"axisLength\" value={this.state.axisLength} \r\n            onChange={this.onChange}/>\r\n          <button onClick={() => {this.lengthSubmit(this.state.axisLength)}}>\r\n            Change Width\r\n          </button>\r\n          <br/>\r\n          <span>Enter your preferred starting position for curve 1, \r\n            if you want to change it </span>\r\n          <input ref={this.startPos1Ref} \r\n            type=\"text\" name=\"startPos1\" value={this.state.startPos1} \r\n            onChange={this.onChange}></input>\r\n          <button onClick={() => this.alterStartPos1(this.state.startPos1)}>\r\n            Change Curve 1\r\n          </button>\r\n          <br/>\r\n          <span>Enter your preferred starting position for curve 2, \r\n            if you want to change it </span>\r\n          <input ref={this.startPos2Ref} type=\"text\" \r\n          name=\"startPos2\" value={this.state.startPos2} \r\n          onChange={this.onChange}></input>\r\n          <button onClick={() => this.alterStartPos2(this.state.startPos2)}>\r\n            Change Curve 2\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <h1>Area Under Curve: <span ref={this.areaRef}></span> | First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h1>\r\n        {/* <h1>{this.props.data[\"startPos1\"]} | {this.props.data[\"startPos2\"]}</h1> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NormalCurve;","import axios from \"axios\";\r\nimport {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME,\r\n  SEND_FILE\r\n} from \"./types\";\r\n\r\nexport const addStudyName = (which_database, study_name) => dispatch => {\r\n  const dataToPost = {\r\n    studyName: study_name,\r\n    experiments: []\r\n  };\r\n  // note that the goal of the following step is to show researchers \r\n  // the name of the study they have just created. This is totally doable\r\n  // via a simple this.state written in Dashboard. However, putting it here\r\n  // just makes things more organized and fits well with the rest of the \r\n  // redux structure I have used to create this demo\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\r\n      dataToPost)\r\n    .then(entry => {\r\n      // console.log(entry);\r\n      dispatch({\r\n        type: ADD_STUDY_NAME,\r\n        payload: entry.data.studyName\r\n      });\r\n      alert(\"Study [\" + study_name + \"] is created.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getDBInfo = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_DB_INFO,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      '/info/studyName-' + which_study)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_STUDY_INFO,\r\n        payload: res.data.experiments\r\n      })\r\n    })\r\n}\r\n\r\nexport const saveLink = (which_database, study_name, expt_name, link) => dispatch => {\r\n  axios\r\n    .put('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      '/info/studyName-' + study_name + '/experiments/exptName-' + expt_name,\r\n      link)\r\n    .then(res => {\r\n      // alert(res);\r\n    })\r\n} \r\n\r\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\r\n      \"/createCol/\" + col_name)\r\n    .then(res => {\r\n      // we can potentially improve the alert box\r\n      alert(\"Experiment [\" + which_expt + \"] is deployed.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getColData = (which_database, col_name) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      \"/\" + col_name)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_DATA,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getColNames = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_NAMES,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const storeFileName = (fileName) => dispatch => {\r\n  dispatch({\r\n    type: STORE_FILENAME,\r\n    payload: fileName\r\n  })\r\n}\r\n\r\nexport const sendFile = (which_database, file) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      \"/itemData\", file)\r\n    .then(res => {\r\n      console.log(\"Data sent to DB\");\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport NormalCurve from './NormalCurve';\r\nimport './NormalCurve.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass NormalCurveResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.changeJSON = this.changeJSON.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileNames: [],\r\n      setFileNames: [],\r\n      fileChosen: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"normal-curve\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n\r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n            if (this.props.files.length == 0) {\r\n              this.saveFile(\"normal-curve\", file.name, jsonData);\r\n            } else {\r\n              const names = this.props.files.map(item => item.fileName);\r\n              if (!names.includes(file.name)) {\r\n                this.saveFile(\"normal-curve\", file.name, jsonData);\r\n              }\r\n            }\r\n\r\n            const unitHeight = jsonData[\"max-height\"];\r\n            const circRad = jsonData[\"circle-radius\"];\r\n            const distancing = circRad * 4 - 1;\r\n            const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n            const ceilDist = height - 50;\r\n            const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n            const colNum = Math.round(length / distancing);\r\n            this.setState({\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData, \r\n              svgWidth: length,\r\n              svgHeight: height,\r\n              distancing: distancing,\r\n              dataReceived: true,\r\n              len1: jsonData[\"len1\"],\r\n              colValHeiS: jsonData[\"colValHeiS\"],\r\n              len2: jsonData[\"len2\"],\r\n              colValHeiS2: jsonData[\"colValHeiS2\"],\r\n              distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n              distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n              triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n              triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n              col11: jsonData[\"len2\"] + 1,\r\n              col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n              col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n              col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n              colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n              colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n              overlapVals: jsonData[\"overlapVals\"],\r\n              circRad: circRad,\r\n              ceilDist: ceilDist\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    const unitHeight = jsonData[\"max-height\"];\r\n    const circRad = jsonData[\"circle-radius\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n    const ceilDist = height - 50;\r\n    const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n    const colNum = Math.round(length / distancing);\r\n    this.setState({\r\n      dataReceived: true,\r\n      // fileText: fileText,\r\n      jsonData: jsonData,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      distancing: distancing,\r\n      dataReceived: true,\r\n      len1: jsonData[\"len1\"],\r\n      colValHeiS: jsonData[\"colValHeiS\"],\r\n      len2: jsonData[\"len2\"],\r\n      colValHeiS2: jsonData[\"colValHeiS2\"],\r\n      distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n      distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n      triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n      triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n      col11: jsonData[\"len2\"] + 1,\r\n      col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n      col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n      col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n      colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n      colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n      overlapVals: jsonData[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist\r\n    })\r\n  }  \r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    var data = this.state.jsonData;\r\n    data[key] = Number(value);\r\n    this.handleChange(\"FileContent\", data, this.props.count);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <NormalCurve \r\n            data={this.state.jsonData} count={this.props.count}\r\n            changeJSON={this.changeJSON} \r\n            handleChange={this.handleChange} />\r\n          <br/>\r\n          {/* <button onClick={() => console.log(this.state.jsonData)}>Click me</button> */}\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      const normalCurveFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"normal-curve\");\r\n      var fileNames = normalCurveFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nNormalCurveResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(NormalCurveResearch);","import React, { Component } from 'react';\r\nimport './TabList.css';\r\nimport '../TabBuilder/TabBuilder'\r\nimport TabBuilder from '../TabBuilder/TabBuilder'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ###TODO###: import your component here\r\nimport SliderTab from '../items/Slider/SliderTab';\r\nimport StaticText from '../items/StaticText/StaticText';\r\nimport NormalCurveResearch from '../items/NormalCurve/NormalCurveResearch';\r\n\r\nimport { sendFile } from '../../actions/dataActions'\r\n\r\nconst axios = require('axios');\r\n\r\n// This component allows Psych researchers to configure an experiment \r\nclass TabList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      count: 0,\r\n      output: {},\r\n      deleted: [],\r\n      complete: false,\r\n      exptName: '',\r\n      files: []\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.submitRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n\r\n    this.builderFunction = this.builderFunction.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.outputCreate = this.outputCreate.bind(this);\r\n    this.checkOutput = this.checkOutput.bind(this);\r\n\r\n    this.saveFile = this.saveFile.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  builderFunction = (tabDefine) => {\r\n    var arr = this.state.children;\r\n    // ###TODO###: Add more cases here for TabList to display \r\n    //             Follow the format of the provided components below\r\n    switch (tabDefine) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\r\n  }\r\n\r\n  // Input: \r\n  //  pos: key of JSON object\r\n  //  newVal: value of JSON object\r\n  //  count: the numerical order of the JSON object\r\n  // Action: put the key and value pair in the final output JSON object\r\n  handleChange(pos, newVal, count) {\r\n    var curOutput = this.state.output;\r\n    curOutput[count.toString()][pos] = newVal;\r\n    this.setState({ output: curOutput });\r\n  }\r\n\r\n  delete(id) {\r\n    var newDelete = this.state.deleted;\r\n    newDelete.push(id);\r\n    this.setState({ deleted: newDelete });\r\n  }\r\n\r\n  getCount(count) {\r\n    return count;\r\n  }\r\n\r\n  // Action: put newly uploaded files into this.state. \r\n  //         All newly uploaded files will be sent to database as JSON objs\r\n  saveFile(type, name, content) {\r\n    const newFile = {\r\n      \"itemType\": type,\r\n      \"fileName\": name,\r\n      \"fileContent\": content\r\n    };\r\n    this.setState({ files: this.state.files.concat(newFile) });\r\n  }\r\n\r\n  // validating input fields. \r\n  // for now: developers will need to add a case below \r\n  checkOutput(obj) {\r\n    var int = 0;\r\n    var complete = true;\r\n    while ((int.toString()) in obj) {\r\n      var elem = obj[int.toString()];\r\n      switch (elem[\"Type\"]) {\r\n        case \"slider\":\r\n          var lowIs = \"lowRange\" in elem;\r\n          var highIs = \"highRange\" in elem;\r\n          var qIs = \"Question\" in elem;\r\n          if (lowIs && highIs && qIs) {\r\n            var lowNum = !isNaN(elem[\"lowRange\"]);\r\n            var highNum = !isNaN(elem[\"highRange\"]);\r\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\r\n            if (highLow && lowNum && highNum) {\r\n              complete = complete && true;\r\n            }\r\n            else {\r\n              complete = false;\r\n            }\r\n          }\r\n          else {\r\n            complete = false;\r\n          }\r\n          break;\r\n        default:\r\n          complete = false;\r\n      case \"normal-curve\":\r\n        complete = true;\r\n      }\r\n      int++;\r\n    }\r\n    return complete;\r\n  }\r\n\r\n  outputCreate() {\r\n    var obj = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\r\n    var validName = this.nameRef.current.value.length > 0;\r\n    // if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\r\n    if (!validName) {\r\n      alert(\"You have not filled out all fields, or have entered an invalid value!\");\r\n    }\r\n    else {\r\n      var finalObj = {};\r\n      finalObj[\"exptName\"] = this.nameRef.current.value;\r\n      var int = 0;\r\n      while (int < this.state.count) {\r\n        if ((int.toString()) in obj) {\r\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n        }\r\n        int++;\r\n      }\r\n      finalObj[\"count\"] = int;\r\n\r\n      const username = this.props.auth.user.username;\r\n      const studyName = this.props.match.params.studyName;\r\n\r\n      if (!this.state.files.length == 0) {\r\n        this.state.files.map(item => this.props.sendFile(username, item))\r\n      };\r\n\r\n      axios.put(\r\n        'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName + '/experiments',\r\n        finalObj\r\n      )\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .then(function (response) {\r\n          alert(\"Your experiment has been successfully created\");\r\n          window.location.reload(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div ref={this.myRef}>\r\n        <h2>Experiment Builder</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <form action=\"/submit\" method=\"POST\" className=\"unit\">\r\n          <p>Enter a name for this experiment </p>\r\n          <input ref={this.nameRef}\r\n            value={this.state.exptName}\r\n            onChange={this.onChange}\r\n            type=\"text\" id=\"userid\" name=\"exptName\" /><br /><br />\r\n        </form>\r\n        {\r\n          this.state.children\r\n            .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n            .map((item) => {\r\n              return item.tab;\r\n            })\r\n        }\r\n        <TabBuilder build={this.builderFunction} />\r\n        <div className=\"extraPad\">\r\n          <button onClick={this.outputCreate} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n        </div>\r\n        {/* <button onClick={() => console.log(this.state.output)}>output</button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired,\r\n  sendFile: PropTypes.func.isRequired,\r\n  dataFlowFileName: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo,\r\n  dataFlowFileName: state.dataFlow.fileName\r\n});\r\n\r\n// export default TabList;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendFile }\r\n)(TabList);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n            <br/>\r\n            {userIsLoggedIn ? '' : \r\n              <Link to=\"/register\">Register</Link>}\r\n            <br/>\r\n            {userIsLoggedIn ? \r\n              <Link to=\"/dashboard\"> Dashboard </Link> \r\n              : \r\n              <Link to=\"/login\">Login</Link>}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Navbar;\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentWillMount() {\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          Scientist: <b>{this.props.auth.user.username}</b>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n      return(\r\n        <div className=\"container\">\r\n            <h1>\r\n            Welcome to Psych Researcher App!\r\n            </h1>\r\n            Please click on this <p></p>\r\n            <a target=\"_blank\" href=\"https://github.com/statistical-perceptions/statistical-perceptions.github.io\">link</a> <p></p>\r\n            to view researcher user guide. \r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(HomePage);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    };\r\n  };\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form and flask request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register below</h1>\r\n        <p className=\"grey-text text-darken-1\">\r\n          Already have an account?\r\n                    <Link to=\"/login\">Log in</Link>\r\n        </p>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              // userExists comes from res json message in API\r\n              invalid: errors.userExists\r\n            })} />\r\n          <span className=\"red-text\">{errors.userExists}</span>\r\n          <br />\r\n          <br />\r\n            Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n              invalid: errors.password})} />\r\n          <span className=\"red-text\">{errors.password}</span>\r\n          <br />\r\n          <br />\r\n            Confirm Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password2})} />\r\n          <span className=\"red-text\">{errors.password2}</span>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\" className=\"btn\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Register;\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// map state from redux props to use inside components\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n// linking redux to Register component\r\n// withRouter makes it easy to redirect within a component\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // push user to dashboard when they login\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form post and request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    // we are redirecting wthin a component, so we don't need to\r\n    // pass in this.props.history\r\n    this.props.loginUser(userData);\r\n  };\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Log in</h1>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.userNotFound\r\n              // || USERNAME NOT FOUND\r\n            })} />\r\n          <span className=\"red-text\">{errors.userNotFound}</span>\r\n          <br />\r\n          <br />\r\n                    Password:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.pwdIncorrect\r\n            })} />\r\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Log in\"\r\n            className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Login;\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport {\r\n  addStudyName,\r\n  getDBInfo\r\n} from \"../../actions/dataActions\";\r\n\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studyName: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onAddStudy = this.onAddStudy.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // load experiment names when the page loads\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getDBInfo(username); // dbInfo will be in the store now\r\n  }\r\n\r\n  getStudyNames() {\r\n    // TODO. Filter out study names. If an item doesn't have study names\r\n    // as a key, then don't do anything. (wrap everything inside an if)\r\n    const allInfo = this.props.dataFlowDBInfo;\r\n    return allInfo.map(item => {\r\n      const allKeys = Object.keys(item);\r\n      if (allKeys.includes(\"studyName\")) {\r\n        const username = this.props.auth.user.username;\r\n        const link = \"/\" + username + \"/\" + item.studyName;\r\n        return (\r\n          <div className=\"container\">\r\n            <p>\r\n              {item.studyName} <p> </p>\r\n              <Link to={link}>\r\n                View\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddStudy() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.addStudyName(username, this.state.studyName);\r\n    // // alert(\"Your study has been succesfully created.\");\r\n    // window.location.reload(false);\r\n  };\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const username = this.props.auth.user.username;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Dashboard</h2>\r\n\r\n        <form>\r\n          Click on this <p></p>\r\n          <b>\r\n          <a href=\"https://colab.research.google.com/drive/1yleVQB_CrNJ5Z3v-YPatW2XqAD7yS8yp?usp=sharing\" target=\"_blank\">link</a>\r\n          </b> <p></p>\r\n          to configure a <b>normal curve</b> item.\r\n        </form>\r\n\r\n        <form onSubmit={this.onAddStudy}>\r\n          <b>Enter a name for your study:</b> <br/>\r\n          <input type=\"text\" name=\"studyName\"\r\n            value={this.state.studyName} onChange={this.onChange} />\r\n          <input type=\"submit\" value=\"Add Study\" /> <br/>\r\n          Please do <b>not</b> use \"-\" in the name\r\n        </form>\r\n\r\n        <form>\r\n          <br />\r\n          {this.getStudyNames()}\r\n          <br />\r\n        </form>\r\n\r\n        <button\r\n          onClick={this.onLogoutClick}\r\n          className=\"btn\">\r\n          Logout\r\n                </button>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  logoutUser: PropTypes.func.isRequired,\r\n  addStudyName: PropTypes.func.isRequired,\r\n  getDBInfo: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, addStudyName, getDBInfo }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  getStudyInfo,\r\n  createExptCol,\r\n  getColNames,\r\n  saveLink\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ConfigStudy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n\r\n    this.deployExpts = this.deployExpts.bind(this);\r\n    this.recordLink = this.recordLink.bind(this);\r\n    this.onDeploy = this.onDeploy.bind(this);\r\n  }\r\n  // note: using params to get studyName is probably not good practice. \r\n  // figure out a better way to get info from previous page later, might\r\n  // use cookies? or does react have some way to pass states between pages?\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    this.props.getColNames(username);\r\n  }\r\n\r\n  processColNames() {\r\n    const studyName = this.props.match.params.studyName;\r\n    const processedArr = this.props.colNames.filter(name => name !== \"info\");\r\n    const currentStudyExpts = processedArr.filter(name =>\r\n      name.split('-')[0] == studyName);\r\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\r\n    // this.setState({ deployExpts: deployedExpts });\r\n    return deployedExpts;\r\n  }\r\n\r\n  getExptNames() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    // check if the experiments are deployed \r\n    return this.props.experiments.map(expt => {\r\n      const exptName = expt.exptName;\r\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/configs\";\r\n      const partDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsData\";\r\n      const partJSONDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsJSONData\";\r\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \r\n        \"participant-app/#/participant-app/expt/\" + username + \r\n          \"/\" + studyName + \"-\" + exptName\r\n      const previewLink = \"https://statistical-perceptions.github.io/\" + \r\n      \"participant-app/#/participant-app/preview/\" + username + \r\n        \"/\" + studyName + \"-\" + exptName\r\n      const dbLink = \"https://test-api-615.herokuapp.com/api/feedback/\" + \r\n        username + \"/\" + studyName + \"-\" + exptName\r\n      if (deployed.includes(exptName)) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"boxed\">\r\n              <b>{expt.exptName}</b> <br/>\r\n              <a target=\"_blank\" href={previewLink}>\r\n                Preview Experiment\r\n              </a> <br/><br/>\r\n              <Link to={exptDataLink}>\r\n                <button type=\"button\">\r\n                  Experiment Configs\r\n                </button>\r\n              </Link> <p> </p>\r\n              <Link to={partJSONDataLink}>\r\n                <button type=\"button\">\r\n                  View Participants Data\r\n                </button>\r\n              </Link> <p> </p> <br/><br/>\r\n              <b>Experiment Link:</b> <br/>\r\n              {exptPartLink} <br/>\r\n              <CopyToClipboard text={exptPartLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Experiment link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"boxed\">\r\n            Experiment: <b>{expt.exptName}</b><br/>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Configurations\r\n              </button>\r\n            </Link><br/><br/>\r\n            <b>Experiment Link:</b><br/>\r\n            {exptPartLink} <br/>\r\n            <CopyToClipboard text={exptPartLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Experiment link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>Database Link:</b><br/>\r\n            {dbLink} <br/>\r\n            <CopyToClipboard text={dbLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Database link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>TODO</b>: Paste the link to demographics qualtrics survey below: <br/>\r\n            <textarea cols=\"60\" rows=\"1\" id={exptName}\r\n              onInput={this.recordLink} value={this.state.exptName}></textarea>\r\n            <br/><br/>\r\n            {/* <button onClick={() => console.log(this.state)}>Show State</button><br/> */}\r\n            <button id={expt.exptName} onClick={this.onDeploy}> \r\n              <b>DEPLOY</b>\r\n            </button>\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  recordLink(e) {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  onDeploy(e) {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = e.currentTarget.id;\r\n    const link = this.state[exptName];\r\n\r\n    const dataToPUT = { link : link };\r\n    console.log(dataToPUT);\r\n    this.props.saveLink(username, studyName, exptName, dataToPUT);\r\n    this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\r\n  }\r\n\r\n  // for now deployment simply creates a collection for each experiment \r\n  // that would later store participants data\r\n  deployExpts() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    difference.forEach(expt_name => {\r\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\r\n    });\r\n  }\r\n\r\n  deploy() {\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    if (exptNames.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            No experiments.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            All experiments are deployed.\r\n          </p>\r\n        </div>\r\n      )\r\n    } \r\n    // else {\r\n    //   return (\r\n    //     <div className=\"container\">\r\n    //       <button\r\n    //         class=\"btn\"\r\n    //         onClick={this.deployExpts}>\r\n    //         Deploy: <p></p>\r\n    //           {difference.map(name => { return (<b>[{name}] </b>) })}\r\n    //       </button>\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptBuilderLink = \"/\" + username + \"/\" +\r\n      studyName + \"/exptBuilder\";\r\n    const normalCurvesLink = \"/\" + username + \"/\" +\r\n      studyName + \"/normalCurves\";\r\n    const buildExptLink = \"/\" + username + \"/\" + studyName + \"/newExpt\";\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Study: {this.props.match.params.studyName}</h2>\r\n        <Link to={exptBuilderLink}>\r\n          <button>\r\n            Build an Experiment\r\n          </button>\r\n        </Link>\r\n        <br/>\r\n        <form>\r\n          <h3>\r\n            Your Experiments\r\n          </h3>\r\n          {this.getExptNames()}\r\n          <br /><br />\r\n          {this.deploy()}\r\n          {/* <button onClick={() => console.log(this.state)}>\r\n            Show State\r\n          </button> */}\r\n          <br />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nConfigStudy.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  auth: PropTypes.object.isRequired,\r\n\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  createExptCol: PropTypes.func.isRequired,\r\n\r\n  getColNames: PropTypes.func.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n\r\n  saveLink: PropTypes.func.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\n// props: state\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  // experiments refer to the experiment configurations \r\n  // stored in collection [info] under the user's database\r\n  experiments: state.dataFlow.studyInfo,\r\n  colNames: state.dataFlow.colNames\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo, createExptCol, getColNames, saveLink }\r\n)(ConfigStudy);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ExptConfigs extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(this.props.experiments);\r\n  }\r\n\r\n  showExptData() {\r\n    const thisExpt = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const exptObj =\r\n        this.props.experiments.find(item => item.exptName == thisExpt);\r\n      // const allKeys = Object.keys(exptObj);\r\n      // const questionKeys = allKeys.filter(\r\n      //   x => x != \"userID\" && x != \"count\" &&\r\n      //     x != \"type\" && x != \"exptName\");\r\n      // return questionKeys.map(q => {\r\n      //   const question = JSON.stringify(exptObj[q]);\r\n      //   return (\r\n      //     <div>\r\n      //       {question}\r\n      //     </div>\r\n      //   )\r\n      // })\r\n      const JSONString = JSON.stringify(exptObj);\r\n      return (\r\n        <div>\r\n          {JSONString}\r\n        </div>\r\n      )\r\n    }\r\n    // const exptName = exptObj.exptName;\r\n    // const info = JSON.stringify(exptObj);\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Configuration data: </b>\r\n        <br /><br />\r\n        {this.showExptData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getColData\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass ExptConfigs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.returnRow = this.returnRow.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n  }\r\n\r\n  partDataHeader() {\r\n    var item = {};\r\n    if (!this.props.colData.length == 0) {\r\n      item = this.props.colData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n      <th>{hd}</th>\r\n      )\r\n    })\r\n  }\r\n\r\n  returnRow(answer) {\r\n    var item = {};\r\n    if (!this.props.colData.length == 0) {\r\n      item = this.props.colData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n        <th>\r\n          {answer[hd]}\r\n        </th>\r\n      )\r\n    })\r\n  }\r\n\r\n  showPartData() {\r\n    if (!this.props.colData.length == 0) {\r\n      return this.props.colData.map(answer => {\r\n        return (\r\n          <tr>\r\n            {this.returnRow(answer)}\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div>\r\n        <br /><br />\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Participants data: </b>\r\n        <br /><br />\r\n        <table align=\"center\">\r\n          <tbody>\r\n            <tr>{this.partDataHeader()}</tr>\r\n            {this.showPartData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getColData\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass ExptConfigs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.exptName);\r\n  }\r\n\r\n  showJSONData() {\r\n    if (!Object.keys(this.props.colData).length == 0) {\r\n      const data = JSON.stringify(this.props.colData);\r\n      return (\r\n        <div>\r\n          {data}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div>\r\n        <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br/>\r\n        <h4>Participants data: </h4>\r\n        {this.showJSONData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BuildExpt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exptName: '',\r\n      numOfItems: Number,\r\n      showItems: false,\r\n      itemToSelect: [\"slider\", \"normal curve\"]\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.preBuild = this.preBuild.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.toggleShowItems = this.toggleShowItems.bind(this);\r\n    this.inputNumItems = this.inputNumItems.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showItem() {\r\n    console.log(this.state.numOfItems);\r\n    const inputs = [];\r\n    for (let i = 1; i <= this.state.numOfItems; i ++) {\r\n      inputs.push(\r\n        <div>\r\n          Hello\r\n        </div>\r\n      )\r\n    }\r\n    return inputs;\r\n  }\r\n\r\n  toggleShowItems() {\r\n    this.setState({ showItems: true })\r\n  }\r\n\r\n  inputNumItems() {\r\n    return (\r\n      <div>\r\n        How many items do you want to build? <br/><br/>\r\n        <input type=\"text\" name=\"numOfItems\" value={this.state.numOfItems}\r\n          onChange={this.onChange}/> <p></p>\r\n        <button class=\"btn\" onClick={this.toggleShowItems}>Ok</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  preBuild() {\r\n    return (\r\n      <div className=\"container\">\r\n        Enter experiment name: <br/><br/>\r\n        <input type=\"text\" name=\"exptName\" value={this.state.exptName}\r\n          onChange={this.onChange}/> <br/><br/>\r\n          {\r\n            !this.state.showItems && \r\n            <this.inputNumItems/>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Experiment Builder</h3> <br/>\r\n        {this.preBuild()} <br/>\r\n        { this.state.showItems && <this.showItem/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BuildExpt;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport TabList from './components/TabList/TabList';\r\nimport NormalCurveResearch from './components/items/NormalCurve/NormalCurveResearch';\r\n\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport HomePage from './components/layout/HomePage';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login'\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ConfigStudy from './components/Study/ConfigStudy';\r\nimport ExptConfigs from './components/Study/ExptConfigs';\r\nimport PartData from './components/Study/PartData';\r\nimport PartJSONData from './components/Study/PartJSONData';\r\nimport BuildExpt from './components/Study/BuildExpt.jsx';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/survey-builder/\">\r\n        <div className=\"App\">\r\n          < NavBar />\r\n          <br/>\r\n          < Landing />\r\n          < Route exact path=\"/\" component={HomePage} />\r\n          < Route exact path=\"/register\" component={Register} />\r\n          < Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/:expt/participantsData\"\r\n              component={PartData} />\r\n            <PrivateRoute exact path=\"/:username/:studyName\"\r\n              component={ConfigStudy} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\r\n              component={TabList} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/newExpt\" \r\n              component={BuildExpt} />\r\n            {/* <PrivateRoute exact path=\"/:username/:studyName/normalCurves\"\r\n              component={NormalCurveResearch} /> */}\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\r\n              component={ExptConfigs}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsData\"\r\n              component={PartData}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsJSONData\"\r\n              component={PartJSONData}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}