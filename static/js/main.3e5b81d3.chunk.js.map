{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","actions/dataActions.js","components/TabBuilder/TabBuilder.jsx","components/items/Slider/SliderTab.jsx","components/items/StaticText/StaticText.js","components/items/NormalCurve/NormalCurve.jsx","components/items/NormalCurve/NormalCurveResearch.jsx","components/items/Threshold/Histogram.js","components/items/Threshold/HistogramResearch.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartStudyData.js","components/Study/PartExptData.js","components/Study/BuildExpt.jsx","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","colData","colsData","colNames","fileName","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","getStudyInfo","which_database","which_study","get","then","res","data","experiments","getColData","col_name","getColNames","TabBuilder","selectRef","React","createRef","importQRef","username","this","qType","allGroups","qSelectedToExptname","length","allExpts","console","log","renderOption","item","value","map","qKeys","Object","keys","filter","k","charAt","qArr","forEach","question","csvColName","mapQTypetoQKey","push","q","exptName","qOptions","label","className","name","id","ref","onClick","build","current","importQuestion","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","keyRef","checked","minVal","Number","maxVal","handleChange","bind","onChange","appendToKeysArr","delete","count","getCount","e","setState","target","imported","defaultQ","defaultMin","defaultMax","objType","nameType","qNum","onInput","defaultValue","StaticText","defaultText","cols","rows","NormalCurve","rectRef","svgRef","areaRef","lengthRef","startPos1Ref","startPos2Ref","graph1keyRef","graph2keyRef","colNumValRef","radiusRef","ticksRef","checkBoxRef","questionKeyRef","legendKey1Ref","legendKey2Ref","dotReturn","curveArea","triMouseDown","triDrag","triUp","lengthSubmit","toggleXVals","alterStartPos1","alterStartPos2","svgColReturn","establishStateData","updateRadius","updateTicks","checkChange","unitHeight","circRad","len1","len2","distancing","height","Math","ceil","colNumInit","internalLength","edgeCol","edgeLength","ceilDist","axisStart","axisStartCol","axisWidth","axisEndCol","axisEnd","triCent1","triCent2","triCentCol1","triCentCol2","variance1","abs","variance2","startPos1","distancing1","col11","col12","colNumVal","tickNum","tickDist","rangeVal","startPos2","distancing2","col21","col22","edgeLim","axisLength","parseInt","x","y","isDown","rectX","down","svgWidth","svgHeight","svgX","colValHeiS","colValHeiS2","mousePointerRange","triDown","colLim1","round","colLim2","overlapVals","colNum","lowVal","showCoors","xPos","yPos","xPosOrig","CX","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","dragger","distFromCent","variance","svg","pt","createSVGPoint","clientX","svgP","matrixTransform","getScreenCTM","inverse","preventDefault","col","colRelative","endCol","num","svgPre","ptPre","svgPPre","prevState","svgColPlacement","innerHTML","key","changeJSON","qToDisplay","newLength","newPos","radius","newData","newTickCount","colVal","Boolean","defaultVal","defaultCurveVal","dataType","onMouseMove","onMouseUp","width","Array","row","dotReturn2","tick","textAnchor","points","onMouseDown","class","style","backgroundColor","updateColVal","toString","for","NormalCurveResearch","handleDrop","handleSelectedFile","dataReceived","fileNames","setFileNames","fileChosen","content","saveFile","acceptedFiles","file","dataFlowColData","itemType","includes","alert","reader","FileReader","onabort","onerror","onload","fileText","result","jsonData","JSON","parse","files","readAsText","fileContent","unshift","fileOptions","onDrop","accept","getRootProps","getInputProps","Histogram","graphRef","sliderPos","drawChart","d3","append","attr","selectAll","enter","d","i","text","vertAlign","position","margin","top","step","HistogramResearch","histogramFiles","TabList","builderFunction","tabDefine","arr","children","tab","curOutput","output","newCount","complete","deleted","myRef","submitRef","nameRef","outputCreate","checkOutput","match","params","questionKey","thisExpt","thisQKey","questionToDisplay","newDelete","newFile","concat","obj","int","elem","lowNum","isNaN","highNum","index","indexOf","exptItem","finalObj","sendFile","put","response","window","location","reload","catch","error","studyLink","method","dataFlowDBInfo","dataFlowFileName","post","Navbar","userIsLoggedIn","Landing","HomePage","href","Register","onSubmit","newUser","password","password2","registerUser","history","nextProps","noValidate","classnames","invalid","userExists","userData","err","withRouter","Login","loginUser","userNotFound","pwdIncorrect","setItem","jwt_decode","Dashboard","onLogoutClick","onAddStudy","onDeleteStudy","getDBInfo","link","addStudyName","confirm","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployed","deployExpts","changeState","onDeploy","onChecked","onDeleteExperiment","randomize","putRandomize","thisSudyDeployedExpt","split","database_name","nowState","dataToPut","processColNames","expt","condition","surveyLink","exptDataLink","partExptDataLink","exptPartLink","previewLink","dbLink","colName","currentTarget","conditionInfo","linkInfo","createExptCol","expt_name","exptNames","difference","color","exptBuilderLink","partStudyDataLink","getExptNames","deploy","which_expt","saveAddInfo","infoType","info","ExptConfigs","exptObj","find","JSONString","stringify","showExptData","PartStudyData","makeArr","showJSONData","getIndex","partColNames","getColsData","flattendObj","flattenObject","keyName","newKey","oldKey","substr","renameKey","ids","participantID","ele","prevData","doc","newEle","flattenObj","line","allIndex","str","element","document","createElement","Blob","URL","createObjectURL","download","body","appendChild","click","file_name","filename","PartExptData","arrToProcess","BuildExpt","numOfItems","showItems","itemToSelect","preBuild","showItem","toggleShowItems","inputNumItems","inputs","jwtToken","currentTime","Date","now","exp","App","basename","NavBar","exact","path","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"+TAyBeA,eAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAGCF,EApBM,SAAC,GAAD,IAAcG,EAAd,EAAGC,UAAsBF,EAAzB,EAAyBA,KAASG,EAAlC,2CACjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAC,GAAK,OACY,IAAzBL,EAAKM,gBACD,kBAACL,EAAcI,GAEf,kBAAC,IAAD,CAAUE,GAAG,kB,iCCGVC,EAVM,SAAAC,GACbA,EAEAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,eCsCFC,EAAiB,SAAAC,GAC5B,MAAO,CACLC,KChD4B,mBDiD5BC,QAASF,IAYAG,EAAa,kBAAM,SAAAC,GAE9BC,aAAaC,WAAW,YAExBb,GAAa,GAEbW,EAASL,EAAe,O,wBEjEpBQ,EAAUC,EAAQ,KAElBC,EAAe,CACjBlB,iBAAiB,EACjBmB,KAAM,GACNC,SAAS,GCRPF,EAAe,G,QCQfA,EAAe,CACnBG,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,SAAU,GAEVC,SAAU,ICbGC,cAAgB,CAC7BlC,KHOa,WAAwC,IAA/BD,EAA8B,uDAAtByB,EAAcW,EAAQ,uCAClD,OAAQA,EAAOnB,MACX,IDZwB,mBCapB,OAAO,2BACAjB,GADP,IAEIO,iBAAkBgB,EAAQa,EAAOlB,SACjCQ,KAAMU,EAAOlB,UAErB,IDnBoB,eCoBhB,OAAO,2BACAlB,GADP,IAEI2B,SAAS,IAEjB,QAAS,OAAO3B,IGnBtBqC,OFHa,WAAwC,IAA/BrC,EAA8B,uDAAtByB,EAAcW,EAAQ,uCAClD,OAAQA,EAAOnB,MACX,IFLkB,aEKD,OAAOmB,EAAOlB,QAC/B,QAAS,OAAOlB,IECtBsC,SDaa,WAAyC,IAA/BtC,EAA8B,uDAAtByB,EAAcW,EAAQ,uCACrD,OAAQA,EAAOnB,MACb,IHlB0B,iBGmBxB,OAAO,2BACFjB,GADL,IAEE4B,UAAWQ,EAAOlB,UAEtB,IHtBuB,cGuBrB,OAAO,2BACFlB,GADL,IAEE6B,OAAQO,EAAOlB,UAEnB,IHzB0B,iBG0BxB,OAAO,2BACFlB,GADL,IAEE8B,UAAWM,EAAOlB,UAEtB,IH5BwB,eG6BtB,OAAO,2BACFlB,GADL,IAEE+B,QAASK,EAAOlB,UAEpB,IHhCyB,gBGiCvB,OAAO,2BACFlB,GADL,IAEEgC,SAAS,GAAD,mBAAMhC,EAAMgC,UAAZ,CAAsBI,EAAOlB,YAEzC,IHpCyB,gBGqCvB,OAAO,2BACFlB,GADL,IAEEiC,SAAUG,EAAOlB,UAOrB,IH5C0B,iBG6CxB,OAAO,2BACFlB,GADL,IAEEkC,SAAUE,EAAOlB,UAErB,QACE,OAAOlB,ME3DPuC,EAAa,CAACC,KAWLC,EATDC,YACZC,EAJmB,GAMnBC,YACEC,IAAe,WAAf,EAAmBN,K,0CCqCVO,G,OAAe,SAACC,EAAgBC,GAAjB,OAAiC,SAAA5B,GAC3DT,IACGsC,IAAI,mDAAqDF,EACxD,mBAAqBC,GACtBE,MAAK,SAAAC,GACJ/B,EAAS,CACPH,KN9CsB,iBM+CtBC,QAASiC,EAAIC,KAAKC,oBA0BbC,EAAa,SAACP,EAAgBQ,GAAjB,OAA8B,SAAAnC,GACtDT,IACGsC,IAAI,mDAAqDF,EACxD,IAAMQ,GACPL,MAAK,SAAAC,GACJ/B,EAAS,CACPH,KN7EoB,eM8EpBC,QAASiC,EAAIC,YAmBRI,EAAc,SAACT,GAAD,OAAoB,SAAA3B,GAC7CT,IACGsC,IAAI,0CAA4CF,EAAiB,gBACjEG,MAAK,SAAAC,GACJ/B,EAAS,CACPH,KNpGqB,gBMqGrBC,QAASiC,EAAIC,YCzGfK,E,kDACJ,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IACDoD,UAAYC,IAAMC,YACvB,EAAKC,WAAaF,IAAMC,YAHP,E,gEAQjB,IAAME,EAAWC,KAAKzD,MAAMwD,SACtBlC,EAAYmC,KAAKzD,MAAMsB,UAC7BmC,KAAKzD,MAAMwC,aAAagB,EAAUlC,K,qCAGrBoC,GACb,OAAOA,GACL,IAAK,SACH,MAAO,sBACT,IAAK,cACH,MAAO,kBACT,IAAK,eACH,MAAO,4BACT,IAAK,YACH,MAAO,gBACT,QACE,MAAO,M,+BAKH,IACJC,EADG,OAGHC,EAAsB,GAC1B,GAAsC,IAAjCH,KAAKzD,MAAM+C,YAAYc,OAAa,CACvC,IAAMC,EAAWL,KAAKzD,MAAM+C,YAC5BgB,QAAQC,IAAIF,GACZ,IAAMG,EAAe,SAAAC,GAAI,OAAI,4BAAQC,MAAOD,GAAOA,IAwBnDP,EAAYG,EAASM,KApBD,SAAAF,GAClB,IAAMG,EAAQC,OAAOC,KAAKL,GAAMM,QAC9B,SAAAC,GAAC,MAAmB,KAAfA,EAAEC,OAAO,MAEZC,EAAO,GACXN,EAAMO,SAAQ,SAAAH,GACZ,IAAMI,EAAWX,EAAKO,GAEhBK,EAAaD,EADN,EAAKE,eAAeF,EAAQ,OAEzCF,EAAKK,KAAKF,MAGZH,EAAKP,KAAI,SAAAa,GAAC,OAAIrB,EAAoBqB,GAAKf,EAAKgB,YAC5C,IAAMC,EAAWR,EAAKP,IAAIH,GAC1B,OACE,8BAAUmB,MAAOlB,EAAKgB,UACnBC,MAOT,OACE,yBAAKE,UAAU,QACb,iEAA4C,6BAC5C,4BAAQC,KAAK,UAAUC,GAAG,UAAUC,IAAK/B,KAAKL,WAE5C,4BAAQe,MAAM,eAAd,eACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,aAAd,cAEF,4BAAQsB,QAAS,kBAAM,EAAKzF,MAAM0F,MAAM,EAAKtC,UAAUuC,QAAQxB,SAA/D,KACA,6BAAK,6BATP,KAWE,6BAAK,6BAE8B,GAAjCV,KAAKzD,MAAM+C,YAAYc,OAEvB,mIAKA,6BACE,yFAAoE,6BACpE,4BAAQyB,KAAK,YAAYC,GAAG,YAAYC,IAAK/B,KAAKF,YAC/CI,GAEH,4BAAQ8B,QAAS,kBACf,EAAKzF,MAAM4F,eACThC,EAAoB,EAAKL,WAAWoC,QAAQxB,OAC5C,EAAKZ,WAAWoC,QAAQxB,SAH5B,W,GA1FavE,aAgHVH,eAJS,SAAAC,GAAK,MAAK,CAChCqD,YAAarD,EAAMsC,SAASR,aAK5B,CAAEgB,gBAFW/C,CAGb0D,GChBa0C,G,yDAvGb,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACD8F,UAAYzC,IAAMC,YACvB,EAAKyC,UAAY1C,IAAMC,YACvB,EAAK0C,KAAO3C,IAAMC,YAClB,EAAK2C,OAAS5C,IAAMC,YACpB,EAAK4C,OAAS7C,IAAMC,YACpB,EAAK5D,MAAQ,CAAEyG,IAAK,EAAGC,IAAK,KAC5B,EAAKC,OAAShD,IAAMC,YAIpB,EAAK5D,MAAQ,CACX4G,SAAS,EACTC,OAAQC,OACRC,OAAQD,QAGV,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBApBN,E,qDAwBjBlD,KAAKzD,MAAM8G,OAAOrD,KAAKzD,MAAM+G,S,iCAI7BtD,KAAKzD,MAAMgH,SAASvD,KAAKzD,MAAM+G,S,+BAGxBE,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,mCAG/BxD,EAAMsE,EAAG8B,GACpBtD,KAAKzD,MAAM0G,aAAa/F,EAAMsE,EAAG8B,K,0CAI7BtD,KAAKzD,MAAMoH,WACb3D,KAAKiD,aAAa,WAAYjD,KAAKzD,MAAMqH,SAAU5D,KAAKzD,MAAM+G,OAC9DtD,KAAKiD,aAAa,WAAYjD,KAAKzD,MAAMsH,WAAY7D,KAAKzD,MAAM+G,OAChEtD,KAAKiD,aAAa,YAAajD,KAAKzD,MAAMuH,WAAY9D,KAAKzD,MAAM+G,U,sCAIrDS,EAASC,EAAU3C,EAAYiC,GAC7CtD,KAAKzD,MAAM6G,gBAAgBW,EAASC,EAAU3C,EAAYiC,K,+BAGlD,IAAD,OACDW,EAAOjE,KAAKzD,MAAM+G,MAAQ,EAChC,OACE,0BAAM1B,UAAU,QACd,6BADF,aAEaqC,EACX,6BAAK,6BACL,wDACA,6BACA,2BAAOC,QAAS,kBAAM,EAAKjB,aAAa,WAAY,EAAKV,KAAKL,QAAQxB,MAAO,EAAKnE,MAAM+G,QACtFvB,IAAK/B,KAAKuC,KAAMrF,KAAK,OAAOiH,aAAcnE,KAAKzD,MAAMqH,YAAe,6BAEtE,2BAAO1G,KAAK,QAAQwF,IAAI,IAAIC,IAAI,MAAMwB,aAAa,KAAKvC,UAAU,SAASC,KAAK,UAAUC,GAAG,UAAUC,IAAK/B,KAAKqC,YAChHrC,KAAK/D,MAAM+G,OAVd,IAUsB,6BACpB,sCACE,2BAAOkB,QAAS,kBAAM,EAAKjB,aAAa,WAAY,EAAKT,OAAON,QAAQxB,MAAO,EAAKnE,MAAM+G,QAC1FvB,IAAK/B,KAAKwC,OAAQtF,KAAK,OACvBiH,aAAcnE,KAAKzD,MAAMsH,cAEnB,6BAER,uCAAY,2BAAOK,QAAS,kBAAM,EAAKjB,aAAa,YAAa,EAAKR,OAAOP,QAAQxB,MAAO,EAAKnE,MAAM+G,QACrGvB,IAAK/B,KAAKyC,OAAQvF,KAAK,OACvBiH,aAAcnE,KAAKzD,MAAMuH,cAG3B,6BAAK,6BAvBP,gEAwB+D,6BAC7D,oFAzBF,IAyB+D,6BAzB/D,sEA2BIG,EA3BJ,oCA4BE,6BACA,2BAAO/G,KAAK,OAAO6E,IAAK/B,KAAK4C,OAC3BsB,QAAS,WAMP,EAAKjB,aAAa,sBAAuB,EAAKL,OAAOV,QAAQxB,MAAO,EAAKnE,MAAM+G,UAMnF,6BAAK,6BACL,4BAAQtB,QAAShC,KAAKqD,OAAOH,KAAKlD,OAAlC,e,GAlGgB7D,cC6DTiI,E,kDA7Db,WAAY7H,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,KAAO3C,IAAMC,YAClB,EAAK+C,OAAShD,IAAMC,YAEpB,EAAK5D,MAAQ,GAGb,EAAKgH,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBATC,E,qDAajBlD,KAAKzD,MAAM8G,OAAOrD,KAAKzD,MAAM+G,S,iCAI7BtD,KAAKzD,MAAMgH,SAASvD,KAAKzD,MAAM+G,S,+BAGxBE,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,mCAG/BxD,EAAMsE,EAAG8B,GACpBtD,KAAKzD,MAAM0G,aAAa/F,EAAMsE,EAAG8B,K,0CAI7BtD,KAAKzD,MAAMoH,UACb3D,KAAKiD,aAAa,cAAejD,KAAKzD,MAAM8H,YAAarE,KAAKzD,MAAM+G,S,+BAI9D,IAAD,OACDW,EAAOjE,KAAKzD,MAAM+G,MAAQ,EAChC,OACE,0BAAM1B,UAAU,QACd,6BADF,aAEaqC,EACX,6BAHF,iCAIgC,6BAC9B,8BAAUK,KAAK,KAAKC,KAAK,KAAKxC,IAAK/B,KAAKuC,KAAM4B,aAAcnE,KAAKzD,MAAM8H,YACrEH,QAAS,kBAAM,EAAKjB,aAAa,cAAe,EAAKV,KAAKL,QAAQxB,MAAO,EAAKnE,MAAM+G,UAEtF,6BAAK,6BARP,gEAS+D,6BAC7D,oFAVF,IAU+D,6BAV/D,sEAYIW,EAZJ,wCAaE,6BACA,2BAAO/G,KAAK,OAAO6E,IAAK/B,KAAK4C,OAC3BsB,QAAS,kBAAM,EAAKjB,aAAa,kBAAmB,EAAKL,OAAOV,QAAQxB,MAAO,EAAKnE,MAAM+G,UAE5F,6BAAK,6BACL,4BAAQtB,QAAShC,KAAKqD,OAAOH,KAAKlD,OAAlC,e,GAxDiB7D,a,QCmuBVqI,G,wDAjuBb,WAAYjI,GAAQ,IAAD,8BACjB,cAAMA,IAED8F,UAAYzC,IAAMC,YACvB,EAAK4E,QAAU7E,IAAMC,YACrB,EAAK6E,OAAS9E,IAAMC,YACpB,EAAK8E,QAAU/E,IAAMC,YACrB,EAAK+E,UAAYhF,IAAMC,YACvB,EAAKgF,aAAejF,IAAMC,YAC1B,EAAKiF,aAAelF,IAAMC,YAC1B,EAAKkF,aAAenF,IAAMC,YAC1B,EAAKmF,aAAepF,IAAMC,YAC1B,EAAK0C,KAAO3C,IAAMC,YAClB,EAAKoF,aAAerF,IAAMC,YAC1B,EAAKqF,UAAYtF,IAAMC,YACvB,EAAKsF,SAAWvF,IAAMC,YACtB,EAAKuF,YAAcxF,IAAMC,YACzB,EAAKwF,eAAiBzF,IAAMC,YAC5B,EAAKyF,cAAgB1F,IAAMC,YAC3B,EAAK0F,cAAgB3F,IAAMC,YAE3B,EAAK2F,UAAY,EAAKA,UAAUtC,KAAf,gBACjB,EAAKuC,UAAY,EAAKA,UAAUvC,KAAf,gBACjB,EAAKwC,aAAe,EAAKA,aAAaxC,KAAlB,gBACpB,EAAKyC,QAAU,EAAKA,QAAQzC,KAAb,gBACf,EAAK0C,MAAQ,EAAKA,MAAM1C,KAAX,gBACb,EAAKuC,UAAY,EAAKA,UAAUvC,KAAf,gBACjB,EAAK2C,aAAe,EAAKA,aAAa3C,KAAlB,gBACpB,EAAK4C,YAAc,EAAKA,YAAY5C,KAAjB,gBACnB,EAAK6C,eAAiB,EAAKA,eAAe7C,KAApB,gBACtB,EAAK8C,eAAiB,EAAKA,eAAe9C,KAApB,gBACtB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAK+C,aAAe,EAAKA,aAAa/C,KAAlB,gBACpB,EAAK+C,aAAe,EAAKA,aAAa/C,KAAlB,gBACpB,EAAKgD,mBAAqB,EAAKA,mBAAmBhD,KAAxB,gBAC1B,EAAKiD,aAAe,EAAKA,aAAajD,KAAlB,gBACpB,EAAKkD,YAAc,EAAKA,YAAYlD,KAAjB,gBACnB,EAAKmD,YAAc,EAAKA,YAAYnD,KAAjB,gBAEnB,EAAKjH,MAAQ,EAAKiK,mBAAmB,EAAK3J,MAAM8C,MAvC/B,E,+DA0CAA,GAEjB,IAAMiH,EAAajH,EAAK,cAClBkH,EAAUlH,EAAK,iBACfmH,EAAOnH,EAAI,KACXoH,EAAOpH,EAAI,KACXqH,EAAuB,EAAVH,EAAc,EAC3BI,EAA2D,IAAjDC,KAAKC,KAAMH,EAAaJ,EAAc,IAAM,GAEtDQ,EAAazH,EAAK,eAClB0H,EAAiBD,EAAaJ,EAC9BM,EAAUJ,KAAKC,KAAKD,KAAKjE,IAAI6D,EAAMC,GAAQ,GAC3CQ,EAAaL,KAAKjE,IAAI6D,EAAMC,GAAQC,EAEpCQ,EAAWP,EAAS,GACpBvG,EAAS6G,EAAaF,EAGtBI,GAFSP,KAAKC,KAAKzG,EAASsG,GAEhBE,KAAKC,KAAKI,EAAa,IACnCG,EAAeJ,EACfK,EAAYjH,IAAWoG,EAAO,EAAI,GAAKE,GAAcD,EAAO,EAAI,GAAKC,EAAa,GAClFY,EAAaP,EAAiBL,EAC9Ba,EAAUD,EAAaZ,EAEvBc,GAAY,GAAMhB,EAAO,GAAKE,EAC9Be,GAAY,GAAMhB,EAAO,GAAKC,EAC9BgB,EAAcd,KAAKC,KAAKW,EAAWd,GACnCiB,EAAcf,KAAKC,KAAKY,EAAWf,GAEnCkB,EAAYhB,KAAKiB,IAAIjB,KAAKC,KAAKL,EAAO,GAAKY,GAC3CU,EAAYlB,KAAKiB,IAAIjB,KAAKC,KAAKJ,EAAO,GAAKW,GAE3CW,EAAY1I,EAAI,UAClB2I,EAAcD,EAAYH,EAAY,EACtCK,EAAQF,EACRG,EAAQH,EAAYvB,EAAO,EAC3ByB,EAAQP,EAAcN,GACxBY,EAAcJ,EAAY,EAC1BK,EAAQ,EACRC,EAAQ1B,EAAO,GAERyB,EAAQP,EAAcN,EAAeE,IAC5CU,EAAcJ,EAAYN,EAAa,EACvCW,EAAQX,EACRY,EAAQZ,EAAad,EAAO,GAG9B,IAeI2B,EAQAC,EACAC,EACAC,EAzBAC,EAAYlJ,EAAI,UAChBmJ,EAAcD,EAAYT,EAAY,EACtCW,EAAQF,EACRG,EAAQH,EAAY9B,EAAO,EAC3BgC,EAAQd,EAAcP,GACxBoB,EAAcV,EAAY,EAC1BW,EAAQ,EACRC,EAAQjC,EAAO,GAERgC,EAAQd,EAAcP,EAAeE,IAC5CkB,EAAcV,EAAYR,EAAa,EACvCmB,EAAQnB,EACRoB,EAAQpB,EAAab,EAAO,GAc9B,IAYIkC,EAZEC,EAAa9B,GATjBqB,EADE,cAAe9I,EACLW,KAAKzD,MAAM8C,KAAX,UAGA,GA0Bd,MAnBI,YAAaA,GAAQuJ,GAAcC,SAASxJ,EAAI,SAAe,KAAO,GAExEgJ,EAAWvB,EAAaJ,IADxB0B,EAAUS,SAASxJ,EAAI,UACyB,GAChDiJ,EAAWM,GAAcR,EAAU,KAGnCA,EAAU,EACVC,EAAWO,EACXN,EAAWM,GAKXD,IADE,YAAatJ,IACLA,EAAI,QAMT,CACLuJ,WAAYvJ,EAAK,eACjB0I,UAAW1I,EAAI,UACfkJ,UAAWlJ,EAAI,UACfyJ,EAAG,EAAGC,EAAG,EAAGC,QAAQ,EACpBC,MAAO,KACPC,MAAM,EACNC,SAAU/I,EACVgJ,UAAWzC,EACX0C,KAAM,EACN7C,KAAMA,EACN8C,WAAYjK,EAAI,WAChBoH,KAAMA,EACN8C,YAAalK,EAAI,YACjBqH,WAAYA,EACZsB,YAAcA,EAActB,EAC5B8B,YAAaA,EAAc9B,EAC3Bc,SAAUE,EAAchB,EACxBgB,YAAaA,EACbD,SAAUE,EAAcjB,EACxBiB,YAAaA,EACb6B,kBAAmB,EACnBC,SAAS,EACTxB,MAAOA,EACPC,MAAOA,EACPO,MAAOA,EACPC,MAAOA,EACPgB,QAAS9C,KAAK+C,OAAOvJ,EAAUoG,EAAOE,GAAeA,GACrDkD,QAAShD,KAAK+C,OAAOvJ,EAAUqG,EAAOC,GAAeA,GACrDmD,YAAaxK,EAAI,YACjBkH,QAASA,EACTW,SAAUA,EACVC,UAAWA,EACXC,aAAcA,EACdC,UAAWA,EACXE,QAASA,EACTD,WAAYA,EACZN,QAASA,EACTC,WAAYA,EACZ6C,OAAQhD,EACRc,UAAWA,EACXE,UAAWA,EACXiC,OAAQ/J,KAAKzD,MAAM8C,KAAX,OACR2K,WAAW,EACX7B,UAAWA,EACXC,QAASA,EACTC,SAAUA,EACVC,SAAUA,EACVK,QAASA,K,gCAIHsB,EAAMC,GACd,IAAMC,EAAWF,EAEXG,EAAKpK,KAAK/D,MAAM+L,YAAchI,KAAK/D,MAAMyK,WAAayD,EAAW,GACjEE,EAAKrK,KAAK/D,MAAMiL,SAAWlH,KAAK/D,MAAMyK,WAAawD,EAAO,GAKhE,OAFW,4BAAQtI,UAAU,OAAO0I,OAAO,WAAWC,KAAK,WAAWC,YAAY,MAAMC,cAAc,MAAMC,GAAIN,EAAIO,GAAIN,EAAIO,EAAG5K,KAAK/D,MAAMsK,Y,iCAKjI0D,EAAMC,GACf,IAAMC,EAAWF,EAEXG,EAAKpK,KAAK/D,MAAMuM,YAAcxI,KAAK/D,MAAMyK,WAAayD,EAAW,GACjEE,EAAKrK,KAAK/D,MAAMiL,SAAWlH,KAAK/D,MAAMyK,WAAawD,EAAO,GAKhE,OAFW,4BAAQtI,UAAU,OAAO0I,OAAO,UAAUC,KAAK,UAAUC,YAAY,MAAMC,cAAc,MAAMC,GAAIN,EAAIO,GAAIN,EAAIO,EAAG5K,KAAK/D,MAAMsK,Y,mCAK7H/C,EAAGqH,GACd,IAAIC,EACAC,EACY,IAAZF,GACFC,EAAe9K,KAAK/D,MAAMyL,YAC1BqD,EAAW/K,KAAK/D,MAAM2L,WAEH,IAAZiD,IACPC,EAAe9K,KAAK/D,MAAM0L,YAC1BoD,EAAW/K,KAAK/D,MAAM6L,WAExB,IAAIkD,EAAMhL,KAAK0E,OAAOxC,QAClB+I,EAAKD,EAAIE,iBACbD,EAAGnC,EAAItF,EAAE2H,QACT,IAAIC,EAAOH,EAAGI,gBAAgBL,EAAIM,eAAeC,WACjD/H,EAAEgI,iBACF,IAAI1C,EAAIsC,EAAKtC,EAAIgC,EAAe9K,KAAK/D,MAAMuN,kBAI3C,MAAO,CAHG5C,KAAK+C,OAAOb,EAAI9I,KAAK/D,MAAMkL,WAAanH,KAAK/D,MAAMyK,YAAcqE,EACzDnE,KAAK+C,OAAOb,EAAI9I,KAAK/D,MAAMkL,WAAanH,KAAK/D,MAAMyK,YAAc,K,sCAKrE+E,EAAKC,EAAab,GAIhC,GAAI7K,KAAK/D,MAAM0M,SACb,GAAgB,IAAZkC,EAAe,CACjB,IAAME,EAAW/K,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAM6L,UACtD,GAAI2D,EAAMzL,KAAK/D,MAAMmL,aAAe,EAElCpH,KAAKyD,SAAS,CAAE+E,aAAcxI,KAAK/D,MAAMmL,aAAe,GAAKpH,KAAK/D,MAAMyK,WAAY+B,MAAO,EAAGC,MAAO1I,KAAK/D,MAAMwK,KAAO,SAEpH,GAAIgF,EAAMzL,KAAK/D,MAAMwK,KAAO,EAAIzG,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAMqL,WAAY,CACpF,IAAMqE,EAAS3L,KAAK/D,MAAMqL,WAAatH,KAAK/D,MAAMwK,KAClDzG,KAAKyD,SAAS,CAAE+E,YAAaxI,KAAK/D,MAAMyK,YAAc1G,KAAK/D,MAAMmL,aAAeuE,EAAS,GAAIlD,MAAOkD,EAAQjD,MAAOiD,EAAS3L,KAAK/D,MAAMwK,KAAO,SAG9IzG,KAAKyD,SAAS,CAAE+E,YAAaxI,KAAK/D,MAAMyK,WAAa+E,EAAKhD,MAAOiD,EAAcX,EAAUrC,MAAOgD,EAAcX,EAAW/K,KAAK/D,MAAMwK,KAAO,IAE7IzG,KAAKyF,iBAEF,GAAgB,IAAZoF,EAAe,CACtB,IAAME,EAAW/K,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAM2L,UACtD,GAAI6D,EAAMzL,KAAK/D,MAAMmL,aAAe,EAClCpH,KAAKyD,SAAS,CAAEuE,aAAchI,KAAK/D,MAAMmL,aAAe,GAAKpH,KAAK/D,MAAMyK,WAAYuB,MAAO,EAAGC,MAAOlI,KAAK/D,MAAMuK,KAAO,SAEpH,GAAIiF,EAAMzL,KAAK/D,MAAMuK,KAAO,EAAIxG,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAMqL,WAAY,CACpF,IAAMqE,EAAS3L,KAAK/D,MAAMqL,WAAatH,KAAK/D,MAAMuK,KAClDxG,KAAKyD,SAAS,CAAEuE,YAAahI,KAAK/D,MAAMyK,YAAc1G,KAAK/D,MAAMmL,aAAeuE,EAAS,GAAI1D,MAAO0D,EAAQzD,MAAOyD,EAAS3L,KAAK/D,MAAMuK,KAAO,SAG9IxG,KAAKyD,SAAS,CAAEuE,YAAahI,KAAK/D,MAAMyK,WAAa+E,EAAKxD,MAAOyD,EAAcX,EAAU7C,MAAOwD,EAAcX,EAAW/K,KAAK/D,MAAMuK,KAAO,IAE7IxG,KAAKyF,kBAKS,IAAZoF,GACEY,EAAMzL,KAAK/D,MAAM0L,YAAc3H,KAAK/D,MAAMmL,aAC5CpH,KAAKyD,SAAS,CAAE+E,aAAcxI,KAAK/D,MAAM6L,UAAY,GAAK9H,KAAK/D,MAAMyK,WAAY+B,MAAO,EAAGC,MAAO1I,KAAK/D,MAAMwK,KAAO,IAE7GgF,EAAMzL,KAAK/D,MAAM0L,YAAc3H,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAMqL,WAC3EtH,KAAKyD,SAAS,CAAE+E,YAAaxI,KAAK/D,MAAMyK,YAAc1G,KAAK/D,MAAM6L,UAAY9H,KAAK/D,MAAMqL,WAAa,GAAImB,MAAOzI,KAAK/D,MAAMqL,WAAYoB,MAAO1I,KAAK/D,MAAMqL,WAAatH,KAAK/D,MAAMwK,KAAO,IAGxLzG,KAAKyD,SAAS,CAAE+E,YAAaxI,KAAK/D,MAAMyK,WAAa+E,EAAKhD,MAAOiD,EAAahD,MAAOgD,EAAc1L,KAAK/D,MAAMwK,KAAO,IAEvHzG,KAAKyF,aAEc,IAAZoF,IACHY,EAAMzL,KAAK/D,MAAMyL,YAAc1H,KAAK/D,MAAMmL,aAC5CpH,KAAKyD,SAAS,CAAEuE,aAAchI,KAAK/D,MAAM2L,UAAY,GAAK5H,KAAK/D,MAAMyK,WAAYuB,MAAO,EAAGC,MAAOlI,KAAK/D,MAAMuK,KAAO,IAE7GiF,EAAMzL,KAAK/D,MAAMyL,YAAc1H,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAMqL,WAC3EtH,KAAKyD,SAAS,CAAEuE,YAAahI,KAAK/D,MAAMyK,YAAc1G,KAAK/D,MAAM2L,UAAY5H,KAAK/D,MAAMqL,WAAa,GAAIW,MAAOjI,KAAK/D,MAAMqL,WAAYY,MAAOlI,KAAK/D,MAAMqL,WAAatH,KAAK/D,MAAMuK,KAAO,IAGxLxG,KAAKyD,SAAS,CAAEuE,YAAahI,KAAK/D,MAAMyK,WAAa+E,EAAKxD,MAAOyD,EAAaxD,MAAOwD,EAAc1L,KAAK/D,MAAMuK,KAAO,IAEvHxG,KAAKyF,e,mCAMEjC,EAAGoI,GAAM,IAAD,OACnB,GAAe,cAAXpI,EAAEtG,KAAsB,CAE1BsG,EAAEgI,iBACF,IAAIK,EAAS7L,KAAK0E,OAAOxC,QAIrB4J,EAAQD,EAAOX,iBACnBY,EAAMhD,EAAItF,EAAE2H,QACZ,IAAIY,EAAUD,EAAMT,gBAAgBQ,EAAOP,eAAeC,WAC9C,IAARK,EACF5L,KAAKyD,UAAS,SAAAuI,GAAS,MAAK,CAE1BvC,QAASmC,EACTpC,kBAAmBwC,EAAUxE,SAAW,EAAKvL,MAAM+L,YAAc+D,EAAQjD,MAG5D,IAAR8C,GACP5L,KAAKyD,UAAS,SAAAuI,GAAS,MAAK,CAE1BvC,QAASmC,EACTpC,kBAAmBwC,EAAUvE,SAAW,EAAKxL,MAAMuM,YAAcuD,EAAQjD,S,8BAOzEtF,GACJA,EAAEgI,iBACF,IAAIX,EAAU7K,KAAK/D,MAAMwN,QACrBnF,EAAOtE,KAAKiG,aAAazC,EAAGqH,GAC5BY,EAAMnH,EAAK,GACXoH,EAAcpH,EAAK,GAEvBtE,KAAKiM,gBAAgBR,EAAKC,EAAab,GACvC7K,KAAKyF,c,4BAGHjC,GAEAxD,KAAK/D,MAAMwN,SACbzJ,KAAKyD,SAAS,CAAEgG,SAAS,M,kCAK3B,IAAIxB,EACAC,EACAO,EACAC,EAEA1I,KAAK/D,MAAM0M,SACbV,EAAQjI,KAAK/D,MAAMgM,MACnBC,EAAQlI,KAAK/D,MAAMiM,MACnBO,EAAQzI,KAAK/D,MAAMwM,MACnBC,EAAQ1I,KAAK/D,MAAMyM,QAGnBT,EAAQjI,KAAK/D,MAAMgM,MAAQjI,KAAK/D,MAAM2L,UACtCM,EAAQlI,KAAK/D,MAAMiM,MAAQlI,KAAK/D,MAAM2L,UACtCa,EAAQzI,KAAK/D,MAAMwM,MAAQzI,KAAK/D,MAAM6L,UACtCY,EAAQ1I,KAAK/D,MAAMyM,MAAQ1I,KAAK/D,MAAM6L,WAItC9H,KAAK2E,QAAQzC,QAAQgK,UADnBjE,EAAQS,GAASR,EAAQO,EACM,EAIAzI,KAAK/D,MAAM4N,YAAYjD,KAAKiB,IAAIa,EAAQT,M,+BAIpEzE,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,iCAGjCyL,EAAKzL,GACdV,KAAKzD,MAAM6P,WAAWD,EAAKzL,K,mCAGhByL,EAAKzL,EAAO4C,GACvBtD,KAAKzD,MAAM0G,aAAakJ,EAAKzL,EAAO4C,K,0CAIpChD,QAAQC,IAAIP,KAAKzD,MAAM8C,KAAX,SAERW,KAAKzD,MAAMoH,WACb3D,KAAKiD,aAAa,WAAYjD,KAAKzD,MAAM8P,WAAX,SAAmCrM,KAAKzD,MAAM+G,OAC5EtD,KAAKiD,aAAa,YAAajD,KAAKzD,MAAM8P,WAAX,UAAoCrM,KAAKzD,MAAM+G,OAC9EtD,KAAKiD,aAAa,YAAajD,KAAKzD,MAAM8P,WAAX,UAAoCrM,KAAKzD,MAAM+G,U,mCAIrEgJ,GACX,IACMvF,GADFuF,EAAYtM,KAAK4E,UAAU1C,QAAQxB,OACJV,KAAK/D,MAAMyK,WACxCtG,EAASJ,KAAK/D,MAAMgL,WAAaF,EAEjCO,EAAaP,EAAiB/G,KAAK/D,MAAMyK,WACzCa,EAAUD,EAAatH,KAAK/D,MAAMyK,WACxCpG,QAAQC,IAAI+G,GAEZtH,KAAKoM,WAAW,cAAeE,GAE/BtM,KAAKyD,SAAS,CACZqG,OAAQwC,EACRnD,SAAU/I,EACVkH,WAAYA,EACZC,QAASA,M,oCAKXvH,KAAKyD,UAAS,SAAAuI,GACZ,MAAO,CACLhC,WAAYgC,EAAUhC,gB,qCAKbuC,GACb,IAAIxE,EAAYc,SAAS7I,KAAK6E,aAAa3C,QAAQxB,OAASV,KAAK/D,MAAM2L,UAAY,EAC/EK,EAAQF,EAAY/H,KAAK/D,MAAM2L,UAAY,EAC3CM,EAAQD,EAAQjI,KAAK/D,MAAMuK,KAAO,EAClCuB,EAAY/H,KAAK/D,MAAMyL,YAAc1H,KAAK/D,MAAMmL,cAClDW,EAAY/H,KAAK/D,MAAM2L,UAAY,EACnCK,EAAQ,EACRC,EAAQlI,KAAK/D,MAAMuK,KAAO,GAEnBuB,EAAY/H,KAAK/D,MAAMyL,YAAc1H,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAMqL,aACjFS,EAAY/H,KAAK/D,MAAM2L,UAAY5H,KAAK/D,MAAMqL,WAAa,EAC3DW,EAAQjI,KAAK/D,MAAMqL,WACnBY,EAAQlI,KAAK/D,MAAMqL,WAAatH,KAAK/D,MAAMuK,KAAO,GAGpDxG,KAAKoM,WAAW,YAAaG,GAE7BvM,KAAKyD,SAAS,CACZuE,YAAaD,EAAY/H,KAAK/D,MAAMyK,WACpCuB,MAAOA,EACPC,MAAOA,M,qCAIIqE,GACb,IAAIhE,EAAYM,SAAS7I,KAAK8E,aAAa5C,QAAQxB,OAASV,KAAK/D,MAAM6L,UAAY,EAC/EW,EAAQF,EAAYvI,KAAK/D,MAAM6L,UAAY,EAC3CY,EAAQD,EAAQzI,KAAK/D,MAAMwK,KAAO,EAClC8B,EAAYvI,KAAK/D,MAAM0L,YAAc3H,KAAK/D,MAAMmL,cAClDmB,EAAYvI,KAAK/D,MAAM6L,UAAY,EACnCW,EAAQ,EACRC,EAAQ1I,KAAK/D,MAAMwK,KAAO,GAEnB8B,EAAYvI,KAAK/D,MAAM0L,YAAc3H,KAAK/D,MAAMmL,aAAepH,KAAK/D,MAAMqL,aACjFiB,EAAYvI,KAAK/D,MAAM6L,UAAY9H,KAAK/D,MAAMqL,WAAa,EAC3DmB,EAAQzI,KAAK/D,MAAMqL,WACnBoB,EAAQ1I,KAAK/D,MAAMqL,WAAatH,KAAK/D,MAAMwK,KAAO,GAGpDzG,KAAKoM,WAAW,YAAaG,GAE7BvM,KAAKyD,SAAS,CACZ+E,YAAaD,EAAYvI,KAAK/D,MAAMyK,WACpC+B,MAAOA,EACPC,MAAOA,M,mCAIE8D,GAEXxM,KAAKoM,WAAW,gBAAiBvD,SAAS2D,IAC1C,IAAIC,EAAUzM,KAAKzD,MAAM8C,KACzBoN,EAAQ,iBAAmB5D,SAAS2D,GACpCxM,KAAKyD,SAASzD,KAAKkG,mBAAmBuG,M,kCAG5BC,GACV1M,KAAKoM,WAAW,UAAWvD,SAAS6D,IACpC,IAAID,EAAUzM,KAAKzD,MAAM8C,KACzBoN,EAAO,QAAc5D,SAAS6D,GAC9B1M,KAAKyD,SAASzD,KAAKkG,mBAAmBuG,M,mCAG3BE,GACX3M,KAAKoM,WAAW,YAAaO,GAC7B3M,KAAKyD,SAAS,CAAE0E,UAAYwE,M,oCAGf,IAAD,OACZ3M,KAAKyD,UAAS,SAAAuI,GAEZ,OADA,EAAKI,WAAW,WAAYQ,QAAQZ,EAAUrD,UACvC,CACLA,QAAS5F,QAAQ6J,QAAQZ,EAAUrD,cAGvCrI,QAAQC,IAAIP,KAAK/D,MAAM0M,W,+BAGf,IAAD,OACD1E,EAAOjE,KAAKzD,MAAM+G,MAAQ,EAE1BuJ,EAAa,SAAC5M,GAClB,OAAI,EAAK1D,MAAM8P,WACN,EAAK9P,MAAM8P,WAAWpM,GAEtB,IAGL6M,EAAkB,SAACC,GACvB,OAAI,EAAKxQ,MAAM8P,WACN,EAAK9P,MAAM8P,WAAX,YAAqCU,GAErC,IAIX,OACE,yBACEC,YAAa,SAAAxJ,GAAC,OAAI,EAAKmC,QAAQnC,IAC/ByJ,UAAW,SAAAzJ,GAAC,OAAI,EAAKoC,MAAMpC,KAC3B,yBAAK0J,MAAOlN,KAAK/D,MAAMkN,SAAUxC,OAAQ3G,KAAK/D,MAAMmN,UAAY,GAAIrH,IAAK/B,KAAK0E,QAE3E,YAAIyI,MAAMnN,KAAK/D,MAAMuK,MAAM1F,QAAQH,KAClC,SAAC8K,GAAD,OACE,YAAI0B,MAAM,EAAKlR,MAAMqN,WAAWmC,IAAM3K,QAAQH,KAC5C,SAACyM,GAAD,OAAS,EAAK5H,UAAUiG,EAAK2B,SAGlC,YAAID,MAAMnN,KAAK/D,MAAMwK,MAAM3F,QAAQH,KAClC,SAAC8K,GAAD,OACE,YAAI0B,MAAM,EAAKlR,MAAMsN,YAAYkC,IAAM3K,QAAQH,KAC7C,SAACyM,GAAD,OAAS,EAAKC,WAAW5B,EAAK2B,SAGpC,0BAAMF,MAAOlN,KAAK/D,MAAMsL,QACtBZ,OAAO,IACP4D,KAAK,QACLzB,EAAG9I,KAAK/D,MAAMkL,UAAY,EAC1B4B,EAAG/I,KAAK/D,MAAMiL,SAAW,KAC3B,0BAAMgG,MAAM,IACVvG,OAAO,KACP4D,KAAK,QACLzB,EAAG9I,KAAK/D,MAAMkL,UAAY,EAC1B4B,EAAG/I,KAAK/D,MAAMiL,SAAW,KAC3B,0BAAMgG,MAAM,IACVvG,OAAO,KACP4D,KAAK,QACLzB,EAAG9I,KAAK/D,MAAMsL,QAAUvH,KAAK/D,MAAMkL,UAAY,EAC/C4B,EAAG/I,KAAK/D,MAAMiL,SAAW,KAC1B,YAAIiG,MAAMnN,KAAK/D,MAAMmM,SAAStH,QAAQH,KACrC,SAAC2M,GAAD,OACE,0BACEJ,MAAM,IACNvG,OAAO,KACP4D,KAAK,QACLzB,EAAG,EAAK7M,MAAMkL,UAAa,EAAKlL,MAAMoM,UAAYiF,EAAO,GAAM,EAC/DvE,EAAG,EAAK9M,MAAMiL,SAAW,QAG9B,YAAIiG,MAAMnN,KAAK/D,MAAMmM,SAAStH,QAAQH,KACrC,SAAC2M,GAAD,OACA,0BACAC,WAAW,SACXzE,EAAG,EAAK7M,MAAMkL,UAAa,EAAKlL,MAAMoM,UAAYiF,EAAO,GAAM,EAC/DvE,EAAG,EAAK9M,MAAMiL,SAAW,IACtB,EAAKjL,MAAM8N,OAAU,EAAK9N,MAAMqM,UAAYgF,EAAO,OAGxD,6BACEE,OACE,CACE,CAACxN,KAAK/D,MAAMuL,SAAWxH,KAAK/D,MAAM+L,YAAc,GAAIhI,KAAK/D,MAAMiL,SAAW,IAC1E,CAAClH,KAAK/D,MAAMuL,SAAWxH,KAAK/D,MAAM+L,YAAc,GAAIhI,KAAK/D,MAAMiL,SAAW,IAC1E,CAAClH,KAAK/D,MAAMuL,SAAWxH,KAAK/D,MAAM+L,YAAahI,KAAK/D,MAAMiL,SAAW,KAGzEuG,YAAa,SAACjK,EAAGoI,GAAJ,OAAY,EAAKlG,aAAalC,EAAG,MAEhD,6BACEgK,OACE,CACE,CAACxN,KAAK/D,MAAMwL,SAAWzH,KAAK/D,MAAMuM,YAAc,GAAIxI,KAAK/D,MAAMiL,SAAW,IAC1E,CAAClH,KAAK/D,MAAMwL,SAAWzH,KAAK/D,MAAMuM,YAAc,GAAIxI,KAAK/D,MAAMiL,SAAW,IAC1E,CAAClH,KAAK/D,MAAMwL,SAAWzH,KAAK/D,MAAMuM,YAAaxI,KAAK/D,MAAMiL,SAAW,KAGzEuG,YAAa,SAACjK,EAAGoI,GAAJ,OAAY,EAAKlG,aAAalC,EAAG,MAEhD,0BAAM+J,WAAW,SAASzE,EAAG9I,KAAK/D,MAAMkL,UAAW4B,EAAG/I,KAAK/D,MAAMiL,SAAW,IAAKlH,KAAK/D,MAAM8N,QAC5F,0BAAMwD,WAAW,SAASzE,EAAG9I,KAAK/D,MAAMkL,UAAYnH,KAAK/D,MAAMsL,QAASwB,EAAG/I,KAAK/D,MAAMiL,SAAW,IAAKlH,KAAK/D,MAAM8N,OAAS/J,KAAK/D,MAAM6N,OAAS9J,KAAK/D,MAAMkM,WArE3J,0CAwEA,6BAEA,yBAAKuF,MAAM,SACT,yBAAKA,MAAM,kBACT,yBAAKA,MAAM,kBAAX,aACY,6BACV,8BAAUA,MAAM,oBAAoBpJ,KAAK,KAAKC,KAAK,KAC/CxC,IAAK/B,KAAKuC,KACV4B,aAAc0I,EAAW,YAC3B3I,QAAS,kBAAM,EAAKjB,aAAa,WAAY,EAAKV,KAAKL,QAAQxB,MAAO,EAAKnE,MAAM+G,UAGnF,6BAAK,6BACL,yBAAKoK,MAAM,YAAYC,MAAO,CAAEC,gBAAiB,cACjD,2BAAO1Q,KAAK,OACV6E,IAAK/B,KAAK+E,aACVZ,aAAc0I,EAAW,aACzB3I,QAAS,kBAAM,EAAKjB,aAAa,YAAa,EAAK8B,aAAa7C,QAAQxB,MAAO,EAAKnE,MAAM+G,UAC5F,6BAEA,yBAAKoK,MAAM,YAAYC,MAAO,CAAEC,gBAAiB,aACjD,2BAAO1Q,KAAK,OACV6E,IAAK/B,KAAKgF,aACVb,aAAc0I,EAAW,aACzB3I,QAAS,kBAAM,EAAKjB,aAAa,YAAa,EAAK+B,aAAa9C,QAAQxB,MAAO,EAAKnE,MAAM+G,WAG9F,yBAAKoK,MAAM,kBACT,6BADF,+DAGE,6BACA,2BAAOxQ,KAAK,OAAO6E,IAAK/B,KAAKqF,eAC3BnB,QAAS,kBAAM,EAAKjB,aAAa,4BAA6B,EAAKoC,eAAenD,QAAQxB,MAAO,EAAKnE,MAAM+G,UAC9G,6BACA,6EAPF,IAOwD,6BAPxD,sEASIW,EATJ,yCAWE,6BAAK,6BAXP,wDAYuD,6BAZvD,2BAa0B,6BACxB,yBAAKyJ,MAAM,YAAYC,MAAO,CAAEC,gBAAiB,cACjD,2BAAO1Q,KAAK,OACV6E,IAAK/B,KAAKsF,cACVpB,QAAS,kBAAM,EAAKjB,aAAa,2BAA4B,EAAKqC,cAAcpD,QAAQxB,MAAO,EAAKnE,MAAM+G,UAE5G,6BACA,yBAAKoK,MAAM,YAAYC,MAAO,CAAEC,gBAAiB,aACjD,2BAAO1Q,KAAK,OACV6E,IAAK/B,KAAKuF,cACVrB,QAAS,kBAAM,EAAKjB,aAAa,2BAA4B,EAAKsC,cAAcrD,QAAQxB,MAAO,EAAKnE,MAAM+G,YAIhH,yBAAK1B,UAAU,oBACb,2HAEA,2BAAOG,IAAK/B,KAAK4E,UAAW1H,KAAK,OAC/BiH,aAAc2I,EAAgB,iBAIhC,4BAAQ9K,QAAS,WAAO,EAAK6D,aAAa,EAAKjB,UAAU1C,QAAQxB,SAAjE,gBAGA,6BAEA,oGACA,2BAAOxD,KAAK,OAAO6E,IAAK/B,KAAKiF,aAC3Bd,aAAc2I,EAAgB,eAChC,4BAAQ9K,QAAS,kBAAM,EAAK6L,aAAa,EAAK5I,aAAa/C,QAAQxB,SAAnE,qBACA,6BAEA,wHACA,2BAAOxD,KAAK,OAAO6E,IAAK/B,KAAKkF,UAC3Bf,aAAc2I,EAAgB,mBAChC,4BAAQ9K,QAAS,kBAAM,EAAKmE,aAAa,EAAKjB,UAAUhD,QAAQxB,SAAhE,iBACA,6BAEA,mIACA,2BAAOxD,KAAK,OAAO6E,IAAK/B,KAAKmF,SAC3BhB,aAAc2I,EAAgB,aAChC,4BAAQ9K,QAAS,kBAAM,EAAKoE,YAAY,EAAKjB,SAASjD,QAAQxB,SAA9D,qBACA,6BAEA,+GAEA,2BAAOqB,IAAK/B,KAAK6E,aAAc3H,KAAK,OAElCiH,aAAc2I,EAAgB,eAChC,4BAAQ9K,QAAS,kBAAM,EAAK+D,eAAe,EAAK9J,MAAM8L,aAAtD,kBAGA,6BAEA,+GAEA,2BAAOhG,IAAK/B,KAAK8E,aAAc5H,KAAK,OAElCiH,aAAc2I,EAAgB,eAChC,4BAAQ9K,QAAS,kBAAM,EAAKgE,eAAe,EAAK/J,MAAMsM,aAAtD,kBAGA,6BAG2C,KAAzCvI,KAAKzD,MAAM8C,KAAX,QAA2ByO,WAE3B,6BACE,2BACE5Q,KAAK,WACL4E,GAAG,WACHD,KAAK,WACLnB,MAAM,OACNqB,IAAK/B,KAAKoF,YACVjC,SAAUnD,KAAKqG,YAAaxD,SAAO,IACrC,2BAAOkL,IAAI,YAAX,8BAGF,6BACE,2BACE7Q,KAAK,WACL4E,GAAG,WACHD,KAAK,WACLnB,MAAM,OACNqB,IAAK/B,KAAKoF,YACVjC,SAAUnD,KAAKqG,cACjB,2BAAO0H,IAAI,YAAX,gCAOR,6BACA,iDAAsB,0BAAMhM,IAAK/B,KAAK2E,UAAtC,0BAA8E3E,KAAK/D,MAAMgM,MAAzF,2BAAwHjI,KAAK/D,MAAMwM,MAAnI,U,GA3tBkBtM,cCSpB6R,E,kDACJ,WAAYzR,GAAQ,IAAD,8BACjB,cAAMA,IAEDkI,QAAU7E,IAAMC,YACrB,EAAK6E,OAAS9E,IAAMC,YACpB,EAAK8E,QAAU/E,IAAMC,YAErB,EAAKoO,WAAa,EAAKA,WAAW/K,KAAhB,gBAClB,EAAKgL,mBAAqB,EAAKA,mBAAmBhL,KAAxB,gBAC1B,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKkJ,WAAa,EAAKA,WAAWlJ,KAAhB,gBAClB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKjH,MAAQ,CACXkS,cAAc,EACdC,UAAW,GACXC,aAAc,GACdC,WAAY,GACZnC,IAAK,EAAK5P,MAAM4P,KAlBD,E,gEAwBbnM,KAAKzD,MAAMoH,WACb3D,KAAKiD,aAAa,WAAYjD,KAAKzD,MAAM8P,WAAX,SAAmCrM,KAAKzD,MAAM+G,OAC5EtD,KAAKiD,aAAa,cAAejD,KAAKzD,MAAM8P,WAAX,YAAsCrM,KAAKzD,MAAM+G,QAEpF,IAAMvD,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SACtCC,KAAKzD,MAAMgD,WAAWQ,EAAU,c,+BAGzB7C,EAAM2E,EAAM0M,GACnBvO,KAAKzD,MAAMiS,SAAStR,EAAM2E,EAAM0M,K,iCAGvBE,GAAgB,IAAD,OACxBnO,QAAQC,IAAIkO,EAAc9N,KAAI,SAAA+N,GAC5BD,EAActN,SAAQ,SAACuN,GAKrB,GAHyB,EAAKnS,MAAMoS,gBAAgB5N,QAClD,SAAAN,GAAI,MAAqB,gBAAjBA,EAAKmO,YACkBjO,KAAI,SAAAF,GAAI,OAAIA,EAAKtC,YACpC0Q,SAASH,EAAK7M,MAC1BiN,MAAM,sEAEN,EAAKrL,SAAS,CAAE0K,cAAc,QACzB,CACL,EAAKlL,aAAa,WAAYyL,EAAK7M,KAAM,EAAKtF,MAAM+G,OAEpD,IAAMyL,EAAS,IAAIC,WACnBD,EAAOE,QAAU,kBAAM3O,QAAQC,IAAI,6BACnCwO,EAAOG,QAAU,kBAAM5O,QAAQC,IAAI,4BACnCwO,EAAOI,OAAS,WAAO,IAAD,EAEdC,EAAWL,EAAOM,OAClBC,EAAWC,KAAKC,MAAMJ,IAE5B,EAAKnM,aAAa,cAAeqM,EAAU,EAAK/S,MAAM+G,OACvB,GAA3B,EAAK/G,MAAMkT,MAAMrP,QACnB,EAAKoO,SAAS,eAAgBE,EAAK7M,KAAMyN,GAE3B,EAAK/S,MAAMkT,MAAM9O,KAAI,SAAAF,GAAI,OAAIA,EAAKtC,YACrC0Q,SAASH,EAAK7M,OACvB,EAAK2M,SAAS,eAAgBE,EAAK7M,KAAMyN,GAI7C,IAAMhJ,EAAagJ,EAAS,cACtB/I,EAAU+I,EAAS,iBACnB5I,EAAuB,EAAVH,EAAc,EAC3BI,EAA2D,IAAjDC,KAAKC,KAAMH,EAAaJ,EAAc,IAAM,GACtDY,EAAWP,EAAS,GACpBvG,EAAoG,IAA3FwG,KAAKC,MAAMH,EAAa4I,EAAQ,KAAW,EAAI5I,EAAa4I,EAAQ,KAAW,GAAK,KACpF1I,KAAK+C,MAAMvJ,EAASsG,GACnC,EAAKjD,UAAL,GACE0K,cAAc,EACdiB,SAAUA,EACVE,SAAUA,EACVnG,SAAU/I,EACVgJ,UAAWzC,EACXD,WAAYA,GANd,8BAOgB,GAPhB,qBAQQ4I,EAAQ,MARhB,2BAScA,EAAQ,YATtB,qBAUQA,EAAQ,MAVhB,4BAWeA,EAAQ,aAXvB,6BAYgBA,EAAQ,KAAW,GAAK5I,GAZxC,6BAagB4I,EAAQ,KAAWA,EAAQ,KAAW,GAAK5I,GAb3D,yBAcYE,KAAK+C,MAAO,GAAM2F,EAAQ,KAAY5I,GAAcA,GAdhE,yBAeYE,KAAK+C,MAAO,GAAM2F,EAAQ,KAAY5I,GAAcA,GAfhE,sBAgBS4I,EAAQ,KAAW,GAhB5B,sBAiBSA,EAAQ,KAAWA,EAAQ,KAAW,GAjB/C,sBAkBSA,EAAQ,KAAWA,EAAQ,KAAW,GAlB/C,sBAmBSA,EAAQ,KAAW,EAAIA,EAAQ,KAAW,GAnBnD,wBAoBW1I,KAAK+C,OAAOvJ,EAAUkP,EAAQ,KAAW5I,GAAeA,IApBnE,wBAqBWE,KAAK+C,OAAOvJ,EAAUkP,EAAQ,KAAW5I,GAAeA,IArBnE,4BAsBe4I,EAAQ,aAtBvB,wBAuBW/I,GAvBX,yBAwBYW,GAxBZ,KA2BF6H,EAAOW,WAAWhB,WAIxB1O,KAAKyD,SAAS,CAAE2K,UAAWK,EAAc9N,KAAI,SAAA+N,GAAI,OAAIA,EAAK7M,Y,2CAGtC,IAAD,SACnB7B,KAAKiD,aAAa,WAAYjD,KAAK/D,MAAMqS,WAAYtO,KAAKzD,MAAM+G,OAEhE,IAAMgM,EAAWtP,KAAKzD,MAAMoS,gBAAgB5N,QAAO,SAAAN,GAAI,OACrDA,EAAKtC,UAAY,EAAKlC,MAAMqS,cAAY,GAAGqB,YAE7C3P,KAAKiD,aAAa,cAAeqM,EAAUtP,KAAKzD,MAAM+G,OAEtD,IAAMgD,EAAagJ,EAAS,cACtB/I,EAAU+I,EAAS,iBACnB5I,EAAuB,EAAVH,EAAc,EAC3BI,EAA2D,IAAjDC,KAAKC,KAAMH,EAAaJ,EAAc,IAAM,GACtDY,EAAWP,EAAS,GACpBvG,EAAoG,IAA3FwG,KAAKC,MAAMH,EAAa4I,EAAQ,KAAW,EAAI5I,EAAa4I,EAAQ,KAAW,GAAK,KACpF1I,KAAK+C,MAAMvJ,EAASsG,GACnC1G,KAAKyD,UAAL,GACE0K,cAAc,EAEdmB,SAAUA,EACVnG,SAAU/I,EACVgJ,UAAWzC,EACXD,WAAYA,GANd,8BAOgB,GAPhB,qBAQQ4I,EAAQ,MARhB,2BAScA,EAAQ,YATtB,qBAUQA,EAAQ,MAVhB,4BAWeA,EAAQ,aAXvB,6BAYgBA,EAAQ,KAAW,GAAK5I,GAZxC,6BAagB4I,EAAQ,KAAWA,EAAQ,KAAW,GAAK5I,GAb3D,yBAcYE,KAAK+C,MAAO,GAAM2F,EAAQ,KAAY5I,GAAcA,GAdhE,yBAeYE,KAAK+C,MAAO,GAAM2F,EAAQ,KAAY5I,GAAcA,GAfhE,sBAgBS4I,EAAQ,KAAW,GAhB5B,sBAiBSA,EAAQ,KAAWA,EAAQ,KAAW,GAjB/C,sBAkBSA,EAAQ,KAAWA,EAAQ,KAAW,GAlB/C,sBAmBSA,EAAQ,KAAW,EAAIA,EAAQ,KAAW,GAnBnD,wBAoBW1I,KAAK+C,OAAOvJ,EAAUkP,EAAQ,KAAW5I,GAAeA,IApBnE,wBAqBWE,KAAK+C,OAAOvJ,EAAUkP,EAAQ,KAAW5I,GAAeA,IArBnE,4BAsBe4I,EAAQ,aAtBvB,wBAuBW/I,GAvBX,yBAwBYW,GAxBZ,M,+BA6BAlH,KAAKzD,MAAM8G,OAAOrD,KAAKzD,MAAM+G,S,iCAI7BtD,KAAKzD,MAAMgH,SAASvD,KAAKzD,MAAM+G,S,+BAGxBE,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,mCAG/ByL,EAAKzL,EAAO4C,GACvBtD,KAAKzD,MAAM0G,aAAakJ,EAAKzL,EAAO4C,K,iCAG3B6I,EAAKzL,GACd,IAAIrB,EAAOW,KAAK/D,MAAMqT,SACtBjQ,EAAK8M,GAAOpJ,OAAOrC,GACnBV,KAAKiD,aAAa,cAAe5D,EAAMW,KAAKzD,MAAM+G,S,+BAIlD,GAAItD,KAAK/D,MAAMkS,aACb,OACE,6BACE,kBAAC,EAAD,CACE9O,KAAMW,KAAK/D,MAAMqT,SAAUhM,MAAOtD,KAAKzD,MAAM+G,MAC7C8I,WAAYpM,KAAKoM,WACjBnJ,aAAcjD,KAAKiD,eACrB,8BAIC,GAAIjD,KAAKzD,MAAMoH,SACpB,OACE,6BACE,kBAAC,EAAD,CACEA,UAAU,EACVtE,KAAMW,KAAKzD,MAAM8P,WAAX,YACNA,WAAYrM,KAAKzD,MAAM8P,WACvB/I,MAAOtD,KAAKzD,MAAM+G,MAClB8I,WAAYpM,KAAKoM,WACjBnJ,aAAcjD,KAAKiD,gBAIzB,IAEImL,EAFqBpO,KAAKzD,MAAMoS,gBAAgB5N,QAClD,SAAAN,GAAI,MAAqB,gBAAjBA,EAAKmO,YACkBjO,KAAI,SAAAF,GAAI,OAAIA,EAAKtC,YAClDiQ,EAAUwB,QAAQ,eAClB,IACMC,EAAczB,EAAUzN,KADT,SAAAF,GAAI,OAAI,4BAAQC,MAAOD,GAAOA,MAGnD,OACE,yBAAKmB,UAAU,SAAf,oCAEE,6BACA,4BAAQC,KAAK,aAAanB,MAAOV,KAAK/D,MAAMqS,WAAYnL,SAAUnD,KAAKmD,UACpE0M,GAEH,4BAAQ7N,QAAShC,KAAKkO,oBAAtB,MACA,6BACA,kBAAC,IAAD,CACE4B,OAAQ9P,KAAKiO,WACb8B,OAAO,4BAEN,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,wBAASD,EAAa,CAAEpO,UAAW,aACjC,0BAAWqO,KACX,6G,GA/NkB9T,aAoPnBH,eALS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZyS,gBAAiB1S,EAAMsC,SAASP,WAKhC,CAAEuB,cAFWvD,CAGbgS,G,QC7HakC,G,yDAhIb,WAAY3T,GAAQ,IAAD,8BACjB,cAAMA,IAED8F,UAAYzC,IAAMC,YACvB,EAAKsQ,SAAWvQ,IAAMC,YACtB,EAAK0C,KAAO3C,IAAMC,YAClB,EAAK2C,OAAS5C,IAAMC,YACpB,EAAK4C,OAAS7C,IAAMC,YACpB,EAAKwF,eAAiBzF,IAAMC,YAE5B,EAAK5D,MAAQ,CACX4G,SAAS,EACTC,OAAQC,OACRC,OAAQD,OACRqN,UAAWrN,QAGb,EAAKI,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBAlBH,E,gEAsBjBlD,KAAKqQ,c,+BAILrQ,KAAKzD,MAAM8G,OAAOrD,KAAKzD,MAAM+G,S,+BAGtBE,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,mCAG/BxD,EAAMsE,EAAG8B,GACpBtD,KAAKzD,MAAM0G,aAAa/F,EAAMsE,EAAG8B,K,kCAGtB,IAAD,OACJjE,EAAOW,KAAKzD,MAAM8C,KAElB2L,EAAMsF,IAAUtQ,KAAKmQ,SAASjO,SAASqO,OAAO,OACjDC,KAAK,QAASxQ,KAAKzD,MAAM2Q,OACzBsD,KAAK,SAAUxQ,KAAKzD,MAAMoK,QAE7BqE,EAAIyF,UAAU,QACXpR,KAAKA,GACLqR,QACAH,OAAO,QACPC,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAUA,EAAI,EAAKrU,MAAM2Q,MAAQ7N,EAAKe,UAChDoQ,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAU,EAAKrU,MAAMoK,OAAS,GAAKgK,KAC7CH,KAAK,QAASxQ,KAAKzD,MAAM2Q,MAAQ7N,EAAKe,OAAS,IAC/CoQ,KAAK,UAAU,SAACG,EAAGC,GAAJ,OAAc,GAAJD,KACzBH,KAAK,OAAQ,WACbA,KAAK,UAAW,IAEnBxF,EAAIyF,UAAU,QACXpR,KAAKA,GACLqR,QACAH,OAAO,QACPM,MAAK,SAACF,GAAD,OAAOA,KACZH,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAUA,EAAI,EAAKrU,MAAM2Q,MAAQ7N,EAAKe,UAChDoQ,KAAK,KAAK,SAACG,EAAGC,GAAJ,OAAU,EAAKrU,MAAMoK,OAAU,GAAKgK,EAAK,O,+BAG9C,IAAD,OACD1M,EAAOjE,KAAKzD,MAAM+G,MAAQ,EAC1BwN,EAAY9Q,KAAKzD,MAAMoK,OAAS,EAEtC,OACE,6BACE,yBAAK5E,IAAK/B,KAAKmQ,SACbxC,MAAO,CACLoD,SAAU,WACV7D,MAAOlN,KAAKzD,MAAM2Q,MAClB8D,OAAQ,SACV,yBACErD,MAAO,CACLoD,SAAU,WACVE,IAAKH,IACP,2BAAO5T,KAAK,QAAQwF,IAAK1C,KAAK/D,MAAM6G,OAAQH,IAAK3C,KAAK/D,MAAM+G,OAC1DpB,UAAU,cAAcuB,SAAUnD,KAAKmD,SACvCtB,KAAK,YAAYnB,MAAOV,KAAK/D,MAAMmU,UACnCc,KAAMlR,KAAKzD,MAAM2U,KAAMnP,IAAK/B,KAAKqC,UACjCsL,MAAO,CAAET,MAAOlN,KAAKzD,MAAM2Q,WAGhClN,KAAK/D,MAAM6G,OACZ,2BAAO5F,KAAK,QAAQwQ,MAAM,eACxBC,MAAO,CAAET,MAAOlN,KAAKzD,MAAM2Q,OAAS/J,SAAUnD,KAAKmD,SACnDtB,KAAK,YAAYnB,MAAOV,KAAK/D,MAAMmU,UAAWc,KAAMlR,KAAKzD,MAAM2U,KAC/DxO,IAAK1C,KAAK/D,MAAM6G,OAAQH,IAAK3C,KAAK/D,MAAM+G,SACzChD,KAAK/D,MAAM+G,OAEZ,6BAAK,6BACL,yBAAKpB,UAAU,SAAf,aACaqC,EADb,IACmB,6BACjB,8BAAUK,KAAK,KAAKC,KAAK,KAAKxC,IAAK/B,KAAKuC,KACtC2B,QAAS,kBAAM,EAAKjB,aAAa,WAAY,EAAKV,KAAKL,QAAQxB,MAAO,EAAKnE,MAAM+G,UAGnF,6BACA,sCACE,2BAAOY,QAAS,kBAAM,EAAKjB,aAAa,WAAY,EAAKT,OAAON,QAAQxB,MAAO,EAAKnE,MAAM+G,QAC1FvB,IAAK/B,KAAKwC,OAAQtF,KAAK,OACvB2E,KAAK,SAASnB,MAAOV,KAAK/D,MAAM6G,OAAQK,SAAUnD,KAAKmD,YAEzD,6BACA,uCAAY,2BAAOe,QAAS,kBAAM,EAAKjB,aAAa,YAAa,EAAKR,OAAOP,QAAQxB,MAAO,EAAKnE,MAAM+G,QACrGvB,IAAK/B,KAAKyC,OAAQvF,KAAK,OACvB2E,KAAK,SAASnB,MAAOV,KAAK/D,MAAM+G,OAAQG,SAAUnD,KAAKmD,YAEzD,6BAAK,6BAjBP,gEAkB+D,6BAC7D,oFAnBF,IAmB+D,6BAnB/D,sEAqBIc,EArBJ,uCAsBE,6BACA,2BAAO/G,KAAK,OAAO6E,IAAK/B,KAAKqF,eAC3BnB,QAAS,kBAAM,EAAKjB,aAAa,gBAAiB,EAAKoC,eAAenD,QAAQxB,MAAO,EAAKnE,MAAM+G,UAElG,6BAAK,6BACL,4BAAQtB,QAAShC,KAAKqD,OAAOH,KAAKlD,OAAlC,yB,GA1Hc7D,cCQlBgV,G,yDACJ,WAAY5U,GAAQ,IAAD,8BACjB,cAAMA,IAEDN,MAAQ,CACXkS,cAAc,EACdG,WAAY,IAGd,EAAKjL,OAAS,EAAKA,OAAOH,KAAZ,gBACd,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAK+K,WAAa,EAAKA,WAAW/K,KAAhB,gBAClB,EAAKgL,mBAAqB,EAAKA,mBAAmBhL,KAAxB,gBAZT,E,gEAgBjB,IAAMnD,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SACtCC,KAAKzD,MAAMgD,WAAWQ,EAAU,c,+BAGzB7C,EAAM2E,EAAM0M,GACnBvO,KAAKzD,MAAMiS,SAAStR,EAAM2E,EAAM0M,K,mCAGrBpC,EAAKzL,EAAO4C,GACvBtD,KAAKzD,MAAM0G,aAAakJ,EAAKzL,EAAO4C,K,+BAIpCtD,KAAKzD,MAAM8G,OAAOrD,KAAKzD,MAAM+G,S,iCAI7BtD,KAAKzD,MAAMgH,SAASvD,KAAKzD,MAAM+G,S,+BAGxBE,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,QAC1CJ,QAAQC,IAAIiD,EAAEE,OAAO7B,Q,iCAGZ4M,GAAgB,IAAD,OACxBnO,QAAQC,IAAIkO,EAAc9N,KAAI,SAAA+N,GAC5BD,EAActN,SAAQ,SAACuN,GAKrB,GAHyB,EAAKnS,MAAMoS,gBAAgB5N,QAClD,SAAAN,GAAI,MAAqB,aAAjBA,EAAKmO,YACkBjO,KAAI,SAAAF,GAAI,OAAIA,EAAKtC,YACpC0Q,SAASH,EAAK7M,MAC1BiN,MAAM,sEAEN,EAAKrL,SAAS,CAAE0K,cAAc,QACzB,CACL,EAAKlL,aAAa,WAAYyL,EAAK7M,KAAM,EAAKtF,MAAM+G,OAEpD,IAAMyL,EAAS,IAAIC,WACnBD,EAAOE,QAAU,kBAAM3O,QAAQC,IAAI,6BACnCwO,EAAOG,QAAU,kBAAM5O,QAAQC,IAAI,4BACnCwO,EAAOI,OAAS,WAEd,IAAMC,EAAWL,EAAOM,OAClBC,EAAWC,KAAKC,MAAMJ,IAE5B,EAAKnM,aAAa,cAAeqM,EAAU,EAAK/S,MAAM+G,OACrB,GAA3B,EAAK/G,MAAMkT,MAAMrP,QACnB,EAAKoO,SAAS,YAAaE,EAAK7M,KAAMyN,GAExB,EAAK/S,MAAMkT,MAAM9O,KAAI,SAAAF,GAAI,OAAIA,EAAKtC,YACrC0Q,SAASH,EAAK7M,OACvB,EAAK2M,SAAS,YAAaE,EAAK7M,KAAMyN,GAI5C,EAAK7L,SAAS,CACZpE,KAAMiQ,EAAQ,KACdpC,MAAOoC,EAAQ,MACf3I,OAAQ2I,EAAQ,OAChBxN,GAAIqP,EACJD,KAAM5B,EAAQ,KACdnL,aAAcmL,EAAQ,aACtBnB,cAAc,EACdiB,SAAUA,EACVE,SAAUA,EAAQ,QAGtBP,EAAOW,WAAWhB,WAIxB1O,KAAKyD,SAAS,CACZ2K,UAAWK,EAAc9N,KAAI,SAAA+N,GAAI,OAAIA,EAAK7M,Y,2CAIxB,IAAD,OACnB7B,KAAKiD,aAAa,WAAYjD,KAAK/D,MAAMqS,WAAYtO,KAAKzD,MAAM+G,OAEhE,IAAMgM,EAAWtP,KAAKzD,MAAMoS,gBAAgB5N,QAAO,SAAAN,GAAI,OACrDA,EAAKtC,UAAY,EAAKlC,MAAMqS,cAAY,GAAGqB,YAE7C3P,KAAKiD,aAAa,cAAeqM,EAAUtP,KAAKzD,MAAM+G,OAEtDtD,KAAKyD,SAAS,CACZpE,KAAMiQ,EAAQ,KACdpC,MAAOoC,EAAQ,MACf3I,OAAQ2I,EAAQ,OAChBxN,GAAIqP,EACJD,KAAM5B,EAAQ,KACdnL,aAAcmL,EAAQ,aACtBnB,cAAc,EACdmB,SAAUA,EAAQ,S,+BAMpB,GAAItP,KAAK/D,MAAMkS,aACb,OACE,6BACE,kBAAC,EAAD,CACE9O,KAAMW,KAAK/D,MAAMoD,KACjB6N,MAAOlN,KAAK/D,MAAMiR,MAClBvG,OAAQ3G,KAAK/D,MAAM0K,OACnBuK,KAAMlR,KAAK/D,MAAMiV,KACjB7N,OAAQrD,KAAKqD,OACbJ,aAAcjD,KAAKiD,aACnBK,MAAOtD,KAAKzD,MAAM+G,MAClBoK,MAAM,WACR,8BAKJ,IAAM0D,EAAiBpR,KAAKzD,MAAMoS,gBAAgB5N,QAChD,SAAAN,GAAI,MAAqB,aAAjBA,EAAKmO,YACftO,QAAQC,IAAI6Q,GACZ,IAAIhD,EAAYgD,EAAezQ,KAAI,SAAAF,GAAI,OAAIA,EAAKtC,YAChDiQ,EAAUwB,QAAQ,eAClB,IACMC,EAAczB,EAAUzN,KADT,SAAAF,GAAI,OAAI,4BAAQC,MAAOD,GAAOA,MAGnD,OACE,yBAAKmB,UAAU,SAAf,oCAEE,6BACA,4BAAQC,KAAK,aAAanB,MAAOV,KAAK/D,MAAMqS,WAAYnL,SAAUnD,KAAKmD,UACpE0M,GAEH,4BAAQ7N,QAAShC,KAAKkO,oBAAtB,MACA,6BACA,kBAAC,IAAD,CACE4B,OAAQ9P,KAAKiO,WACb8B,OAAO,4BAEN,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,wBAASD,EAAa,CAAEpO,UAAW,aACjC,0BAAWqO,KACX,6G,GA9JgB9T,cAmLjBH,eALS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZyS,gBAAiB1S,EAAMsC,SAASP,WAKhC,CAAEuB,cAFWvD,CAGbmV,GChLIvU,EAAQa,EAAQ,GAGhB4T,E,kDACJ,WAAY9U,GAAQ,IAAD,8BACjB,cAAMA,IAuCR+U,gBAAkB,SAACC,GACjB,IAAIC,EAAM,EAAKvV,MAAMwV,SAGrB,OAAQF,GACN,IAAK,SACHC,EAAIjQ,KAAK,CACPO,GAAI,EAAK7F,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CAAWnO,SAAU,EAAKA,SACvBF,OAAQ,EAAKA,OAAQC,MAAO,EAAKrH,MAAMqH,MACvCL,aAAc,EAAKA,aACnBkJ,IAAK,EAAKlQ,MAAMqH,MAAMwK,WACtB1K,gBAAiB,EAAKA,oBAEhC,MACF,IAAK,cACHoO,EAAIjQ,KAAK,CACPO,GAAI,EAAK7F,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CAAYnO,SAAU,EAAKA,SACxBF,OAAQ,EAAKA,OAAQC,MAAO,EAAKrH,MAAMqH,MACvCL,aAAc,EAAKA,aACnBkJ,IAAK,EAAKlQ,MAAMqH,MAAMwK,eAEhC,MACF,IAAK,eACH0D,EAAIjQ,KAAK,CACPO,GAAI,EAAK7F,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CAAqBnO,SAAU,EAAKA,SACjCF,OAAQ,EAAKA,OAAQC,MAAO,EAAKrH,MAAMqH,MACvCL,aAAc,EAAKA,aACnBwM,MAAO,EAAKxT,MAAMwT,MAAOjB,SAAU,EAAKA,SACxCrC,IAAK,EAAKlQ,MAAMqH,MAAMwK,eAEhC,MACF,IAAK,YACH0D,EAAIjQ,KAAK,CACPO,GAAI,EAAK7F,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CAAmBnO,SAAU,EAAKA,SAC/BF,OAAQ,EAAKA,OAAQC,MAAO,EAAKrH,MAAMqH,MACvCL,aAAc,EAAKA,aACnBwM,MAAO,EAAKxT,MAAMwT,MAAOjB,SAAU,EAAKA,SACxCrC,IAAK,EAAKlQ,MAAMqH,MAAMwK,eAEhC,MACF,QACE0D,EAAM,gDAGV,IAAIG,EAAY,EAAK1V,MAAM2V,OAC3BD,EAAU,EAAK1V,MAAMqH,MAAMwK,YAAc,CAAE,KAAQyD,GACnD,IAAIM,EAAW,EAAK5V,MAAMqH,MAAQ,EAClC,EAAKG,SAAS,CAAEgO,SAAUD,EAAKlO,MAAOuO,EAAUD,OAAQD,EAAWG,UAAU,KAzF7E,EAAK7V,MAAQ,CACXwV,SAAU,GACVnO,MAAO,EACPsO,OAAQ,GACRG,QAAS,GACTD,UAAU,EACVrQ,SAAU,GACVgO,MAAO,IAET,EAAKuC,MAAQpS,IAAMC,YACnB,EAAKoS,UAAYrS,IAAMC,YACvB,EAAKqS,QAAUtS,IAAMC,YAErB,EAAKyR,gBAAkB,EAAKA,gBAAgBpO,KAArB,gBACvB,EAAKf,eAAiB,EAAKA,eAAee,KAApB,gBACtB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBACd,EAAKK,SAAW,EAAKA,SAASL,KAAd,gBAChB,EAAKiP,aAAe,EAAKA,aAAajP,KAAlB,gBACpB,EAAKkP,YAAc,EAAKA,YAAYlP,KAAjB,gBAEnB,EAAKsL,SAAW,EAAKA,SAAStL,KAAd,gBAEhB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBA1BN,E,gEA8BjB,IAAMnD,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAC1CmC,KAAKzD,MAAMwC,aAAagB,EAAUlC,K,+BAI3B2F,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,qCAyD7BT,GACb,OAAOA,GACL,IAAK,SACH,MAAO,sBACT,IAAK,cACH,MAAO,kBACT,IAAK,eACH,MAAO,4BACT,IAAK,YACH,MAAO,gBACT,QACE,MAAO,M,qCAIEwB,EAAU8Q,GAAc,IAAD,OAEhCf,EAAMxR,KAAK/D,MAAMwV,SAEfe,EAAWxS,KAAKzD,MAAM+C,YAAYyB,QAAO,SAAAN,GAAI,OACjDA,EAAI,UAAgBgB,KAAU,GAI1BgR,EAHgB5R,OAAOC,KAAK0R,GAAUzR,QAAO,SAAAC,GAAC,MACnC,KAAfA,EAAEC,OAAO,MAEoBF,QAAO,SAAAC,GACpC,IAAMmL,EAAM,EAAK7K,eAAekR,EAASxR,GAAT,MAChC,OAAOwR,EAASxR,GAAGmL,IAAQoG,KAC1B,GACGG,EAAoBF,EAASC,GAGnC,OAFAnS,QAAQC,IAAImS,GAEJA,EAAiB,MACvB,IAAK,SACHlB,EAAIjQ,KAAK,CACPO,GAAI9B,KAAK/D,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CACG9N,SAAU8O,EAAiB,SAC3B7O,WAAY6O,EAAiB,SAC7B5O,WAAY4O,EAAiB,UAC7B/O,UAAU,EACVJ,SAAUvD,KAAKuD,SACfF,OAAQrD,KAAKqD,OAAQC,MAAOtD,KAAK/D,MAAMqH,MACvCL,aAAcjD,KAAKiD,aACnBkJ,IAAKnM,KAAK/D,MAAMqH,MAAMwK,WACtB1K,gBAAiBpD,KAAKoD,oBAEhC,MACF,IAAK,cACHoO,EAAIjQ,KAAK,CACPO,GAAI9B,KAAK/D,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CACGrN,YAAaqO,EAAkB,eAC/B/O,UAAU,EACVJ,SAAUvD,KAAKuD,SACfF,OAAQrD,KAAKqD,OAAQC,MAAOtD,KAAK/D,MAAMqH,MACvCL,aAAcjD,KAAKiD,aACnBkJ,IAAKnM,KAAK/D,MAAMqH,MAAMwK,eAEhC,MACF,IAAK,eACH0D,EAAIjQ,KAAK,CACPO,GAAI9B,KAAK/D,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CACGrF,WAAYqG,EACZ/O,UAAU,EACVJ,SAAUvD,KAAKuD,SACfF,OAAQrD,KAAKqD,OAAQC,MAAOtD,KAAK/D,MAAMqH,MACvCL,aAAcjD,KAAKiD,aACnBwM,MAAOzP,KAAK/D,MAAMwT,MAAOjB,SAAUxO,KAAKwO,SACxCrC,IAAKnM,KAAK/D,MAAMqH,MAAMwK,eAEhC,MACF,IAAK,YACH0D,EAAIjQ,KAAK,CACPO,GAAI9B,KAAK/D,MAAMqH,MACfoO,IAAK,kBAAC,EAAD,CAAmBnO,SAAUvD,KAAKuD,SAC/BF,OAAQrD,KAAKqD,OAAQC,MAAOtD,KAAK/D,MAAMqH,MACvCL,aAAcjD,KAAKiD,aACnBwM,MAAOzP,KAAK/D,MAAMwT,MAAOjB,SAAUxO,KAAKwO,SACxCrC,IAAKnM,KAAK/D,MAAMqH,MAAMwK,eAEhC,MACF,QACE0D,EAAM,gDAGV,IAAIG,EAAY3R,KAAK/D,MAAM2V,OAC3BD,EAAU3R,KAAK/D,MAAMqH,MAAMwK,YAAc,CAAE,KAAQ4E,EAAiB,MACpE,IAAIb,EAAW7R,KAAK/D,MAAMqH,MAAQ,EAClCtD,KAAKyD,SAAS,CAAEgO,SAAUD,EAAKlO,MAAOuO,EAAUD,OAAQD,EAAWG,UAAU,M,mCAQlE3F,EAAKzL,EAAO4C,GACvB,IAAIqO,EAAY3R,KAAK/D,MAAM2V,OAC3BD,EAAUrO,EAAMwK,YAAY3B,GAAOzL,EACnCV,KAAKyD,SAAS,CAAEmO,OAAQD,M,sCAGV5N,EAASC,EAAU3C,EAAYiC,GAC7C,IAAIqO,EAAY3R,KAAK/D,MAAM2V,OACX/Q,OAAOC,KAAK6Q,EAAUrO,EAAMwK,aAEhCe,SAAS9K,KAGnB4N,EAAUrO,EAAMwK,YAAY/J,GAAW,IAFvC4N,EAAUrO,EAAMwK,YAAY/J,GAASC,GAAY3C,EAKnDf,QAAQC,IAAIoR,K,6BAIP7P,GACL,IAAI6Q,EAAY3S,KAAK/D,MAAM8V,QAC3BY,EAAUpR,KAAKO,GACf9B,KAAKyD,SAAS,CAAEsO,QAASY,M,+BAGlBrP,GACP,OAAOA,I,+BAKApG,EAAM2E,EAAM0M,GACnB,IAAMqE,EAAU,CACd,SAAY1V,EACZ,SAAY2E,EACZ,YAAe0M,GAEjBvO,KAAKyD,SAAS,CAAEgM,MAAOzP,KAAK/D,MAAMwT,MAAMoD,OAAOD,O,kCAKrCE,GAGV,IAFA,IAAIC,EAAM,EACNjB,GAAW,EACPiB,EAAIjF,aAAegF,GAAK,CAC9B,IAAIE,EAAOF,EAAIC,EAAIjF,YACnB,OAAQkF,EAAI,MACV,IAAK,SAIH,GAHY,aAAcA,GACb,cAAeA,GAClB,aAAcA,EACI,CAC1B,IAAIC,GAAUC,MAAMF,EAAI,UACpBG,GAAWD,MAAMF,EAAI,WAGvBlB,KAFYjJ,SAASmK,EAAI,WAAiBnK,SAASmK,EAAI,WAC1CC,GAAUE,KACZrB,IAAY,QAOzBA,GAAW,EAEb,MACF,QACEA,GAAW,EACf,IAAK,eACHA,GAAW,EAEbiB,IAEF,OAAOjB,I,qCAGO,IAAD,OACTgB,EAAM,GACNM,EAAQ,GACZpT,KAAK/D,MAAMwV,SACR1Q,QAAO,SAAAN,GAAI,OAA6C,IAAzC,EAAKxE,MAAM8V,QAAQsB,QAAQ5S,EAAKqB,OAC/CnB,KAAI,SAACF,GACJqS,EAAIrS,EAAKqB,GAAGgM,YAAc,EAAK7R,MAAM2V,OAAOnR,EAAKqB,GAAGgM,YACpD,IAAMwF,EAAW,EAAKrX,MAAM2V,OAAOnR,EAAKqB,GAAGgM,YAC3C,OAAQwF,EAAQ,MACd,IAAK,eACHF,EAAME,EAAS,8BAAgCA,EAAQ,SACvDF,EAAME,EAAS,6BAA+B,IAAMA,EAAS,6BAA+BA,EAAQ,UACpGF,EAAME,EAAS,6BAA+B,IAAMA,EAAS,6BAA+BA,EAAQ,UACtG,IAAK,YACHF,EAAME,EAAS,kBAAoBA,EAAQ,aAGnCtT,KAAKkS,QAAQhQ,QAAQxB,MAAMN,OAA3C,IAOMmT,EAAW,GACfA,EAAQ,SAAevT,KAAKkS,QAAQhQ,QAAQxB,MAE5C,IADA,IAAIqS,EAAM,EACHA,EAAM/S,KAAK/D,MAAMqH,OACjByP,EAAIjF,aAAegF,IACtBS,EAAS,IAAMR,EAAIjF,YAAcgF,EAAIC,EAAIjF,aAE3CiF,IAEFQ,EAAQ,MAAYR,SACbK,OAAM,GACbG,EAAQ,MAAYH,EAEpB9S,QAAQC,IAAIgT,GAEZ,IAAMxT,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SAChClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAEV,IAA3BmC,KAAK/D,MAAMwT,MAAMrP,QACpBJ,KAAK/D,MAAMwT,MAAM9O,KAAI,SAAAF,GAAI,OAAI,EAAKlE,MAAMiX,SAASzT,EAAUU,MAG7D7D,EAAM6W,IACJ,mDAAqD1T,EACrD,mBAAqBlC,EAAY,eACjC0V,GAECpU,MAAK,SAAAC,GACJkB,QAAQC,IAAInB,MAEbD,MAAK,SAAUuU,GACd5E,MAAM,iDACN6E,OAAOC,SAASC,QAAO,MAExBC,OAAM,SAAUC,GACfzT,QAAQC,IAAIwT,Q,+BAKV,IAAD,OACDhU,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpCmW,EAAY,IAAMjU,EAAW,IAAMlC,EAErCiV,EAAM,GACV9S,KAAK/D,MAAMwV,SACR1Q,QAAO,SAAAN,GAAI,OAA6C,IAAzC,EAAKxE,MAAM8V,QAAQsB,QAAQ5S,EAAKqB,OAC/CnB,KAAI,SAACF,GAAWqS,EAAIrS,EAAKqB,GAAGgM,YAAc,EAAK7R,MAAM2V,OAAOnR,EAAKqB,GAAGgM,eAIvE,IAHA,IAAIyF,EAAW,GAEXR,EAAM,EACHA,EAAM/S,KAAK/D,MAAMqH,OACjByP,EAAIjF,aAAegF,IACtBS,EAAS,IAAMR,EAAIjF,YAAcgF,EAAIC,EAAIjF,aAE3CiF,IAGF,OADAQ,EAAQ,MAAYR,EAElB,yBAAKhR,IAAK/B,KAAKgS,OACb,kDADF,WAEU,gCACR,kBAAC,IAAD,CAAMvV,GAAIuX,GACPnW,GAEH,0BAAMQ,OAAO,UAAU4V,OAAO,OAAOrS,UAAU,QAC7C,gEACA,2BAAOG,IAAK/B,KAAKkS,QACfxR,MAAOV,KAAK/D,MAAMwF,SAClB0B,SAAUnD,KAAKmD,SACfjG,KAAK,OAAO4E,GAAG,SAASD,KAAK,aAAa,6BAC5C,iFAGA7B,KAAK/D,MAAMwV,SACR1Q,QAAO,SAAAN,GAAI,OAA6C,IAAzC,EAAKxE,MAAM8V,QAAQsB,QAAQ5S,EAAKqB,OAC/CnB,KAAI,SAACF,GACJ,OAAOA,EAAKiR,OAGlB,kBAAC,EAAD,CACEzP,MAAOjC,KAAKsR,gBACZnP,eAAgBnC,KAAKmC,eACrBpC,SAAUC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SAClClC,UAAWmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,YACrC,yBAAK+D,UAAU,YACb,4BAAQI,QAAShC,KAAKmS,aAAcpQ,IAAK/B,KAAKiS,UAAW/U,KAAK,SAASwD,MAAM,SAASkB,UAAU,OAAhG,WAEF,kC,GA/XczF,aAuZPH,eARS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZgY,eAAgBjY,EAAMsC,SAAST,OAC/BqW,iBAAkBlY,EAAMsC,SAASJ,SACjCmB,YAAarD,EAAMsC,SAASR,aAM5B,CAAEyV,SRlToB,SAACxU,EAAgB0P,GAAjB,OAA0B,SAAArR,GAChDT,IACGwX,KAAK,mDAAqDpV,EACzD,YAAa0P,GACdvP,MAAK,SAAAC,GACJkB,QAAQC,IAAI,wBQ6SJxB,gBAFC/C,CAGbqV,GC1aIgD,G,uKAEF,IAAMC,EAAiBtU,KAAKzD,MAAML,KAAKM,gBACvC,OACE,yBAAKoF,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAMnF,GAAG,KAAT,QAGA,6BACC6X,EAAiB,GAChB,kBAAC,IAAD,CAAM7X,GAAG,aAAT,YACF,6BACC6X,EACC,kBAAC,IAAD,CAAM7X,GAAG,cAAT,eAEA,kBAAC,IAAD,CAAMA,GAAG,UAAT,gB,GAjBON,aAkCNH,gBAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAGCF,CAAyBqY,ICpClCE,G,qNAKF,OAAKvU,KAAKzD,MAAML,KAAKM,gBAOjB,yBAAKoF,UAAU,aAAf,cACa,2BAAI5B,KAAKzD,MAAML,KAAKyB,KAAKoC,WANtC,yBAAK6B,UAAU,kB,GAPDzF,aA4BPH,gBAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAKZ,GAFaF,CAGbuY,IC/BIC,G,uKAEA,OACE,yBAAK5S,UAAU,aACX,gEADJ,wBAIyB,4BACrB,uBAAG8B,OAAO,SAAS+Q,KAAK,gFAAxB,QALJ,IAKoH,4BALpH,sC,GAHetY,aAuBRH,gBAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAKZ,GAFaF,CAGbwY,I,oBCtBIE,G,kDACJ,aAAe,IAAD,8BACZ,gBA2BFvR,SAAW,SAAAK,GACT,EAAKC,SAAL,eAAiBD,EAAEE,OAAO5B,GAAK0B,EAAEE,OAAOhD,SA7B5B,EAgCdiU,SAAW,SAAAnR,GACTA,EAAEgI,iBACF,IAAMoJ,EAAU,CACd7U,SAAU,EAAK9D,MAAM8D,SACrB8U,SAAU,EAAK5Y,MAAM4Y,SACrBC,UAAW,EAAK7Y,MAAM6Y,WAExB,EAAKvY,MAAMwY,aAAaH,EAAS,EAAKrY,MAAMyY,UArC5C,EAAK/Y,MAAQ,CACX8D,SAAU,GACV8U,SAAU,GACVC,UAAW,GACXxW,OAAQ,IANE,E,gEAaR0B,KAAKzD,MAAML,KAAKM,iBAClBwD,KAAKzD,MAAMyY,QAAQzT,KAAK,gB,gDAIF0T,GACpBA,EAAU3W,QACZ0B,KAAKyD,SAAS,CACZnF,OAAQ2W,EAAU3W,W,+BAsBtB,IAAMA,EAAS0B,KAAK/D,MAAMqC,OAC1B,OACE,yBAAKsD,UAAU,aACb,8CACA,uBAAGA,UAAU,2BAAb,2BAEY,kBAAC,IAAD,CAAMnF,GAAG,UAAT,WAEZ,0BAAMyY,YAAU,EAACP,SAAU3U,KAAK2U,UAAhC,YAEY,2BACRxR,SAAUnD,KAAKmD,SACfzC,MAAOV,KAAK/D,MAAM8D,SAClBgU,MAAOzV,EAAOyB,SACd+B,GAAG,WACH5E,KAAK,OACL0E,UAAWuT,KAAW,GAAI,CAExBC,QAAS9W,EAAO+W,eAEpB,0BAAMzT,UAAU,YAAYtD,EAAO+W,YACnC,6BACA,6BAdF,YAgBI,2BACElS,SAAUnD,KAAKmD,SACfzC,MAAOV,KAAK/D,MAAM4Y,SAClBd,MAAOzV,EAAOuW,SACd/S,GAAG,WACH5E,KAAK,WACL0E,UAAWuT,KAAW,GAAI,CAC1BC,QAAS9W,EAAOuW,aACpB,0BAAMjT,UAAU,YAAYtD,EAAOuW,UACnC,6BACA,6BA1BF,oBA4BI,2BACE1R,SAAUnD,KAAKmD,SACfzC,MAAOV,KAAK/D,MAAM6Y,UAClBf,MAAOzV,EAAOwW,UACdhT,GAAG,YACH5E,KAAK,WACL0E,UAAWuT,KAAW,GAAI,CACxBC,QAAS9W,EAAOwW,cACtB,0BAAMlT,UAAU,YAAYtD,EAAOwW,WACnC,6BACA,6BACA,4BAAQ5X,KAAK,SAAS0E,UAAU,OAAhC,kB,GA3FazF,aAoHRH,gBAPS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZoC,OAAQrC,EAAMqC,UAOd,CAAEyW,anBpHwB,SAACO,EAAUN,GAAX,OAAuB,SAAA3X,GACjDT,IAEGwX,KAAK,kDAAmDkB,GACxDnW,MAAK,SAAAC,GAAG,OAAI4V,EAAQzT,KAAK,aACzBuS,OAAM,SAAAyB,GAAG,OACRlY,EAAS,CACPH,KChBkB,aDiBlBC,QAASoY,EAAI7B,SAASrU,amB0GfrD,CAGbwZ,YAAWd,KCzHPe,G,kDACJ,aAAe,IAAD,8BACZ,gBA8BFtS,SAAW,SAAAK,GACT,EAAKC,SAAL,eAAiBD,EAAEE,OAAO5B,GAAK0B,EAAEE,OAAOhD,SAhC5B,EAkCdiU,SAAW,SAAAnR,GACTA,EAAEgI,iBACF,IAAM8J,EAAW,CACfvV,SAAU,EAAK9D,MAAM8D,SACrB8U,SAAU,EAAK5Y,MAAM4Y,UAIvB,EAAKtY,MAAMmZ,UAAUJ,IAxCrB,EAAKrZ,MAAQ,CACX8D,SAAU,GACV8U,SAAU,GACVvW,OAAQ,IALE,E,gEAYR0B,KAAKzD,MAAML,KAAKM,iBAClBwD,KAAKzD,MAAMyY,QAAQzT,KAAK,gB,gDAIF0T,GACpBA,EAAU/Y,KAAKM,iBAEjBwD,KAAKzD,MAAMyY,QAAQzT,KAAK,cAEtB0T,EAAU3W,QACZ0B,KAAKyD,SAAS,CACZnF,OAAQ2W,EAAU3W,W,+BAqBtB,IAAMA,EAAS0B,KAAK/D,MAAMqC,OAC1B,OACE,yBAAKsD,UAAU,aACb,sCACA,0BAAMsT,YAAU,EAACP,SAAU3U,KAAK2U,UAAhC,YAEY,2BACRxR,SAAUnD,KAAKmD,SACfzC,MAAOV,KAAK/D,MAAM8D,SAClBgU,MAAOzV,EAAOyB,SACd+B,GAAG,WACH5E,KAAK,OACL0E,UAAWuT,KAAW,GAAI,CACxBC,QAAS9W,EAAOqX,iBAGpB,0BAAM/T,UAAU,YAAYtD,EAAOqX,cACnC,6BACA,6BAdF,YAgBY,2BACRxS,SAAUnD,KAAKmD,SACfzC,MAAOV,KAAK/D,MAAM4Y,SAClBd,MAAOzV,EAAOuW,SACd/S,GAAG,WACH5E,KAAK,WACL0E,UAAWuT,KAAW,GAAI,CACxBC,QAAS9W,EAAOsX,iBAEpB,0BAAMhU,UAAU,YAAYtD,EAAOsX,cACnC,6BACA,6BACA,2BACE1Y,KAAK,SACLwD,MAAM,SACNkB,UAAU,c,GAjFFzF,aAqGLH,gBALS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZoC,OAAQrC,EAAMqC,UAKd,CAAEoX,UpBrFqB,SAAAJ,GAAQ,OAAI,SAAAjY,GACnCT,IAEGwX,KAAK,+CAAgDkB,GACrDnW,MAAK,SAAAC,GAAO,IAGHzC,EAAUyC,EAAIC,KAAd1C,MACRW,aAAauY,QAAQ,WAAYlZ,GAEjCD,EAAaC,GAEb,IAAMM,EAAU6Y,IAAWnZ,GAE3BU,EAASL,EAAeC,OAEzB6W,OAAM,SAAAyB,GAAG,OACRlY,EAAS,CACPH,KCzCkB,aD0ClBC,QAASoY,EAAI7B,SAASrU,aoBgEfrD,CAGbyZ,IC/FIM,I,yDACJ,WAAYxZ,GAAQ,IAAD,8BACjB,cAAMA,IA8ERyZ,cAAgB,SAAAxS,GACdA,EAAEgI,iBACF,EAAKjP,MAAMa,cA/EX,EAAKnB,MAAQ,CACX4B,UAAW,IAGb,EAAKsF,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAK+S,WAAa,EAAKA,WAAW/S,KAAhB,gBAClB,EAAKgT,cAAgB,EAAKA,cAAchT,KAAnB,gBARJ,E,qDAWVM,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,2CAK1C,IAAMX,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SACtCC,KAAKzD,MAAM4Z,UAAUpW,K,sCAGN,IAAD,OAId,OADgBC,KAAKzD,MAAM2X,eACZvT,KAAI,SAAAF,GAEjB,GADgBI,OAAOC,KAAKL,GAChBoO,SAAS,aAAc,CACjC,IACMuH,EAAO,IADI,EAAK7Z,MAAML,KAAKyB,KAAKoC,SACR,IAAMU,EAAK5C,UACzC,OACE,yBAAK+D,UAAU,aACb,uBAAGE,GAAIrB,EAAK5C,WACT4C,EAAK5C,UADR,IACmB,gCACjB,kBAAC,IAAD,CAAMpB,GAAI2Z,GAAV,QAFF,IAIU,gCACR,4BAAQtU,GAAIrB,EAAK5C,UAAWmE,QAAS,EAAKkU,eAA1C,kB,mCAWV,IAAMnW,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SACtCC,KAAKzD,MAAM8Z,aAAatW,EAAUC,KAAK/D,MAAM4B,a,oCAKjC2F,GACZ,IAAMzD,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SAChClC,EAAY2F,EAAEE,OAAO5B,GACb6R,OAAO2C,QAAQ,+CACdzY,EAAY,mCAGzBjB,IACGyG,OAAO,mDACNtD,EAAW,mBAAqBlC,GAEpCjB,IACGyG,OAAO,mDACNtD,EAAW,OAAQ,CAAEV,KAAM,CAAExB,UAAWA,KACzCsB,MAAK,SAAAC,GACJ0P,MAAM,iCAAmCjR,EAAnC,kCAEN8V,OAAOC,SAASC,QAAO,QAG3B/E,MAAM,uBACN6E,OAAOC,SAASC,QAAO,M,+BAUR7T,KAAKzD,MAAML,KAAKyB,KAAKoC,SACtC,OACE,yBAAK6B,UAAU,aACb,yCAEA,yBAAKA,UAAU,QAAQ+L,MAAO,CAAET,MAAO,MAAO8D,OAAQ,SACpD,6BACA,0DAFF,IAEqC,6BACnC,uBAAGyD,KAAK,wFAAwF/Q,OAAO,UAAvG,iBACA,6BAAK,+BAGP,2CAVF,gCAW+B,6BAC7B,2BAAOxG,KAAK,OAAO2E,KAAK,YACtBnB,MAAOV,KAAK/D,MAAM4B,UAAWsF,SAAUnD,KAAKmD,WAC9C,4BAAQnB,QAAShC,KAAKiW,YAAtB,aACA,6BAfF,aAgBY,kCAhBZ,uBAkBE,6BAAK,6BACL,yBAAKrU,UAAU,QAAQ+L,MAAO,CAAET,MAAO,MAAO8D,OAAQ,SACpD,6BACChR,KAAKuW,gBACN,8BAGF,6BAAK,6BACL,4BACEvU,QAAShC,KAAKgW,cACdpU,UAAU,OAFZ,UAKA,6BAAK,6BAAK,mC,GAvHMzF,cA6ITH,gBALS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZgY,eAAgBjY,EAAMsC,SAAST,UAK/B,CAAEV,aAAYiZ,adjJY,SAACrX,EAAgBwX,GAAjB,OAAgC,SAAAnZ,GAC1D,IAAMoZ,EAAa,CACjB5Y,UAAW2Y,EACXlX,YAAa,IAOf1C,IACGwX,KAAK,mDAAqDpV,EAAiB,QAC1EyX,GACDtX,MAAK,SAAAuX,GAEJrZ,EAAS,CACPH,KNxBsB,iBMyBtBC,QAASuZ,EAAMrX,KAAKxB,YAEtBiR,MAAM,UAAY0H,EAAa,iBAC/B7C,OAAOC,SAASC,QAAO,Qc6HCsC,UdzHL,SAACnX,GAAD,OAAoB,SAAA3B,GAC3CT,IACGsC,IAAI,mDAAqDF,EAAiB,SAC1EG,MAAK,SAAAC,GACJ/B,EAAS,CACPH,KNpCmB,cMqCnBC,QAASiC,EAAIC,aciHNrD,CAGb+Z,I,SC/IIY,G,kDACJ,WAAYpa,GAAQ,IAAD,8BACjB,cAAMA,IACDN,MAAQ,CACX4G,SAAS,EACT+T,SAAUhK,SAGZ,EAAKiK,YAAc,EAAKA,YAAY3T,KAAjB,gBACnB,EAAK4T,YAAc,EAAKA,YAAY5T,KAAjB,gBACnB,EAAK6T,SAAW,EAAKA,SAAS7T,KAAd,gBAChB,EAAK8T,UAAY,EAAKA,UAAU9T,KAAf,gBACjB,EAAK+T,mBAAqB,EAAKA,mBAAmB/T,KAAxB,gBAXT,E,gEAgBE,IAAD,OACZnD,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SAChClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAC1CjB,IACGsC,IAAI,mDAAqDa,EACxD,mBAAqBlC,GACtBsB,MAAK,SAAAC,GAIJkB,QAAQC,IAAInB,EAAIC,MACXwB,OAAOC,KAAK1B,EAAIC,MAAMwP,SAAS,aAGlC,EAAKpL,SAAS,CAAEZ,QAASzD,EAAIC,KAAK6X,YAFlC,EAAKC,aAAapX,EAAUlC,EALZ,CAChB,WAAa,OASnBmC,KAAKzD,MAAMwC,aAAagB,EAAUlC,GAClCmC,KAAKzD,MAAMkD,YAAYM,GACvBnD,IACGsC,IAAI,0CAA4Ca,EAAW,gBAC3DZ,MAAK,SAAAC,GACJ,IAAMgY,EAAuBhY,EAAIC,KAAK0B,QAAO,SAAAc,GAAI,OAC/CA,EAAKwV,MAAM,KAAK,IAAMxZ,KACxB,EAAK4F,SAAS,CAAEmT,SAAUQ,EAAqBhX,QAAU,S,wCAK7D,IAAMvC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAM1C,OALqBmC,KAAKzD,MAAM2B,SAAS6C,QAAO,SAAAc,GAAI,MAAa,SAATA,KACjBd,QAAO,SAAAc,GAAI,OAChDA,EAAKwV,MAAM,KAAK,IAAMxZ,KACgB8C,KAAI,SAAAkB,GAAI,OAAIA,EAAKwV,MAAM,KAAK,Q,mCAKzDC,EAAed,EAAYnX,GACtCzC,IAAM6W,IAAI,mDACR6D,EAAgB,mBAAqBd,EAAYnX,K,kCAInD,IAAMkY,GAAYvX,KAAK/D,MAAM4G,QAC7B7C,KAAKyD,SAAS,CAAEZ,SAAU7C,KAAK/D,MAAM4G,UACrC,IAAM9C,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SAChClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpC2Z,EAAY,CAChB,UAAaD,GAEfvX,KAAKmX,aAAapX,EAAUlC,EAAW2Z,K,qCAGzB,IAAD,OACPzX,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAEpC+Y,EAAW5W,KAAKyX,kBAEtB,OAAOzX,KAAKzD,MAAM+C,YAAYqB,KAAI,SAAA+W,GAChC,IAGIC,EAHElW,EAAWiW,EAAKjW,SAChBmW,EAAaF,EAAKtB,KAItBuB,EADoB,MAAlBD,EAAKC,UACK,MAEAD,EAAKC,UAGnB,IAAME,EAAe,IAAM9X,EAAW,IAAMlC,EAAY,IACtD4D,EAAW,WAGPqW,EAAmB,IAAM/X,EAAW,IAAMlC,EAAY,IAC1D4D,EAAW,wBACPsW,EAAe,oFACyBhY,EAC1C,IAAMlC,EAAY,IAAM4D,EACtBuW,EAAc,uFAC2BjY,EAC7C,IAAMlC,EAAY,IAAM4D,EACpBwW,EAAS,mDACblY,EAAW,IAAMlC,EAAY,IAAM4D,EAErC,OAAImV,EAAS/H,SAASpN,GAElB,yBAAKG,UAAU,aACb,6BACA,yBAAKA,UAAU,SACb,2BAAI8V,EAAKjW,UADX,IACyB,6BACvB,uBAAGiC,OAAO,SAAS+Q,KAAMuD,GAAzB,sBAFF,IAIO,6BAAK,6BACV,kBAAC,IAAD,CAAMvb,GAAIob,GACR,4BAAQ3a,KAAK,UAAb,uBANJ,IASU,gCACR,kBAAC,IAAD,CAAMT,GAAIqb,GACR,4BAAQ5a,KAAK,UAAb,2BAXJ,IAcU,gCACR,6BAAK,6BACL,4BAAQ4E,GAAI4V,EAAKjW,SAAUO,QAAS,EAAKiV,oBAAzC,0BAGA,6BAAK,6BAnBP,cAoBa,2BAAIU,GAKf,6BAAK,6BACL,6CAAqB,6BACpBM,EA3BH,IA2BW,6BACT,kBAAC,mBAAD,CAAiBpH,KAAMoH,GACrB,4BACEjW,QAAS,kBACP8M,MAAM,wFAFV,sCAOF,6BAAK,6BACL,+CArCF,IAqC0B,6BACvBiJ,EAtCH,IAsCiB,6BACf,kBAAC,mBAAD,CAAiBlH,KAAMkH,GACrB,4BACE/V,QAAS,kBACP8M,MAAM,0FAFV,sCAOF,6BAAK,6BACL,kEAhDF,IAgD6C,6BAC1C8I,EAjDH,IAiDe,6BACb,kBAAC,mBAAD,CAAiB/G,KAAM+G,GACrB,4BACE5V,QAAS,kBACP8M,MAAM,gGAFV,wCAYN,6BACE,yBAAKlN,UAAU,SAAf,eACY,2BAAI8V,EAAKjW,UAAa,6BAClC,kBAAC,IAAD,CAAMhF,GAAIob,GACR,4BAAQ3a,KAAK,UAAb,mBAGK,6BAAK,6BACZ,4BAAQ4E,GAAI4V,EAAKjW,SAAUO,QAAS,EAAKiV,oBAAzC,0BAGA,6BAAK,6BACL,+CAAuB,6BACtBc,EAZD,IAYe,6BACf,kBAAC,mBAAD,CAAiBlH,KAAMkH,GACrB,4BACE/V,QAAS,kBACP8M,MAAM,0FAFV,sCAOF,6BAAK,6BACL,6CAAqB,6BACpBmJ,EAvBD,IAuBS,6BACT,kBAAC,mBAAD,CAAiBpH,KAAMoH,GACrB,4BACEjW,QAAS,kBACP8M,MAAM,wFAFV,sCAOF,6BAAK,6BACL,mCAjCA,IAiCY,6BAjCZ,0DAkCuD,6BACvD,8BAAUxK,KAAK,KAAKC,KAAK,IAAIzC,GAAIL,EAAW,OAC1CyC,QAAS,EAAK4S,YAAapW,MAAO,EAAKzE,MAAMwF,WAC/C,6BAAK,6BAEH,EAAKxF,MAAM4G,QACT,6BACA,mCADA,IACY,6BADZ,0CAEuC,6BACvC,8BAAUyB,KAAK,KAAKC,KAAK,IAAIzC,GAAIL,EAAW,YAC1CyC,QAAS,EAAK4S,YAAapW,MAAO,EAAKzE,MAAM0b,YAC/C,8BAEA,8BAEJ,6BAEA,4BAAQ7V,GAAIL,EAAUO,QAAS,EAAK+U,UAClC,sCAEF,oC,kCASEvT,GACVxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO5B,GAAK0B,EAAEE,OAAOhD,U,yCAGvB8C,GACjB,IAAMzD,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpC4D,EAAW+B,EAAEE,OAAO5B,GACZ6R,OAAO2C,QAAQ,oDACT7U,EAAW,qCAG7B7E,IACCyG,OAAO,mDACNtD,EAAW,mBAAqBlC,EAAY,yBAC5C4D,GACDtC,MAAK,SAAAC,GAEJxC,IACGyG,OAAO,mDACNtD,EAAW,OAAQ,CAACV,KAAM,CAAC6Y,QAASra,EAAY,IAAM4D,KACvDtC,MAAK,SAAAC,GACJ0P,MAAM,kCAAoCrN,EACxC,uBACFkS,OAAOC,SAASC,QAAO,UAI7B/E,MAAM,uBACN6E,OAAOC,SAASC,QAAO,M,+BAKlBrQ,GAAI,IAAD,OACJzD,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpC4D,EAAW+B,EAAE2U,cAAcrW,GAE3BsU,EAAOpW,KAAK/D,MAAMwF,EAAW,QAC7BkW,EAAY3X,KAAK/D,MAAMwF,EAAW,aAGlC2W,EAAgB,CAAE,UAAaT,GAKrC/a,IACG6W,IAAI,mDAAqD1T,EACrD,mBAAqBlC,EAAY,yBAA2B4D,EAD5D,aAEA2W,GACJjZ,MAAK,SAAAC,GACJ,IAMMiZ,EAAW,CAAE,KALf,EAAKpc,MAAM4G,QACAuT,EAAO,cAAgBuB,EAEvBvB,GAGfxZ,IACG6W,IAAI,mDAAqD1T,EACrD,mBAAqBlC,EAAY,yBAA2B4D,EAD5D,QAEA4W,GACJlZ,MAAK,SAAAC,GACJ,EAAK7C,MAAM+b,cAAcvY,EAAUlC,EAAY,IAAM4D,EAAUA,W,oCAa1D,IAAD,OACN1B,EAAWC,KAAKzD,MAAML,KAAKyB,KAAKoC,SAChClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAEpC+Y,EAAW5W,KAAKyX,kBACJzX,KAAKzD,MAAM+C,YAAYqB,KAAI,SAAAF,GAAI,OAAIA,EAAKgB,YAC7BV,QAAO,SAAAc,GAAI,OAAK+U,EAAS/H,SAAShN,MACpDV,SAAQ,SAAAoX,GACjB,EAAKhc,MAAM+b,cAAcvY,EAAUlC,EAAY,IAAM0a,EAAWA,Q,+BAKlE,IAAM3B,EAAW5W,KAAKyX,kBAChBe,EAAYxY,KAAKzD,MAAM+C,YAAYqB,KAAI,SAAAF,GAAI,OAAIA,EAAKgB,YACpDgX,EAAaD,EAAUzX,QAAO,SAAAc,GAAI,OAAK+U,EAAS/H,SAAShN,MAC/D,OAAwB,GAApB2W,EAAUpY,OAEV,yBAAKwB,UAAU,aACb,uBAAG+L,MAAO,CAAE+K,MAAO,SAAnB,oBAK0B,GAArBD,EAAWrY,OAElB,yBAAKwB,UAAU,aACb,uBAAG+L,MAAO,CAAE+K,MAAO,SAAnB,uCAHC,I,+BAaP,IAAM3Y,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpC8a,EAAkB,IAAM5Y,EAAW,IACvClC,EAAY,eAKR+a,GAHW5Y,KAAKyX,kBACJzX,KAAKzD,MAAM+C,YAAYqB,KAAI,SAAAF,GAAI,OAAIA,EAAKgB,YAEhC,IAAM1B,EAAW,IAAMlC,EAAY,0BAC7D,OACE,yBAAK+D,UAAU,aACb,sCAAY5B,KAAKzD,MAAM8V,MAAMC,OAAOzU,WACpC,kBAAC,IAAD,CAAMpB,GAAIkc,GACR,wDAIF,6BAAK,6BACL,kBAAC,IAAD,CAAMlc,GAAImc,GACR,8DAIF,gDAIE5Y,KAAK/D,MAAM2a,SACT,8BACA,6BACE,2BAAO1Z,KAAK,WAAWiG,SAAUnD,KAAKgX,UAAWnU,QAAS7C,KAAK/D,MAAM4G,UADvE,gDAGE,6BAAK,8BAIT7C,KAAK/D,MAAM4G,QACT,wFAGA,2FAEA,8BAGH7C,KAAK6Y,eACN,6BAAM,6BACL7Y,KAAK8Y,SACN,kC,GA7YkB3c,aA8aXH,gBARS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KAGZoD,YAAarD,EAAMsC,SAASR,UAC5BG,SAAUjC,EAAMsC,SAASL,YAKzB,CAAEa,eAAcuZ,cf1XW,SAACtZ,EAAgBQ,EAAUuZ,GAA3B,OAA0C,SAAA1b,GACrET,IACGwX,KAAK,0CAA4CpV,EAChD,cAAgBQ,GACjBL,MAAK,SAAAC,GAEJ0P,MAAM,eAAiBiK,EAAa,kBACpCpF,OAAOC,SAASC,QAAO,QemXIpU,cAAauZ,YfpYnB,SAACha,EAAgBwX,EAAY+B,EAAWU,EAAUC,GAAlD,OAA2D,SAAA7b,GACpFT,IACG6W,IAAI,mDAAqDzU,EACxD,mBAAqBwX,EAAa,yBAA2B+B,EAAY,IAAMU,EAC/EC,GACD/Z,MAAK,SAAAC,GACJkB,QAAQC,IAAInB,EAAIC,Ye4XPrD,CAGb2a,ICxbIwC,G,kLAEF,IAAMpZ,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAC1CmC,KAAKzD,MAAMwC,aAAagB,EAAUlC,K,qCAKlC,IAAM2U,EAAWxS,KAAKzD,MAAM8V,MAAMC,OAAO7Q,SACzC,GAAsC,IAAjCzB,KAAKzD,MAAM+C,YAAYc,OAAa,CACvC,IAAMgZ,EACJpZ,KAAKzD,MAAM+C,YAAY+Z,MAAK,SAAA5Y,GAAI,OAAIA,EAAKgB,UAAY+Q,KAajD8G,EAAa/J,KAAKgK,UAAUH,GAClC,OACE,6BACGE,M,+BASP,IAAMvZ,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpCmW,EAAY,IAAMjU,EAAW,IAAMlC,EACzC,OACE,yBAAK+D,UAAU,aACb,2CAAiB5B,KAAKzD,MAAM8V,MAAMC,OAAO7Q,UAD3C,WAEU,gCACR,kBAAC,IAAD,CAAMhF,GAAIuX,GACPnW,GAEH,6BAAM,6BACN,mDACA,6BAAM,6BACLmC,KAAKwZ,oB,GAlDYrd,aAsEXH,gBALS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZoD,YAAarD,EAAMsC,SAASR,aAK5B,CAAEgB,gBAFW/C,CAGbmd,I,SCnEIM,I,wDACJ,WAAYld,GAAQ,IAAD,8BACjB,cAAMA,IACDN,MAAQ,GAEb,EAAKyd,QAAU,EAAKA,QAAQxW,KAAb,gBACf,EAAKyW,aAAe,EAAKA,aAAazW,KAAlB,gBACpB,EAAK0W,SAAW,EAAKA,SAAS1W,KAAd,gBANC,E,iEASG,IAAD,OACbnD,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAC1CjB,IACCsC,IAAI,0CAA4Ca,EAAW,gBAC3DZ,MAAK,SAAAC,GACJ,IACMya,EADUza,EAAIC,KACS0B,QAAO,SAAAc,GAAI,MAC9B,QAARA,GAA0B,YAARA,GAAsBA,EAAKgN,SAAShR,MACxDyC,QAAQC,IAAIsZ,GACZA,EAAalZ,KAAI,SAAAuX,GAAO,OAAI,EAAK3b,MAAMud,YAAY/Z,EAAUmY,MAC7D,EAAK3b,MAAMwC,aAAagB,EAAUlC,Q,iCAI3BiV,GACT,IAAIiH,EAAc,GA0BlB,OAzBsB,SAAhBC,EAAiBlH,EAAKmH,GAC1BpZ,OAAOC,KAAKgS,GAAK3R,SAAQ,SAAAgL,GACvB,IAAI+N,EAAM,UAAMD,EAAN,YAAiB9N,GACH,kBAAb2G,EAAI3G,GAEb6N,EAAclH,EAAI3G,GAAM+N,GAExBH,EAAYG,GAAUpH,EAAI3G,MAIhC6N,CAAclH,EAAK,IAOHjS,OAAOC,KAAKiZ,GACpBpZ,KAAI,SAAAK,GACV,IAAMmZ,EAASnZ,EACTkZ,EAASC,EAAOC,OAAO,EAAGD,EAAO/Z,SARzC,SAAoB0S,EAAKqH,EAAQD,GAC/BpH,EAAIoH,GAAUpH,EAAIqH,UACXrH,EAAIqH,GAOXE,CAAUN,EAAaI,EAAQD,MAG1BH,I,gCAGE,IAAD,OACR,GAAgD,IAA3ClZ,OAAOC,KAAKd,KAAKzD,MAAM0B,UAAUmC,OAAa,CAEjD,IAAIoR,EAAM,GACN8I,EAAM,GAkCV,OAjCqBta,KAAKzD,MAAM0B,SAEnBkD,SAAQ,SAAAV,GACnB,IAAMqB,EAAKrB,EAAK8Z,cAEV3Z,EADaC,OAAOC,KAAKL,GAElBM,QAAO,SAAAC,GAAC,MAAS,iBAALA,GAA6B,OAALA,KAEjD,GAAIsZ,EAAIzL,SAAS/M,GAEf0P,EAAIrQ,SAAQ,SAAAqZ,GACV,GAAIA,EAAID,eAAiBzY,EAAI,CAC3B,IAAM2Y,EAAWD,EACjB5Z,EAAMO,SAAQ,SAAAH,GAAC,OAAIyZ,EAASzZ,GAAKP,EAAKO,MACtCwZ,EAAMC,UAGL,CAEL,IAAMC,EAAM,GACZA,EAAG,cAAoB5Y,EACvBlB,EAAMO,SAAQ,SAAAH,GAAC,OAAI0Z,EAAI1Z,GAAKP,EAAKO,MACjCwQ,EAAIjQ,KAAKmZ,GACTJ,EAAI/Y,KAAKO,OAKb0P,EAAI7Q,KAAI,SAAA6Z,GACN,IAAMG,EAAS,EAAKC,WAAWJ,GACzB5J,EAAIY,EAAI6B,QAAQmH,GACtBhJ,EAAIZ,GAAK+J,KAEJnJ,K,qCAKT,IAAMA,EAAMxR,KAAK0Z,UACjB,GAAW,MAAPlI,EACF,OAAOA,EAAI7Q,KAAI,SAAA6Z,GACb,IAAMK,EAAOtL,KAAKgK,UAAUiB,GAC5B,OACE,6BACE,6BACCK,Q,iCAQT,IAAMhd,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAC1C,GAAsC,IAAjCmC,KAAKzD,MAAM+C,YAAYc,OAAa,CACvC,IAAI0a,EAAW,GACf9a,KAAKzD,MAAM+C,YAAYqB,KAAI,SAAAF,GACzBqa,EAASvZ,KAAKd,EAAI,UAGpB,IAAIsa,EAAM,GACVD,EAASna,KAAI,SAAAF,GACKI,OAAOC,KAAKL,GACpBE,KAAI,SAAAwL,GACV,IAAM0O,EAAO1O,EAAI2B,WAAa,KAAOrN,EAAK0L,GAAK2B,WAAa,KAC5DiN,GAAOF,QAIX,IAAMG,EAAUC,SAASC,cAAc,KACjCxM,EAAO,IAAIyM,KAAK,CAACJ,GAAM,CAAC7d,KAAM,eACpC8d,EAAQvG,KAAO2G,IAAIC,gBAAgB3M,GACnCsM,EAAQM,SAAWzd,EAAY,aAC/Bod,SAASM,KAAKC,YAAYR,GAC1BA,EAAQS,QACRnb,QAAQC,IAAImO,M,+BAMd,IAAM3O,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpCmW,EAAY,IAAMjU,EAAW,IAAMlC,EACnC6d,EAAY3b,EAAW,IAAMlC,EAAY,YACzC2T,EAAMxR,KAAK0Z,UACjB,OAAW,MAAPlI,EAEA,6BACE,gEAAsC3T,GADxC,WAEU,gCACR,kBAAC,IAAD,CAAMpB,GAAIuX,GACPnW,GAEH,6BAAM,6BACN,gCACE,kBAAC,WAAD,CAASwB,KAAMmS,EAAKmK,SAAUD,GAA9B,yBAIF,6BAAK,6BACL,4BAAQ1Z,QAAShC,KAAK4Z,UAAtB,mBACC5Z,KAAK2Z,gBAKR,6BACE,gEAAsC9b,GADxC,WAEU,gCACR,kBAAC,IAAD,CAAMpB,GAAIuX,GACPnW,GAEH,6BAAM,6BANR,wD,GAvKoB1B,cA0MbH,gBAPS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZ+B,SAAUhC,EAAMsC,SAASN,SACzBC,SAAUjC,EAAMsC,SAASL,SACzBoB,YAAarD,EAAMsC,SAASR,aAK5B,CAAE0B,cAAaqa,YjB9HU,SAAC9a,EAAgBQ,GAAjB,OAA8B,SAAAnC,GACvDT,IACCsC,IAAI,mDAAqDF,EACxD,IAAMQ,GACPL,MAAK,SAAAC,GACJA,EAAIC,KAAK8B,SAAQ,SAAAuZ,GACfrd,EAAS,CACPH,KNzFqB,gBM0FrBC,QAASud,YiBsHa3b,gBAFf/C,CAGbyd,IC/MImC,G,kDACJ,WAAYrf,GAAQ,IAAD,8BACjB,cAAMA,IACDN,MAAQ,GAIb,EAAKyd,QAAU,EAAKA,QAAQxW,KAAb,gBACf,EAAKyW,aAAe,EAAKA,aAAazW,KAAlB,gBACpB,EAAK0W,SAAW,EAAKA,SAAS1W,KAAd,gBARC,E,iEAYjB,IAAMnD,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UAEpCqa,EAAUra,EAAY,IADXmC,KAAKzD,MAAM8V,MAAMC,OAAO7Q,SAEzCzB,KAAKzD,MAAMgD,WAAWQ,EAAUmY,GAChClY,KAAKzD,MAAMwC,aAAagB,EAAUlC,K,iCAGzBiV,GACT,IAAIiH,EAAc,GA0BlB,OAzBsB,SAAhBC,EAAiBlH,EAAKmH,GAC1BpZ,OAAOC,KAAKgS,GAAK3R,SAAQ,SAAAgL,GACvB,IAAI+N,EAAM,UAAMD,EAAN,YAAiB9N,GACH,kBAAb2G,EAAI3G,GAEb6N,EAAclH,EAAI3G,GAAM+N,GAExBH,EAAYG,GAAUpH,EAAI3G,MAIhC6N,CAAclH,EAAK,IAOHjS,OAAOC,KAAKiZ,GACpBpZ,KAAI,SAAAK,GACV,IAAMmZ,EAASnZ,EACTkZ,EAASC,EAAOC,OAAO,EAAGD,EAAO/Z,SARzC,SAAoB0S,EAAKqH,EAAQD,GAC/BpH,EAAIoH,GAAUpH,EAAIqH,UACXrH,EAAIqH,GAOXE,CAAUN,EAAaI,EAAQD,MAG1BH,I,gCAGE,IAAD,OACR,GAA+C,IAA1ClZ,OAAOC,KAAKd,KAAKzD,MAAMyB,SAASoC,OAAa,CAEhD,IAAIoR,EAAM,GACN8I,EAAM,GACJuB,EAAe7b,KAAKzD,MAAMyB,QAkChC,OAjCAsC,QAAQC,IAAIsb,GACZA,EAAa1a,SAAQ,SAAAV,GACnB,IAAMqB,EAAKrB,EAAK8Z,cAGV3Z,EAFaC,OAAOC,KAAKL,GAGlBM,QAAO,SAAAC,GAAC,MAAS,iBAALA,GAA6B,OAALA,KAEjD,GAAIsZ,EAAIzL,SAAS/M,GAEf0P,EAAIrQ,SAAQ,SAAAqZ,GACV,GAAIA,EAAID,eAAiBzY,EAAI,CAC3B,IAAM2Y,EAAWD,EACjB5Z,EAAMO,SAAQ,SAAAH,GAAC,OAAIyZ,EAASzZ,GAAKP,EAAKO,MACtCwZ,EAAMC,UAGL,CAEL,IAAMC,EAAM,GACZA,EAAG,cAAoB5Y,EACvBlB,EAAMO,SAAQ,SAAAH,GAAC,OAAI0Z,EAAI1Z,GAAKP,EAAKO,MACjCwQ,EAAIjQ,KAAKmZ,GACTJ,EAAI/Y,KAAKO,OAKb0P,EAAI7Q,KAAI,SAAA6Z,GACN,IAAMG,EAAS,EAAKC,WAAWJ,GACzB5J,EAAIY,EAAI6B,QAAQmH,GACtBhJ,EAAIZ,GAAK+J,KAEJnJ,K,qCAKT,IAAMA,EAAMxR,KAAK0Z,UACjB,GAAW,MAAPlI,EACF,OAAOA,EAAI7Q,KAAI,SAAA6Z,GACb,IAAMK,EAAOtL,KAAKgK,UAAUiB,GAC5B,OACE,6BACE,6BACCK,Q,iCAOC,IAAD,OACHpZ,EAAWzB,KAAKzD,MAAM8V,MAAMC,OAAO7Q,SACzC,GAAsC,IAAjCzB,KAAKzD,MAAM+C,YAAYc,OAAa,CACvC,IAGMgT,EAFNpT,KAAKzD,MAAM+C,YACRyB,QAAO,SAAAN,GAAI,OAAIA,EAAI,UAAgB,EAAKlE,MAAM8V,MAAMC,OAAO7Q,YAAU,GAClD,MAElBsZ,EAAM,GACMla,OAAOC,KAAKsS,GACpBzS,KAAI,SAAAwL,GACV,IAAM0O,EAAO1O,EAAI2B,WAAa,KAAOsF,EAAMjH,GAAK2B,WAAa,KAC7DiN,GAAOF,KAGT,IAAMG,EAAUC,SAASC,cAAc,KACjCxM,EAAO,IAAIyM,KAAK,CAACJ,GAAM,CAAC7d,KAAM,eACpC8d,EAAQvG,KAAO2G,IAAIC,gBAAgB3M,GACnCsM,EAAQM,SAAW7Z,EAAW,aAC9BwZ,SAASM,KAAKC,YAAYR,GAC1BA,EAAQS,QACRnb,QAAQC,IAAImO,M,+BAMd,IAAM3O,EAAWC,KAAKzD,MAAM8V,MAAMC,OAAOvS,SACnClC,EAAYmC,KAAKzD,MAAM8V,MAAMC,OAAOzU,UACpC4D,EAAWzB,KAAKzD,MAAM8V,MAAMC,OAAO7Q,SACnCuS,EAAY,IAAMjU,EAAW,IAAMlC,EACnC6d,EAAY3b,EAAW,IAAMlC,EAAY,IAAM4D,EAAW,YAC1D+P,EAAMxR,KAAK0Z,UACjB,OAAW,MAAPlI,GACFlR,QAAQC,IAAIiR,GAEV,6BACE,2CAAiB/P,GADnB,WAEU,gCACR,kBAAC,IAAD,CAAMhF,GAAIuX,GACPnW,GAEH,6BACA,mDAEA,gCACE,kBAAC,WAAD,CAASwB,KAAMmS,EAAKmK,SAAUD,GAA9B,yBAIF,6BAAK,6BACL,4BAAQ1Z,QAAShC,KAAK4Z,UAAtB,mBAAwD,6BAExD,6BACG5Z,KAAK2Z,kBAMV,6BACE,2CAAiB3Z,KAAKzD,MAAM8V,MAAMC,OAAO7Q,UAD3C,WAEU,gCACR,kBAAC,IAAD,CAAMhF,GAAIuX,GACPnW,GAEH,6BAAK,6BANP,wD,GAzKmB1B,aA0MZH,gBANS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZ8B,QAAS/B,EAAMsC,SAASP,QACxBsB,YAAarD,EAAMsC,SAASR,aAK5B,CAAEwB,aAAYR,gBAFD/C,CAGb4f,IC3IaE,G,kDAzEb,WAAYvf,GAAQ,IAAD,8BACjB,cAAMA,IACDN,MAAQ,CACXwF,SAAU,GACVsa,WAAYhZ,OACZiZ,WAAW,EACXC,aAAc,CAAC,SAAU,iBAG3B,EAAK9Y,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKgZ,SAAW,EAAKA,SAAShZ,KAAd,gBAChB,EAAKiZ,SAAW,EAAKA,SAASjZ,KAAd,gBAChB,EAAKkZ,gBAAkB,EAAKA,gBAAgBlZ,KAArB,gBACvB,EAAKmZ,cAAgB,EAAKA,cAAcnZ,KAAnB,gBAbJ,E,qDAgBVM,GACPxD,KAAKyD,SAAL,eAAiBD,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOhD,U,iCAI1CJ,QAAQC,IAAIP,KAAK/D,MAAM8f,YAEvB,IADA,IAAMO,EAAS,GACN1L,EAAI,EAAGA,GAAK5Q,KAAK/D,MAAM8f,WAAYnL,IAC1C0L,EAAO/a,KACL,uCAKJ,OAAO+a,I,wCAIPtc,KAAKyD,SAAS,CAAEuY,WAAW,M,sCAI3B,OACE,qEACuC,6BAAK,6BAC1C,2BAAO9e,KAAK,OAAO2E,KAAK,aAAanB,MAAOV,KAAK/D,MAAM8f,WACrD5Y,SAAUnD,KAAKmD,WAHnB,IAG+B,4BAC7B,4BAAQuK,MAAM,MAAM1L,QAAShC,KAAKoc,iBAAlC,S,iCAMJ,OACE,yBAAKxa,UAAU,aAAf,0BACyB,6BAAK,6BAC5B,2BAAO1E,KAAK,OAAO2E,KAAK,WAAWnB,MAAOV,KAAK/D,MAAMwF,SACnD0B,SAAUnD,KAAKmD,WAHnB,IAG+B,6BAAK,8BAE7BnD,KAAK/D,MAAM+f,WACZ,uBAAMK,cAAN,S,+BAOR,OACE,yBAAKza,UAAU,aACb,kDADF,IAC8B,6BAC3B5B,KAAKkc,WAFR,IAEoB,6BAChBlc,KAAK/D,MAAM+f,WAAa,uBAAMG,SAAN,W,GApEVhgB,aCwBxB,GAAImB,aAAaif,SAAU,CAEzB,IAAM5f,GAAQW,aAAaif,SAC3B7f,EAAaC,IAEb,IAAMM,GAAU6Y,IAAWnZ,IAE3B+B,EAAMrB,SAASL,EAAeC,KAE9B,IAAMuf,GAAcC,KAAKC,MAAQ,IAC7Bzf,GAAQ0f,IAAMH,KAEhB9d,EAAMrB,SAASD,KAEfuW,OAAOC,SAASa,KAAO,WAoCZmI,OAhCf,WACE,OACE,kBAAC,IAAD,CAAUle,MAAOA,GACf,kBAAC,IAAD,CAAYme,SAAS,oBACnB,yBAAKjb,UAAU,OACb,kBAAEkb,GAAF,MACA,6BACA,kBAAE,GAAF,MACA,kBAAE,IAAF,CAAQC,OAAK,EAACC,KAAK,IAAI5gB,UAAWoY,KAClC,kBAAE,IAAF,CAAQuI,OAAK,EAACC,KAAK,YAAY5gB,UAAWsY,KAC1C,kBAAE,IAAF,CAAQqI,OAAK,EAACC,KAAK,SAAS5gB,UAAWqZ,KACvC,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcsH,OAAK,EAACC,KAAK,aAAa5gB,UAAW2Z,KACjD,kBAAC,EAAD,CAAcgH,OAAK,EAACC,KAAK,wBACvB5gB,UAAWua,KACb,kBAAC,EAAD,CAAcoG,OAAK,EAACC,KAAK,oCACvB5gB,UAAWiV,IACb,kBAAC,EAAD,CAAc0L,OAAK,EAACC,KAAK,gCACvB5gB,UAAW0f,KACb,kBAAC,EAAD,CAAciB,OAAK,EAACC,KAAK,0CACvB5gB,UAAW+c,KACb,kBAAC,EAAD,CAAc4D,OAAK,EAACC,KAAK,8CACvB5gB,UAAWqd,KACb,kBAAC,EAAD,CAAcsD,OAAK,EAACC,KAAK,uDACvB5gB,UAAWwf,UC3DLhP,QACW,cAA7B+G,OAAOC,SAASqJ,UAEe,UAA7BtJ,OAAOC,SAASqJ,UAEhBtJ,OAAOC,SAASqJ,SAAS5K,MACvB,2DCZN6K,IAAS5gB,OACP,kBAAC,IAAM6gB,WAAP,KACE,kBAAC,GAAD,OAEFlC,SAASmC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpe,MAAK,SAAAqe,GACJA,EAAaC,gBAEd3J,OAAM,SAAAC,GACLzT,QAAQyT,MAAMA,EAAM2J,a","file":"static/js/main.3e5b81d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \r\n// if the user is already logged in \r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","// types are how actions communicate with reducers\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\r\nexport const GET_DB_INFO = \"GET_DB_INFO\";\r\n// we need to merge the following two items into one\r\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\r\nexport const GET_STUDY_INFO_RANDOMIZE = \"GET_STUDY_INFO_RANDOMIZE\";\r\nexport const GET_COL_DATA = \"GET_COL_DATA\";\r\nexport const GET_COLS_DATA = \"GET_COLS_DATA\";\r\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";\r\n\r\nexport const STORE_FILENAME = \"STORE_FILENAME\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const SEND_FILE = \"SEND_FILE\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\"); \r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default: return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: return action.payload;\r\n        default: return state;\r\n    }\r\n}","import {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COLS_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  studyName: '',\r\n  dbInfo: [],\r\n  studyInfo: [],\r\n  colData: [],\r\n  colsData: [],\r\n  colNames: [],\r\n  // files: []\r\n  fileName: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_STUDY_NAME:\r\n      return {\r\n        ...state,\r\n        studyName: action.payload\r\n      };\r\n    case GET_DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_STUDY_INFO:\r\n      return {\r\n        ...state,\r\n        studyInfo: action.payload\r\n      };\r\n    case GET_COL_DATA:\r\n      return {\r\n        ...state,\r\n        colData: action.payload\r\n      };\r\n    case GET_COLS_DATA:\r\n      return {\r\n        ...state,\r\n        colsData: [...state.colsData, action.payload]\r\n      };\r\n    case GET_COL_NAMES:\r\n      return {\r\n        ...state,\r\n        colNames: action.payload\r\n      };\r\n    // case STORE_FILE:\r\n    //   return {\r\n    //     ...state,\r\n    //     files: [...state.files, action.payload]\r\n    //   };\r\n    case STORE_FILENAME:\r\n      return {\r\n        ...state,\r\n        fileName: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport dataReducer from \"./dataReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  dataFlow: dataReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\nimport {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_STUDY_INFO_RANDOMIZE,\r\n  GET_COL_DATA,\r\n  GET_COLS_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME,\r\n  SEND_FILE\r\n} from \"./types\";\r\n\r\nexport const addStudyName = (which_database, study_name) => dispatch => {\r\n  const dataToPost = {\r\n    studyName: study_name,\r\n    experiments: []\r\n  };\r\n  // note that the goal of the following step is to show researchers \r\n  // the name of the study they have just created. This is totally doable\r\n  // via a simple this.state written in Dashboard. However, putting it here\r\n  // just makes things more organized and fits well with the rest of the \r\n  // redux structure I have used to create this demo\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\r\n      dataToPost)\r\n    .then(entry => {\r\n      // console.log(entry);\r\n      dispatch({\r\n        type: ADD_STUDY_NAME,\r\n        payload: entry.data.studyName\r\n      });\r\n      alert(\"Study [\" + study_name + \"] is created.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getDBInfo = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_DB_INFO,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      '/info/studyName-' + which_study)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_STUDY_INFO,\r\n        payload: res.data.experiments\r\n      });\r\n    })\r\n}\r\n\r\nexport const saveAddInfo = (which_database, study_name, expt_name, infoType, info) => dispatch => {\r\n  axios\r\n    .put('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      '/info/studyName-' + study_name + '/experiments/exptName-' + expt_name + '/' + infoType,\r\n      info)\r\n    .then(res => {\r\n      console.log(res.data);\r\n    })\r\n} \r\n\r\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\r\n      \"/createCol/\" + col_name)\r\n    .then(res => {\r\n      // we can potentially improve the alert box\r\n      alert(\"Experiment [\" + which_expt + \"] is deployed.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getColData = (which_database, col_name) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      \"/\" + col_name)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_DATA,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getColsData = (which_database, col_name) => dispatch => {\r\n  axios\r\n  .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n    \"/\" + col_name)\r\n  .then(res => {\r\n    res.data.forEach(doc => {\r\n      dispatch({\r\n        type: GET_COLS_DATA,\r\n        payload: doc\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport const getColNames = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_NAMES,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const storeFileName = (fileName) => dispatch => {\r\n  dispatch({\r\n    type: STORE_FILENAME,\r\n    payload: fileName\r\n  })\r\n}\r\n\r\nexport const sendFile = (which_database, file) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      \"/itemData\", file)\r\n    .then(res => {\r\n      console.log(\"Data sent to DB\");\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass TabBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectRef = React.createRef();\r\n    this.importQRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // username and studyName are passed from TabList.jsx\r\n    const username = this.props.username;\r\n    const studyName = this.props.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n  }\r\n\r\n  mapQTypetoQKey(qType) {\r\n    switch(qType) {\r\n      case \"slider\":\r\n        return \"slider-question-key\"\r\n      case \"static-text\":\r\n        return \"static-text-key\"\r\n      case \"normal-curve\":\r\n        return \"normal-curve-question-key\"\r\n      case \"threshold\":\r\n        return \"threshold-key\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n\r\n  // ###TODO###: add options here when you add your experiment type\r\n  render() {\r\n    var allGroups;\r\n    // this object contains the mapping from questions to their experiment\r\n    var qSelectedToExptname = {};\r\n    if (!this.props.experiments.length == 0) {\r\n      const allExpts = this.props.experiments;\r\n      console.log(allExpts);\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      // per experiment\r\n      // input: item represents a JSON object containing the configuration data\r\n      //        of a specific experiment \r\n      const renderGroup = item => {\r\n        const qKeys = Object.keys(item).filter(\r\n          k => k.charAt(0) == \"q\");\r\n        // qArr contains all csvColNames of all questions in an experiment\r\n        var qArr = [];\r\n        qKeys.forEach(k => {\r\n          const question = item[k]; \r\n          const qKey = this.mapQTypetoQKey(question[\"Type\"]);\r\n          const csvColName = question[qKey];\r\n          qArr.push(csvColName);\r\n        })\r\n        // qArr.shift();\r\n        qArr.map(q => qSelectedToExptname[q] = item.exptName);\r\n        const qOptions = qArr.map(renderOption);\r\n        return (\r\n          <optgroup label={item.exptName}>\r\n            {qOptions}\r\n          </optgroup>\r\n        )\r\n      }\r\n      allGroups = allExpts.map(renderGroup);\r\n    }\r\n\r\n    return (\r\n      <div className=\"unit\">\r\n        <span>Choose what element to add next</span><br />\r\n        <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\r\n          {/* <option value=\"slider\">Slider</option> */}\r\n          <option value=\"static-text\">Static Text</option>\r\n          <option value=\"normal-curve\">Normal Curve</option>\r\n          <option value=\"threshold\">Threshold</option>\r\n        </select>\r\n        <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\r\n        <br/><br/>\r\n        OR\r\n        <br/><br/>\r\n        {\r\n          this.props.experiments.length == 0 \r\n          ? \r\n          <div>\r\n            Cannot import question from another experiment because there are no \r\n            experiments in this study yet.\r\n          </div>\r\n          :\r\n          <div>\r\n            <span>Import a question from another experiment in this study</span><br/>\r\n            <select name=\"importQue\" id=\"importQue\" ref={this.importQRef}>\r\n              {allGroups}\r\n            </select>\r\n            <button onClick={() => \r\n              this.props.importQuestion(\r\n                qSelectedToExptname[this.importQRef.current.value], \r\n                this.importQRef.current.value)}>\r\n              +\r\n            </button>\r\n          </div>\r\n        }\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nTabBuilder.propTypes = {\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  experiments: state.dataFlow.studyInfo\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(TabBuilder);","import React, { Component } from 'react';\r\nimport './SliderTab.css';\r\n\r\nclass SliderTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sliderRef = React.createRef();\r\n    this.outputRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.state = { min: 1, max: 100 }\r\n    this.keyRef = React.createRef();\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.imported) {\r\n      this.handleChange(\"Question\", this.props.defaultQ, this.props.count);\r\n      this.handleChange(\"lowRange\", this.props.defaultMin, this.props.count);\r\n      this.handleChange(\"highRange\", this.props.defaultMax, this.props.count);\r\n    }\r\n  }\r\n\r\n  appendToKeysArr(objType, nameType, csvColName, count) {\r\n    this.props.appendToKeysArr(objType, nameType, csvColName, count);\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    return (\r\n      <form className=\"unit\">\r\n        <br/>\r\n        Question #{qNum} \r\n        <br/><br/>\r\n        <p>Enter your question below:\r\n        <br/>\r\n        <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} \r\n          ref={this.qRef} type=\"text\" defaultValue={this.props.defaultQ}/></p><br/>\r\n        {/* { this.qRef.current.value == null ? this.props.min : this.qRef.current.value } */}\r\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\r\n        {this.state.maxVal} <br/>\r\n        <p>Minimum: \r\n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n          ref={this.minRef} type=\"text\" \r\n          defaultValue={this.props.defaultMin}\r\n          // name=\"minVal\" value={this.state.minVal} onChange={this.onChange}\r\n          /></p><br/>\r\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\r\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n          ref={this.maxRef} type=\"text\" \r\n          defaultValue={this.props.defaultMax}\r\n          // name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}\r\n          /></p>\r\n        <br/><br/>\r\n        What csv column name do you want to assign to this question? <br/>\r\n        <b>Please use letters only, and the name must be unique.</b> <br/>\r\n        Recommedation: include your experiment name, this question number \r\n        ({qNum}), and the question type (slider)\r\n        <br/>\r\n        <input type=\"text\" ref={this.keyRef} \r\n          onInput={() => {\r\n            // this.appendToKeysArr(\r\n            //   \"csvColNames\", \r\n            //   \"slider-question-key\", \r\n            //   this.keyRef.current.value, \r\n            //   this.props.count);\r\n            this.handleChange(\"slider-question-key\", this.keyRef.current.value, this.props.count)\r\n            // this.appendToKeysArr(\r\n            //   \"keyValuePairs\",\r\n              \r\n            // )\r\n          }}/>\r\n        <br/><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderTab;","import React, { Component } from 'react';\r\n\r\nclass StaticText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.qRef = React.createRef();\r\n    this.keyRef = React.createRef();\r\n\r\n    this.state = {\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.imported) {\r\n      this.handleChange(\"Static Text\", this.props.defaultText, this.props.count);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    return (\r\n      <form className=\"unit\">\r\n        <br/>\r\n        Question #{qNum} \r\n        <br/>\r\n        Enter your static text below: <br/>\r\n        <textarea cols=\"60\" rows=\"10\" ref={this.qRef} defaultValue={this.props.defaultText}\r\n          onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\r\n        </textarea>\r\n        <br/><br/>\r\n        What csv column name do you want to assign to this question? <br/>\r\n        <b>Please use letters only, and the name must be unique.</b> <br/>\r\n        Recommedation: include your experiment name, this question number \r\n        ({qNum}), and the question type (staticText)\r\n        <br/>\r\n        <input type=\"text\" ref={this.keyRef} \r\n          onInput={() => this.handleChange(\"static-text-key\", this.keyRef.current.value, this.props.count)}/>\r\n        \r\n        <br/><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StaticText;","import React, { Component } from 'react';\r\nimport './NormalCurve.css';\r\n\r\nclass NormalCurve extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.sliderRef = React.createRef();\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n    this.lengthRef = React.createRef();\r\n    this.startPos1Ref = React.createRef();\r\n    this.startPos2Ref = React.createRef();\r\n    this.graph1keyRef = React.createRef();\r\n    this.graph2keyRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.colNumValRef = React.createRef();\r\n    this.radiusRef = React.createRef();\r\n    this.ticksRef = React.createRef();\r\n    this.checkBoxRef = React.createRef();\r\n    this.questionKeyRef = React.createRef();\r\n    this.legendKey1Ref = React.createRef();\r\n    this.legendKey2Ref = React.createRef();\r\n\r\n    this.dotReturn = this.dotReturn.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.triMouseDown = this.triMouseDown.bind(this);\r\n    this.triDrag = this.triDrag.bind(this);\r\n    this.triUp = this.triUp.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.lengthSubmit = this.lengthSubmit.bind(this);\r\n    this.toggleXVals = this.toggleXVals.bind(this);\r\n    this.alterStartPos1 = this.alterStartPos1.bind(this);\r\n    this.alterStartPos2 = this.alterStartPos2.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    this.establishStateData = this.establishStateData.bind(this);\r\n    this.updateRadius = this.updateRadius.bind(this);\r\n    this.updateTicks = this.updateTicks.bind(this);\r\n    this.checkChange = this.checkChange.bind(this);\r\n\r\n    this.state = this.establishStateData(this.props.data);\r\n  }\r\n\r\n  establishStateData(data) {\r\n    // console.log(\"establishStateData()\", new Date());\r\n    const unitHeight = data[\"max-height\"];\r\n    const circRad = data[\"circle-radius\"];\r\n    const len1 = data[\"len1\"];\r\n    const len2 = data[\"len2\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n\r\n    const colNumInit = data[\"axis-length\"];\r\n    const internalLength = colNumInit * distancing;\r\n    const edgeCol = Math.ceil(Math.max(len1, len2) / 2);\r\n    const edgeLength = Math.max(len1, len2) * distancing;\r\n\r\n    const ceilDist = height - 50;\r\n    const length = edgeLength + internalLength;\r\n    const colNum = Math.ceil(length / distancing);\r\n\r\n    const axisStart = Math.ceil(edgeLength / 2);\r\n    const axisStartCol = edgeCol;\r\n    const axisWidth = length - ((len1 / 2 + 1) * distancing + (len2 / 2 + 1) * distancing - 1);\r\n    const axisEndCol = internalLength / distancing;\r\n    const axisEnd = axisEndCol * distancing;\r\n\r\n    const triCent1 = (0.5 * len1 + 1) * distancing;\r\n    const triCent2 = (0.5 * len2 + 1) * distancing;\r\n    const triCentCol1 = Math.ceil(triCent1 / distancing);\r\n    const triCentCol2 = Math.ceil(triCent2 / distancing);\r\n\r\n    const variance1 = Math.abs(Math.ceil(len1 / 2) - axisStartCol);\r\n    const variance2 = Math.abs(Math.ceil(len2 / 2) - axisStartCol);\r\n\r\n    const startPos1 = data[\"startPos1\"];\r\n    let distancing1 = startPos1 + variance1 - 1;\r\n    let col11 = startPos1;\r\n    let col12 = startPos1 + len1 - 1;\r\n    if (col11 + triCentCol1 < axisStartCol) {\r\n      distancing1 = variance1 - 1;\r\n      col11 = 0;\r\n      col12 = len1 - 1;\r\n    }\r\n    else if (col11 + triCentCol1 > axisStartCol + axisEndCol) {\r\n      distancing1 = variance1 + axisEndCol - 1;\r\n      col11 = axisEndCol;\r\n      col12 = axisEndCol + len1 - 1;\r\n    }\r\n\r\n    let startPos2 = data[\"startPos2\"];\r\n    let distancing2 = startPos2 + variance2 - 1;\r\n    let col21 = startPos2;\r\n    let col22 = startPos2 + len2 - 1;\r\n    if (col21 + triCentCol2 < axisStartCol) {\r\n      distancing2 = variance2 - 1;\r\n      col21 = 0;\r\n      col22 = len2 - 1;\r\n    }\r\n    else if (col21 + triCentCol2 > axisStartCol + axisEndCol) {\r\n      distancing2 = variance2 + axisEndCol - 1;\r\n      col21 = axisEndCol;\r\n      col22 = axisEndCol + len2 - 1;\r\n    }\r\n\r\n    let colNumVal;\r\n    if (\"colNumVal\" in data) {\r\n      colNumVal = this.props.data[\"colNumVal\"];\r\n    }\r\n    else {\r\n      colNumVal = 1;\r\n    }\r\n\r\n    let tickNum;\r\n    let tickDist;\r\n    let rangeVal;\r\n    const axisLength = colNumInit * colNumVal;\r\n    if (\"tickNum\" in data && axisLength % (parseInt(data[\"tickNum\"]) + 1) === 0) {\r\n      tickNum = parseInt(data[\"tickNum\"]);\r\n      tickDist = colNumInit * distancing / (tickNum + 1);\r\n      rangeVal = axisLength / (tickNum + 1);\r\n    }\r\n    else {\r\n      tickNum = 0;\r\n      tickDist = axisLength;\r\n      rangeVal = axisLength;\r\n    }\r\n\r\n    let edgeLim;\r\n    if (\"edgeLim\" in data) {\r\n      edgeLim = data[\"edgeLim\"];\r\n    }\r\n    else {\r\n      edgeLim = true;\r\n    }\r\n\r\n    return {\r\n      axisLength: data[\"axis-length\"],\r\n      startPos1: data[\"startPos1\"],\r\n      startPos2: data[\"startPos2\"],\r\n      x: 0, y: 0, isDown: false,\r\n      rectX: 12.5,\r\n      down: false,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      svgX: 6,\r\n      len1: len1,\r\n      colValHeiS: data[\"colValHeiS\"],\r\n      len2: len2,\r\n      colValHeiS2: data[\"colValHeiS2\"],\r\n      distancing: distancing,\r\n      distancing1 : distancing1 * distancing,\r\n      distancing2: distancing2 * distancing,\r\n      triCent1: triCentCol1 * distancing,\r\n      triCentCol1: triCentCol1,\r\n      triCent2: triCentCol2 * distancing,\r\n      triCentCol2: triCentCol2,\r\n      mousePointerRange: 0,\r\n      triDown: false,\r\n      col11: col11,\r\n      col12: col12,\r\n      col21: col21,\r\n      col22: col22,\r\n      colLim1: Math.round((length - (len1 * distancing)) / distancing),\r\n      colLim2: Math.round((length - (len2 * distancing)) / distancing),\r\n      overlapVals: data[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist,\r\n      axisStart: axisStart,\r\n      axisStartCol: axisStartCol,\r\n      axisWidth: axisWidth,\r\n      axisEnd: axisEnd,\r\n      axisEndCol: axisEndCol,\r\n      edgeCol: edgeCol,\r\n      edgeLength: edgeLength,\r\n      colNum: colNumInit,\r\n      variance1: variance1,\r\n      variance2: variance2,\r\n      lowVal: this.props.data[\"lowVal\"],\r\n      showCoors: true,\r\n      colNumVal: colNumVal,\r\n      tickNum: tickNum,\r\n      tickDist: tickDist,\r\n      rangeVal: rangeVal,\r\n      edgeLim: edgeLim\r\n    };\r\n  }\r\n\r\n  dotReturn(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing1 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"DarkCyan\" fill=\"DarkCyan\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  dotReturn2(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing2 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"Crimson\" fill=\"Crimson\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  svgColReturn(e, dragger) {\r\n    let distFromCent;\r\n    let variance;\r\n    if (dragger === 1) {\r\n      distFromCent = this.state.triCentCol1;\r\n      variance = this.state.variance1;\r\n    }\r\n    else if (dragger === 2) {\r\n      distFromCent = this.state.triCentCol2;\r\n      variance = this.state.variance2;\r\n    }\r\n    var svg = this.svgRef.current;\r\n    var pt = svg.createSVGPoint();\r\n    pt.x = e.clientX;\r\n    var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    e.preventDefault();\r\n    var x = svgP.x - distFromCent + this.state.mousePointerRange;\r\n    var col = Math.round((x - this.state.axisStart) / this.state.distancing) + variance;\r\n    var colRelative = Math.round((x - this.state.axisStart) / this.state.distancing) + 1;\r\n    // console.log(col, colRelative, variance);\r\n    return [col, colRelative];\r\n  }\r\n\r\n  svgColPlacement(col, colRelative, dragger) {\r\n    // console.log(col);\r\n    // console.log(this.state.axisStartCol);\r\n    // console.log(this.state.axisStart);\r\n    if (this.state.edgeLim) {\r\n      if (dragger === 2) {\r\n        const variance = this.state.axisStartCol - this.state.variance2;\r\n        if (col < this.state.axisStartCol - 1) {\r\n          // console.log(\"edge\");\r\n          this.setState({ distancing2: (this.state.axisStartCol - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n        }\r\n        else if (col + this.state.len2 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          const endCol = this.state.axisEndCol - this.state.len2;\r\n          this.setState({ distancing2: this.state.distancing * (this.state.axisStartCol + endCol - 1), col21: endCol, col22: endCol + this.state.len2 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative - variance, col22: colRelative - variance + this.state.len2 - 1 });\r\n        }\r\n        this.curveArea();\r\n      }\r\n      else if (dragger === 1) {\r\n        const variance = this.state.axisStartCol - this.state.variance1;\r\n        if (col < this.state.axisStartCol - 1) {\r\n          this.setState({ distancing1: (this.state.axisStartCol - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n        }\r\n        else if (col + this.state.len1 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          const endCol = this.state.axisEndCol - this.state.len1;\r\n          this.setState({ distancing1: this.state.distancing * (this.state.axisStartCol + endCol - 1), col11: endCol, col12: endCol + this.state.len1 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative - variance, col12: colRelative - variance + this.state.len1 - 1 });\r\n        }\r\n        this.curveArea();\r\n        // this.setState({ distancing2 : x })\r\n      }\r\n    }\r\n    else {\r\n      if (dragger === 2) {\r\n        if (col + this.state.triCentCol2 < this.state.axisStartCol) {\r\n          this.setState({ distancing2: (this.state.variance2 - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n        }\r\n        else if (col + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          this.setState({ distancing2: this.state.distancing * (this.state.variance2 + this.state.axisEndCol - 1), col21: this.state.axisEndCol, col22: this.state.axisEndCol + this.state.len2 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative, col22: colRelative + this.state.len2 - 1 });\r\n        }\r\n        this.curveArea();\r\n      }\r\n      else if (dragger === 1) {\r\n        if (col + this.state.triCentCol1 < this.state.axisStartCol) {\r\n          this.setState({ distancing1: (this.state.variance1 - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n        }\r\n        else if (col + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n          this.setState({ distancing1: this.state.distancing * (this.state.variance1 + this.state.axisEndCol - 1), col11: this.state.axisEndCol, col12: this.state.axisEndCol + this.state.len1 - 1 })\r\n        }\r\n        else {\r\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative, col12: colRelative + this.state.len1 - 1 });\r\n        }\r\n        this.curveArea();\r\n        // this.setState({ distancing2 : x })\r\n      }\r\n    }\r\n  }\r\n\r\n  triMouseDown(e, num) {\r\n    if (e.type === \"mousedown\") {\r\n      // console.log(\"MOUSEDOWN\");\r\n      e.preventDefault();\r\n      var svgPre = this.svgRef.current;\r\n      // Set mousePointerRange so that we know the distance\r\n      // from the mouse tip to the x-value of the triangle\r\n      // tip\r\n      var ptPre = svgPre.createSVGPoint();\r\n      ptPre.x = e.clientX;\r\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n      if (num === 1) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\r\n        }));\r\n      }\r\n      else if (num === 2) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\r\n        }));\r\n      }\r\n      // console.log(this.state);\r\n    }\r\n  }\r\n\r\n  triDrag(e) {\r\n      e.preventDefault();\r\n      var dragger = this.state.triDown;\r\n      var cols = this.svgColReturn(e, dragger);\r\n      var col = cols[0];\r\n      var colRelative = cols[1]\r\n      // console.log(col);\r\n      this.svgColPlacement(col, colRelative, dragger);\r\n      this.curveArea();\r\n  }\r\n\r\n  triUp(e) {\r\n    // console.log(\"UP\");\r\n    if (this.state.triDown) {\r\n      this.setState({ triDown: false });\r\n    }\r\n  }\r\n\r\n  curveArea() {\r\n    let col11;\r\n    let col12;\r\n    let col21;\r\n    let col22;\r\n\r\n    if (this.state.edgeLim) {\r\n      col11 = this.state.col11;\r\n      col12 = this.state.col12;\r\n      col21 = this.state.col21;\r\n      col22 = this.state.col22;\r\n    }\r\n    else {\r\n      col11 = this.state.col11 + this.state.variance1;\r\n      col12 = this.state.col12 + this.state.variance1;\r\n      col21 = this.state.col21 + this.state.variance2;\r\n      col22 = this.state.col22 + this.state.variance2;\r\n    }\r\n\r\n    if (col11 > col22 || col12 < col21) {\r\n      this.areaRef.current.innerHTML = 0;\r\n    }\r\n    else {\r\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\r\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(col22 - col11)];\r\n    }\r\n  }\r\n  \r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    this.props.changeJSON(key, value);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.data[\"edgeLim\"]);\r\n    // importing component, save imported data\r\n    if (this.props.imported) {\r\n      this.handleChange(\"Question\", this.props.qToDisplay[\"Question\"], this.props.count);\r\n      this.handleChange(\"graph1key\", this.props.qToDisplay[\"graph1key\"], this.props.count);\r\n      this.handleChange(\"grpah2key\", this.props.qToDisplay[\"graph2key\"], this.props.count);\r\n    }\r\n  }\r\n\r\n  lengthSubmit(newLength) {\r\n    var newLength = this.lengthRef.current.value;\r\n    const internalLength = newLength * this.state.distancing;\r\n    const length = this.state.edgeLength + internalLength;\r\n\r\n    const axisEndCol = internalLength / this.state.distancing;\r\n    const axisEnd = axisEndCol * this.state.distancing;\r\n    console.log(axisEndCol);\r\n\r\n    this.changeJSON(\"axis-length\", newLength);\r\n\r\n    this.setState({\r\n      colNum: newLength,\r\n      svgWidth: length,\r\n      axisEndCol: axisEndCol,\r\n      axisEnd: axisEnd\r\n    });\r\n  }\r\n\r\n  toggleXVals() {\r\n    this.setState(prevState => {\r\n      return {\r\n        showCoors: !prevState.showCoors\r\n      }\r\n    })\r\n  }\r\n\r\n  alterStartPos1(newPos) {\r\n    let startPos1 = parseInt(this.startPos1Ref.current.value) + this.state.variance1 - 1;\r\n    let col11 = startPos1 - this.state.variance1 + 1;\r\n    let col12 = col11 + this.state.len1 - 1;\r\n    if (startPos1 + this.state.triCentCol1 < this.state.axisStartCol) {\r\n      startPos1 = this.state.variance1 - 1;\r\n      col11 = 0;\r\n      col12 = this.state.len1 - 1;\r\n    }\r\n    else if (startPos1 + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos1 = this.state.variance1 + this.state.axisEndCol - 1;\r\n      col11 = this.state.axisEndCol;\r\n      col12 = this.state.axisEndCol + this.state.len1 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos1\", newPos);\r\n\r\n    this.setState({\r\n      distancing1: startPos1 * this.state.distancing,\r\n      col11: col11,\r\n      col12: col12\r\n    });\r\n  }\r\n\r\n  alterStartPos2(newPos) {\r\n    let startPos2 = parseInt(this.startPos2Ref.current.value) + this.state.variance2 - 1;\r\n    let col21 = startPos2 - this.state.variance2 + 1;\r\n    let col22 = col21 + this.state.len2 - 1;\r\n    if (startPos2 + this.state.triCentCol2 < this.state.axisStartCol) {\r\n      startPos2 = this.state.variance2 - 1;\r\n      col21 = 0;\r\n      col22 = this.state.len2 - 1;\r\n    }\r\n    else if (startPos2 + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos2 = this.state.variance2 + this.state.axisEndCol - 1;\r\n      col21 = this.state.axisEndCol;\r\n      col22 = this.state.axisEndCol + this.state.len2 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos2\", newPos);\r\n\r\n    this.setState({\r\n      distancing2: startPos2 * this.state.distancing,\r\n      col21: col21,\r\n      col22: col22\r\n    });\r\n  }\r\n  \r\n  updateRadius(radius) {\r\n    // console.log(\"updateRadius\", radius);\r\n    this.changeJSON(\"circle-radius\", parseInt(radius));\r\n    let newData = this.props.data;\r\n    newData[\"circle-radius\"] = parseInt(radius);\r\n    this.setState(this.establishStateData(newData));\r\n  }\r\n\r\n  updateTicks(newTickCount) {\r\n    this.changeJSON(\"tickNum\", parseInt(newTickCount));\r\n    let newData = this.props.data;\r\n    newData[\"tickNum\"] = parseInt(newTickCount);\r\n    this.setState(this.establishStateData(newData));\r\n  }\r\n\r\n  updateColVal(colVal) {\r\n    this.changeJSON(\"colNumVal\", colVal);\r\n    this.setState({ colNumVal : colVal });\r\n  }\r\n\r\n  checkChange() {\r\n    this.setState(prevState => {\r\n      this.changeJSON(\"edgeLim\", !Boolean(prevState.edgeLim));\r\n      return {\r\n        edgeLim: Number(!Boolean(prevState.edgeLim))\r\n      }\r\n    })\r\n    console.log(this.state.edgeLim);\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n\r\n    const defaultVal = (qType) => {\r\n      if (this.props.qToDisplay) {\r\n        return this.props.qToDisplay[qType]\r\n      } else {\r\n        return \"\"\r\n      }}\r\n    \r\n    const defaultCurveVal = (dataType) => {\r\n      if (this.props.qToDisplay) {\r\n        return this.props.qToDisplay[\"FileContent\"][dataType]\r\n      } else {\r\n        return \"\"\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        onMouseMove={e => this.triDrag(e)}\r\n        onMouseUp={e => this.triUp(e)}>\r\n        <svg width={this.state.svgWidth} height={this.state.svgHeight + 10} ref={this.svgRef}>\r\n          {/* <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\"/> */}\r\n          {[...Array(this.state.len1).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS[col]).keys()].map(\r\n                (row) => this.dotReturn(col, row)\r\n              )\r\n          )}\r\n          {[...Array(this.state.len2).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS2[col]).keys()].map(\r\n                (row) => this.dotReturn2(col, row)\r\n              )\r\n          )}\r\n          <rect width={this.state.axisEnd}\r\n            height=\"2\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisEnd + this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          {[...Array(this.state.tickNum).keys()].map(\r\n            (tick) =>\r\n              <rect\r\n                width=\"2\"\r\n                height=\"20\"\r\n                fill=\"black\"\r\n                x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \r\n                y={this.state.ceilDist + 20}\r\n              />\r\n          )}\r\n          {[...Array(this.state.tickNum).keys()].map(\r\n            (tick) =>\r\n            <text \r\n            textAnchor=\"middle\" \r\n            x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \r\n            y={this.state.ceilDist + 55}>\r\n              {this.state.lowVal + (this.state.rangeVal * (tick + 1))}\r\n            </text>\r\n          )}\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent1 + this.state.distancing1 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\r\n          />\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent2 + this.state.distancing2 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\r\n          />\r\n          <text textAnchor=\"middle\" x={this.state.axisStart} y={this.state.ceilDist + 55}>{this.state.lowVal}</text>\r\n          <text textAnchor=\"middle\" x={this.state.axisStart + this.state.axisEnd} y={this.state.ceilDist + 55}>{this.state.lowVal + this.state.colNum * this.state.colNumVal}</text>\r\n                    Sorry, please use a different browser.\r\n                </svg>\r\n        <br />\r\n        {/* Use defaultValue to show imported data */}\r\n        <div class=\"boxed\">\r\n          <div class=\"flex-container\">\r\n            <div class=\"flex-child-one\">\r\n              Question: <br/>\r\n              <textarea class=\"normal-curve-text\" cols=\"60\" rows=\"11\" \r\n                  ref={this.qRef} \r\n                  defaultValue={defaultVal(\"Question\")}\r\n                onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n              </textarea>\r\n\r\n              <br/><br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.graph1keyRef} \r\n                defaultValue={defaultVal(\"graph1key\")}\r\n                onInput={() => this.handleChange(\"graph1key\", this.graph1keyRef.current.value, this.props.count)}></input>\r\n              <br />\r\n\r\n              <div class=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.graph2keyRef} \r\n                defaultValue={defaultVal(\"graph2key\")}\r\n                onInput={() => this.handleChange(\"graph2key\", this.graph2keyRef.current.value, this.props.count)}></input>\r\n            </div>\r\n\r\n            <div class=\"flex-child-two\">\r\n              <br/>\r\n              What csv column name do you want to assign to this question?\r\n              <br/>\r\n              <input type=\"text\" ref={this.questionKeyRef} \r\n                onInput={() => this.handleChange(\"normal-curve-question-key\", this.questionKeyRef.current.value, this.props.count)}/>\r\n              <br/>\r\n              <b>Use letters only, and the name must be unique.</b> <br/>\r\n              Recommedation: include your experiment name, this question number \r\n              ({qNum}), and the question type (normalCurve)\r\n\r\n              <br/><br/>\r\n              Please enter the csv column names for the graph key: <br/>\r\n              (the same rule applies) <br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.legendKey1Ref}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key1\", this.legendKey1Ref.current.value, this.props.count)}></input>\r\n              \r\n              <br/>\r\n              <div class=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\r\n              <input type=\"text\" \r\n                ref={this.legendKey2Ref}\r\n                onInput={() => this.handleChange(\"normal-curve-legend-key2\", this.legendKey2Ref.current.value, this.props.count)}></input>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-child-three\">\r\n            <span>Enter the width of the graph (each point in the curves is \r\n              equivalent to 1 unit of width) </span>\r\n            <input ref={this.lengthRef} type=\"text\" \r\n              defaultValue={defaultCurveVal(\"axis-length\")}\r\n              // name=\"axisLength\" value={this.state.axisLength} \r\n              // onChange={this.onChange}\r\n              />\r\n            <button onClick={() => {this.lengthSubmit(this.lengthRef.current.value)}}>\r\n              Change Width\r\n            </button>\r\n            <br/>\r\n\r\n            <span>Enter your preferred value for the width of each unit in the curve</span>\r\n            <input type=\"text\" ref={this.colNumValRef}\r\n              defaultValue={defaultCurveVal(\"colNumVal\")}></input>\r\n            <button onClick={() => this.updateColVal(this.colNumValRef.current.value)}>Change Unit Value</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred value for the radius of each unit in the curve (2 - 5, inclusive)</span>\r\n            <input type=\"text\" ref={this.radiusRef}\r\n              defaultValue={defaultCurveVal(\"circle-radius\")}></input>\r\n            <button onClick={() => this.updateRadius(this.radiusRef.current.value)}>Change Radius</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred number of ticks on the graph (equal parts must be divisible by x-axis width)</span>\r\n            <input type=\"text\" ref={this.ticksRef}\r\n              defaultValue={defaultCurveVal(\"tickNum\")}></input>\r\n            <button onClick={() => this.updateTicks(this.ticksRef.current.value)}>Change Tick Count</button>\r\n            <br />\r\n\r\n            <span>Enter your preferred starting position for curve 1, \r\n              if you want to change it </span>\r\n            <input ref={this.startPos1Ref} type=\"text\" \r\n              // name=\"startPos1\" value={this.state.startPos1} onChange={this.onChange}\r\n              defaultValue={defaultCurveVal(\"startPos1\")}></input>\r\n            <button onClick={() => this.alterStartPos1(this.state.startPos1)}>\r\n              Change Curve 1\r\n            </button>\r\n            <br/>\r\n\r\n            <span>Enter your preferred starting position for curve 2, \r\n              if you want to change it </span>\r\n            <input ref={this.startPos2Ref} type=\"text\" \r\n              // name=\"startPos2\" value={this.state.startPos2} onChange={this.onChange}\r\n              defaultValue={defaultCurveVal(\"startPos2\")}></input>\r\n            <button onClick={() => this.alterStartPos2(this.state.startPos2)}>\r\n              Change Curve 2\r\n            </button>\r\n            <br />\r\n\r\n            { \r\n              this.props.data[\"edgeLim\"].toString() == \"1\"\r\n              ? \r\n              <div>\r\n                <input \r\n                  type=\"checkbox\" \r\n                  id=\"vehicle1\" \r\n                  name=\"vehicle1\" \r\n                  value=\"Bike\" \r\n                  ref={this.checkBoxRef}\r\n                  onChange={this.checkChange} checked/>\r\n                <label for=\"vehicle1\">Turn edge limiting on/off</label>\r\n              </div>\r\n              : \r\n              <div>\r\n                <input \r\n                  type=\"checkbox\" \r\n                  id=\"vehicle1\" \r\n                  name=\"vehicle1\" \r\n                  value=\"Bike\" \r\n                  ref={this.checkBoxRef}\r\n                  onChange={this.checkChange} />\r\n                <label for=\"vehicle1\">Turn edge limiting on/off</label>\r\n              </div>\r\n            }\r\n\r\n            \r\n          </div>\r\n        </div>\r\n        <br />\r\n        <h4>Area Under Curve: <span ref={this.areaRef}></span> | First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h4>\r\n        {/* <h1>{this.props.data[\"startPos1\"]} | {this.props.data[\"startPos2\"]}</h1> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NormalCurve;","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport NormalCurve from './NormalCurve';\r\nimport './NormalCurve.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass NormalCurveResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.changeJSON = this.changeJSON.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileNames: [],\r\n      setFileNames: [],\r\n      fileChosen: '',\r\n      key: this.props.key\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // importing component\r\n    if (this.props.imported) {\r\n      this.handleChange(\"FileName\", this.props.qToDisplay[\"FileName\"], this.props.count);\r\n      this.handleChange(\"FileContent\", this.props.qToDisplay[\"FileContent\"], this.props.count);\r\n    }\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"normal-curve\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n\r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n            if (this.props.files.length == 0) {\r\n              this.saveFile(\"normal-curve\", file.name, jsonData);\r\n            } else {\r\n              const names = this.props.files.map(item => item.fileName);\r\n              if (!names.includes(file.name)) {\r\n                this.saveFile(\"normal-curve\", file.name, jsonData);\r\n              }\r\n            }\r\n\r\n            const unitHeight = jsonData[\"max-height\"];\r\n            const circRad = jsonData[\"circle-radius\"];\r\n            const distancing = circRad * 4 - 1;\r\n            const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n            const ceilDist = height - 50;\r\n            const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n            const colNum = Math.round(length / distancing);\r\n            this.setState({\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData, \r\n              svgWidth: length,\r\n              svgHeight: height,\r\n              distancing: distancing,\r\n              dataReceived: true,\r\n              len1: jsonData[\"len1\"],\r\n              colValHeiS: jsonData[\"colValHeiS\"],\r\n              len2: jsonData[\"len2\"],\r\n              colValHeiS2: jsonData[\"colValHeiS2\"],\r\n              distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n              distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n              triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n              triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n              col11: jsonData[\"len2\"] + 1,\r\n              col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n              col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n              col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n              colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n              colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n              overlapVals: jsonData[\"overlapVals\"],\r\n              circRad: circRad,\r\n              ceilDist: ceilDist\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    const unitHeight = jsonData[\"max-height\"];\r\n    const circRad = jsonData[\"circle-radius\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n    const ceilDist = height - 50;\r\n    const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n    const colNum = Math.round(length / distancing);\r\n    this.setState({\r\n      dataReceived: true,\r\n      // fileText: fileText,\r\n      jsonData: jsonData,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      distancing: distancing,\r\n      dataReceived: true,\r\n      len1: jsonData[\"len1\"],\r\n      colValHeiS: jsonData[\"colValHeiS\"],\r\n      len2: jsonData[\"len2\"],\r\n      colValHeiS2: jsonData[\"colValHeiS2\"],\r\n      distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n      distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n      triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n      triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n      col11: jsonData[\"len2\"] + 1,\r\n      col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n      col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n      col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n      colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n      colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n      overlapVals: jsonData[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist\r\n    })\r\n  }  \r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    var data = this.state.jsonData;\r\n    data[key] = Number(value);\r\n    this.handleChange(\"FileContent\", data, this.props.count);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <NormalCurve \r\n            data={this.state.jsonData} count={this.props.count}\r\n            changeJSON={this.changeJSON} \r\n            handleChange={this.handleChange} />\r\n          <br/>\r\n        </div>\r\n      )\r\n    // importing component\r\n    } else if (this.props.imported) {\r\n      return (\r\n        <div>\r\n          <NormalCurve \r\n            imported={true}\r\n            data={this.props.qToDisplay[\"FileContent\"]} \r\n            qToDisplay={this.props.qToDisplay}\r\n            count={this.props.count}\r\n            changeJSON={this.changeJSON} \r\n            handleChange={this.handleChange} />\r\n        </div>\r\n      )\r\n    } else {\r\n      const normalCurveFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"normal-curve\");\r\n      var fileNames = normalCurveFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nNormalCurveResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(NormalCurveResearch);","import React, { Component } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nimport './HistSlider.css';\r\n\r\nclass Histogram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.sliderRef = React.createRef();\r\n    this.graphRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.questionKeyRef = React.createRef();\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number,\r\n      sliderPos: Number\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawChart();\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  drawChart() {\r\n    const data = this.props.data;\r\n\r\n    const svg = d3.select(this.graphRef.current).append(\"svg\")\r\n      .attr(\"width\", this.props.width)\r\n      .attr(\"height\", this.props.height)\r\n\r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * this.props.width / data.length)\r\n      .attr(\"y\", (d, i) => this.props.height - 10 * d)\r\n      .attr(\"width\", this.props.width / data.length - 10)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"#4CAF50\")\r\n      .attr(\"opacity\", 0.5)\r\n\r\n    svg.selectAll(\"text\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text((d) => d)\r\n      .attr(\"x\", (d, i) => i * this.props.width / data.length)\r\n      .attr(\"y\", (d, i) => this.props.height - (10 * d) - 3)\r\n  }\r\n\r\n  render() {\r\n    const qNum = this.props.count + 1;\r\n    const vertAlign = this.props.height / 2;\r\n    // const step_size = this.props.width / this.props.data.length;\r\n    return (\r\n      <div>\r\n        <div ref={this.graphRef}\r\n          style={{ \r\n            position: \"relative\", \r\n            width: this.props.width, \r\n            margin: \"auto\" }}>\r\n          <div \r\n            style={{ \r\n              position: \"absolute\",\r\n              top: vertAlign}}>\r\n            <input type=\"range\" min={this.state.minVal} max={this.state.maxVal} \r\n              className=\"hist-slider\" onChange={this.onChange}\r\n              name=\"sliderPos\" value={this.state.sliderPos}\r\n              step={this.props.step} ref={this.sliderRef}\r\n              style={{ width: this.props.width }}/>\r\n          </div>\r\n        </div>\r\n        {this.state.minVal}\r\n        <input type=\"range\" class=\"dummy-slider\" \r\n          style={{ width: this.props.width }} onChange={this.onChange}\r\n          name=\"sliderPos\" value={this.state.sliderPos} step={this.props.step}\r\n          min={this.state.minVal} max={this.state.maxVal} />\r\n        {this.state.maxVal}\r\n        \r\n        <br/><br/>\r\n        <div className=\"boxed\">\r\n          Question #{qNum} <br/>\r\n          <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \r\n            onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n          </textarea>\r\n\r\n          <br/>\r\n          <p>Minimum: \r\n            <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n            ref={this.minRef} type=\"text\" \r\n            name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p>\r\n          \r\n          <br/>\r\n          <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n            ref={this.maxRef} type=\"text\" \r\n            name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p>\r\n\r\n          <br/><br/>\r\n          What csv column name do you want to assign to this question? <br/>\r\n          <b>Please use letters only, and the name must be unique.</b> <br/>\r\n          Recommedation: include your experiment name, this question number \r\n          ({qNum}), and the question type (threshold)\r\n          <br/>\r\n          <input type=\"text\" ref={this.questionKeyRef} \r\n            onInput={() => this.handleChange(\"threshold-key\", this.questionKeyRef.current.value, this.props.count)}/>\r\n          \r\n          <br/><br/>\r\n          <button onClick={this.delete.bind(this)}>Delete Question</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Histogram;","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport Histogram from './Histogram.js';\r\nimport './HistogramResearch.css';\r\nimport '../../../../src/App.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass HistogramResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileChosen: ''\r\n    }\r\n\r\n    this.delete = this.delete.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(e.target.name);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"threshold\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n  \r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n              if (this.props.files.length == 0) {\r\n                this.saveFile(\"threshold\", file.name, jsonData);\r\n              } else {\r\n                const names = this.props.files.map(item => item.fileName);\r\n                if (!names.includes(file.name)) {\r\n                  this.saveFile(\"threshold\", file.name, jsonData);\r\n                }\r\n              }\r\n  \r\n            this.setState({\r\n              data: jsonData[\"data\"],\r\n              width: jsonData[\"width\"],\r\n              height: jsonData[\"height\"],\r\n              id: HistogramResearch,\r\n              step: jsonData[\"step\"],\r\n              defaultValue: jsonData[\"defaultValue\"],\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData[\"data\"]\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({\r\n      fileNames: acceptedFiles.map(file => file.name)\r\n    });\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    this.setState({\r\n      data: jsonData[\"data\"],\r\n      width: jsonData[\"width\"],\r\n      height: jsonData[\"height\"],\r\n      id: HistogramResearch,\r\n      step: jsonData[\"step\"],\r\n      defaultValue: jsonData[\"defaultValue\"],\r\n      dataReceived: true,\r\n      jsonData: jsonData[\"data\"]\r\n    });\r\n  }  \r\n\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <Histogram\r\n            data={this.state.data}\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n            step={this.state.step}\r\n            delete={this.delete}\r\n            handleChange={this.handleChange}\r\n            count={this.props.count}\r\n            class=\"center\" />\r\n          <br />\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      const histogramFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"threshold\");\r\n      console.log(histogramFiles);\r\n      var fileNames = histogramFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone> \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nHistogramResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(HistogramResearch);","import React, { Component } from 'react';\r\nimport './TabList.css';\r\nimport '../TabBuilder/TabBuilder'\r\nimport TabBuilder from '../TabBuilder/TabBuilder'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ###TODO###: import your component here\r\nimport SliderTab from '../items/Slider/SliderTab';\r\nimport StaticText from '../items/StaticText/StaticText';\r\nimport NormalCurveResearch from '../items/NormalCurve/NormalCurveResearch';\r\nimport HistogramResearch from '../items/Threshold/HistogramResearch';\r\n\r\nimport { \r\n  sendFile,\r\n  getStudyInfo\r\n} from '../../actions/dataActions'\r\n\r\nconst axios = require('axios');\r\n\r\n// This component allows Psych researchers to configure an experiment \r\nclass TabList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      count: 0,\r\n      output: {},\r\n      deleted: [],\r\n      complete: false,\r\n      exptName: '',\r\n      files: []\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.submitRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n\r\n    this.builderFunction = this.builderFunction.bind(this);\r\n    this.importQuestion = this.importQuestion.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.outputCreate = this.outputCreate.bind(this);\r\n    this.checkOutput = this.checkOutput.bind(this);\r\n\r\n    this.saveFile = this.saveFile.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(username.toString() + ' ' + studyName.toString());\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  builderFunction = (tabDefine) => {\r\n    var arr = this.state.children;\r\n    // ###TODO###: Add more cases here for TabList to display \r\n    //             Follow the format of the provided components below\r\n    switch (tabDefine) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()}\r\n                  appendToKeysArr={this.appendToKeysArr} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      case \"threshold\":\r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <HistogramResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\r\n  }\r\n\r\n  mapQTypetoQKey(qType) {\r\n    switch(qType) {\r\n      case \"slider\":\r\n        return \"slider-question-key\"\r\n      case \"static-text\":\r\n        return \"static-text-key\"\r\n      case \"normal-curve\":\r\n        return \"normal-curve-question-key\"\r\n      case \"threshold\":\r\n        return \"threshold-key\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n\r\n  importQuestion(exptName, questionKey) {\r\n    // questions will show up once an expt type is pushed to this.state.children\r\n    var arr = this.state.children;\r\n\r\n    const thisExpt = this.props.experiments.filter(item => \r\n      item[\"exptName\"] == exptName)[0];\r\n    const thisExptQKeys = Object.keys(thisExpt).filter(k => \r\n      k.charAt(0) == \"q\");\r\n    // the question key (e.g. q1) that user has selected\r\n    const thisQKey = thisExptQKeys.filter(k => {\r\n      const key = this.mapQTypetoQKey(thisExpt[k][\"Type\"]);\r\n      return thisExpt[k][key] == questionKey;\r\n    })[0];\r\n    const questionToDisplay = thisExpt[thisQKey];\r\n    console.log(questionToDisplay);\r\n\r\n    switch (questionToDisplay[\"Type\"]) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab \r\n                  defaultQ={questionToDisplay[\"Question\"]}\r\n                  defaultMin={questionToDisplay[\"lowRange\"]}\r\n                  defaultMax={questionToDisplay[\"highRange\"]}\r\n                  imported={true}\r\n                  getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()}\r\n                  appendToKeysArr={this.appendToKeysArr} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText \r\n                  defaultText={questionToDisplay[\"Static Text\"]}\r\n                  imported={true}\r\n                  getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch \r\n                  qToDisplay={questionToDisplay}\r\n                  imported={true}\r\n                  getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      case \"threshold\":\r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <HistogramResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": questionToDisplay[\"Type\"] };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });    \r\n  }\r\n\r\n  // Input: \r\n  //  key: key of JSON object\r\n  //  value: value of JSON object\r\n  //  count: the numerical order of the JSON object\r\n  // Action: put the key and value pair in the final output JSON object\r\n  handleChange(key, value, count) {\r\n    var curOutput = this.state.output;\r\n    curOutput[count.toString()][key] = value;\r\n    this.setState({ output: curOutput });\r\n  }\r\n\r\n  appendToKeysArr(objType, nameType, csvColName, count) {\r\n    var curOutput = this.state.output;\r\n    const objKeys = Object.keys(curOutput[count.toString()]);\r\n    // console.log(objKeys);\r\n    if (objKeys.includes(objType)) {\r\n      curOutput[count.toString()][objType][nameType] = csvColName;\r\n    } else {\r\n      curOutput[count.toString()][objType] = {};\r\n      curOutput[count.toString()][objType][nameType] = csvColName;\r\n    }\r\n    console.log(curOutput);\r\n    // curOutput[count.toString()][\"csvColNames\"]\r\n  }\r\n\r\n  delete(id) {\r\n    var newDelete = this.state.deleted;\r\n    newDelete.push(id);\r\n    this.setState({ deleted: newDelete });\r\n  }\r\n\r\n  getCount(count) {\r\n    return count;\r\n  }\r\n\r\n  // Action: put newly uploaded files into this.state. \r\n  //         All newly uploaded files will be sent to database as JSON objs\r\n  saveFile(type, name, content) {\r\n    const newFile = {\r\n      \"itemType\": type,\r\n      \"fileName\": name,\r\n      \"fileContent\": content\r\n    };\r\n    this.setState({ files: this.state.files.concat(newFile) });\r\n  }\r\n\r\n  // validating input fields. \r\n  // for now: developers will need to add a case below \r\n  checkOutput(obj) {\r\n    var int = 0;\r\n    var complete = true;\r\n    while ((int.toString()) in obj) {\r\n      var elem = obj[int.toString()];\r\n      switch (elem[\"Type\"]) {\r\n        case \"slider\":\r\n          var lowIs = \"lowRange\" in elem;\r\n          var highIs = \"highRange\" in elem;\r\n          var qIs = \"Question\" in elem;\r\n          if (lowIs && highIs && qIs) {\r\n            var lowNum = !isNaN(elem[\"lowRange\"]);\r\n            var highNum = !isNaN(elem[\"highRange\"]);\r\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\r\n            if (highLow && lowNum && highNum) {\r\n              complete = complete && true;\r\n            }\r\n            else {\r\n              complete = false;\r\n            }\r\n          }\r\n          else {\r\n            complete = false;\r\n          }\r\n          break;\r\n        default:\r\n          complete = false;\r\n      case \"normal-curve\":\r\n        complete = true;\r\n      }\r\n      int++;\r\n    }\r\n    return complete;\r\n  }\r\n\r\n  outputCreate() {\r\n    var obj = {};\r\n    var index = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { \r\n        obj[item.id.toString()] = this.state.output[item.id.toString()];\r\n        const exptItem = this.state.output[item.id.toString()];\r\n        switch (exptItem[\"Type\"]) {\r\n          case \"normal-curve\":\r\n            index[exptItem[\"normal-curve-question-key\"]] = exptItem[\"Question\"];\r\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key1\"]] = exptItem[\"graph1key\"];\r\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key2\"]] = exptItem[\"graph2key\"];\r\n          case \"threshold\":\r\n            index[exptItem[\"threshold-key\"]] = exptItem[\"Question\"];\r\n        }\r\n      });\r\n    var validName = this.nameRef.current.value.length > 0;\r\n    // if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\r\n    // if (!validName) {\r\n    if (false) {\r\n      alert(\"You have not filled out all fields, or have entered an invalid value!\");\r\n    }\r\n    else {\r\n      var finalObj = {};\r\n      finalObj[\"exptName\"] = this.nameRef.current.value;\r\n      var int = 0;\r\n      while (int < this.state.count) {\r\n        if ((int.toString()) in obj) {\r\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n        }\r\n        int++;\r\n      }\r\n      finalObj[\"count\"] = int;\r\n      delete index[\"undefined\"];\r\n      finalObj[\"index\"] = index;\r\n\r\n      console.log(finalObj);\r\n\r\n      const username = this.props.auth.user.username;\r\n      const studyName = this.props.match.params.studyName;\r\n\r\n      if (!this.state.files.length == 0) {\r\n        this.state.files.map(item => this.props.sendFile(username, item))\r\n      };\r\n\r\n      axios.put(\r\n        'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName + '/experiments',\r\n        finalObj\r\n      )\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .then(function (response) {\r\n          alert(\"Your experiment has been successfully created\");\r\n          window.location.reload(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n\r\n    var obj = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\r\n    var finalObj = {};\r\n    // finalObj[\"exptName\"] = this.nameRef.current.value;\r\n    var int = 0;\r\n    while (int < this.state.count) {\r\n      if ((int.toString()) in obj) {\r\n        finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n      }\r\n      int++;\r\n    }\r\n    finalObj[\"count\"] = int;\r\n    return (\r\n      <div ref={this.myRef}>\r\n        <h2>Experiment Builder</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <form action=\"/submit\" method=\"POST\" className=\"unit\">\r\n          <p>Enter a name for this experiment </p>\r\n          <input ref={this.nameRef}\r\n            value={this.state.exptName}\r\n            onChange={this.onChange}\r\n            type=\"text\" id=\"userid\" name=\"exptName\" /><br />\r\n          <b>all experiments in a study must have unique names</b>\r\n        </form>\r\n        {\r\n          this.state.children\r\n            .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n            .map((item) => {\r\n              return item.tab;\r\n            })\r\n        }\r\n        <TabBuilder \r\n          build={this.builderFunction} \r\n          importQuestion={this.importQuestion}\r\n          username={this.props.match.params.username}\r\n          studyName={this.props.match.params.studyName} />\r\n        <div className=\"extraPad\">\r\n          <button onClick={this.outputCreate} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n        </div>\r\n        <br/>\r\n        {/* <button onClick={() => console.log(finalObj)}>Show finalObj</button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired,\r\n  sendFile: PropTypes.func.isRequired,\r\n  dataFlowFileName: PropTypes.string.isRequired,\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo,\r\n  dataFlowFileName: state.dataFlow.fileName,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\n// export default TabList;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendFile, getStudyInfo }\r\n)(TabList);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n            <br/>\r\n            {userIsLoggedIn ? '' : \r\n              <Link to=\"/register\">Register</Link>}\r\n            <br/>\r\n            {userIsLoggedIn ? \r\n              <Link to=\"/dashboard\"> Dashboard </Link> \r\n              : \r\n              <Link to=\"/login\">Login</Link>}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Navbar;\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentWillMount() {\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          Scientist: <b>{this.props.auth.user.username}</b>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n      return(\r\n        <div className=\"container\">\r\n            <h1>\r\n            Welcome to Psych Researcher App!\r\n            </h1>\r\n            Please click on this <p></p>\r\n            <a target=\"_blank\" href=\"https://github.com/statistical-perceptions/statistical-perceptions.github.io\">link</a> <p></p>\r\n            to view researcher user guide. \r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(HomePage);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    };\r\n  };\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form and flask request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register below</h1>\r\n        <p className=\"grey-text text-darken-1\">\r\n          Already have an account?\r\n                    <Link to=\"/login\">Log in</Link>\r\n        </p>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              // userExists comes from res json message in API\r\n              invalid: errors.userExists\r\n            })} />\r\n          <span className=\"red-text\">{errors.userExists}</span>\r\n          <br />\r\n          <br />\r\n            Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n              invalid: errors.password})} />\r\n          <span className=\"red-text\">{errors.password}</span>\r\n          <br />\r\n          <br />\r\n            Confirm Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password2})} />\r\n          <span className=\"red-text\">{errors.password2}</span>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\" className=\"btn\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Register;\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// map state from redux props to use inside components\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n// linking redux to Register component\r\n// withRouter makes it easy to redirect within a component\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // push user to dashboard when they login\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form post and request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    // we are redirecting wthin a component, so we don't need to\r\n    // pass in this.props.history\r\n    this.props.loginUser(userData);\r\n  };\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Log in</h1>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.userNotFound\r\n              // || USERNAME NOT FOUND\r\n            })} />\r\n          <span className=\"red-text\">{errors.userNotFound}</span>\r\n          <br />\r\n          <br />\r\n                    Password:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.pwdIncorrect\r\n            })} />\r\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Log in\"\r\n            className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Login;\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport {\r\n  addStudyName,\r\n  getDBInfo\r\n} from \"../../actions/dataActions\";\r\n\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studyName: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onAddStudy = this.onAddStudy.bind(this);\r\n    this.onDeleteStudy = this.onDeleteStudy.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // load experiment names when the page loads\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getDBInfo(username); // dbInfo will be in the store now\r\n  }\r\n\r\n  getStudyNames() {\r\n    // TODO. Filter out study names. If an item doesn't have study names\r\n    // as a key, then don't do anything. (wrap everything inside an if)\r\n    const allInfo = this.props.dataFlowDBInfo;\r\n    return allInfo.map(item => {\r\n      const allKeys = Object.keys(item);\r\n      if (allKeys.includes(\"studyName\")) {\r\n        const username = this.props.auth.user.username;\r\n        const link = \"/\" + username + \"/\" + item.studyName;\r\n        return (\r\n          <div className=\"container\">\r\n            <p id={item.studyName}>\r\n              {item.studyName} <p> </p> \r\n              <Link to={link}>\r\n                View\r\n              </Link> <p> </p>\r\n              <button id={item.studyName} onClick={this.onDeleteStudy}>\r\n                Delete\r\n              </button>\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddStudy() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.addStudyName(username, this.state.studyName);\r\n    // // alert(\"Your study has been succesfully created.\");\r\n    // window.location.reload(false);\r\n  };\r\n\r\n  onDeleteStudy(e) {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = e.target.id;\r\n    var confirm = window.confirm(\"Are you sure you want to delete this\" + \r\n      \" study [\" + studyName + \"] and all its experiment data?\");\r\n    if (confirm) {\r\n      // delete the study doc in /info collection\r\n      axios\r\n        .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n          username + '/info/studyName-' + studyName);\r\n      // delete all deployed experiment collections in user's database\r\n      axios\r\n        .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n          username + \"/all\", { data: { studyName: studyName }})\r\n        .then(res => {\r\n          alert(\"You have succesfully deleted [\" + studyName + \"] and all\" + \r\n            \" its experiment data!\");\r\n          window.location.reload(true);\r\n        })\r\n    } else {\r\n      alert(\"Deletion cancelled!\");\r\n      window.location.reload(true);\r\n    }\r\n  }\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const username = this.props.auth.user.username;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Dashboard</h2>\r\n\r\n        <div className=\"boxed\" style={{ width: \"60%\", margin: \"auto\" }}>\r\n          <br/>\r\n          <b>Configure Experiment Types:</b> <br/>\r\n          <a href=\"https://colab.research.google.com/drive/1yleVQB_CrNJ5Z3v-YPatW2XqAD7yS8yp?usp=sharing\" target=\"_blank\">Normal Curves</a>\r\n          <div><br/></div>\r\n        </div>\r\n\r\n        <h3>Add a Study</h3>\r\n        Enter a name for your study: <br/>\r\n        <input type=\"text\" name=\"studyName\"\r\n          value={this.state.studyName} onChange={this.onChange} />\r\n        <button onClick={this.onAddStudy}>Add Study</button>\r\n        <br/>\r\n        Please do <b>not</b> use \"-\" in the name\r\n\r\n        <br/><br/>\r\n        <div className=\"boxed\" style={{ width: \"60%\", margin: \"auto\" }}>\r\n          <br />\r\n          {this.getStudyNames()}\r\n          <br />\r\n        </div>\r\n\r\n        <br/><br/>\r\n        <button\r\n          onClick={this.onLogoutClick}\r\n          className=\"btn\">\r\n          Logout\r\n        </button>\r\n        <div><br/><br/></div>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  logoutUser: PropTypes.func.isRequired,\r\n  addStudyName: PropTypes.func.isRequired,\r\n  getDBInfo: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, addStudyName, getDBInfo }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  getStudyInfo,\r\n  createExptCol,\r\n  getColNames,\r\n  saveAddInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ConfigStudy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: true,\r\n      deployed: Boolean\r\n    };\r\n\r\n    this.deployExpts = this.deployExpts.bind(this);\r\n    this.changeState = this.changeState.bind(this);\r\n    this.onDeploy = this.onDeploy.bind(this);\r\n    this.onChecked = this.onChecked.bind(this);\r\n    this.onDeleteExperiment = this.onDeleteExperiment.bind(this);\r\n  }\r\n  // note: using params to get studyName is probably not good practice. \r\n  // figure out a better way to get info from previous page later, might\r\n  // use cookies? or does react have some way to pass states between pages?\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    axios\r\n      .get('https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName)\r\n      .then(res => {\r\n        const dataToPut = {\r\n          \"randomize\": true\r\n        };\r\n        console.log(res.data);\r\n        if (!Object.keys(res.data).includes(\"randomize\")) {\r\n          this.putRandomize(username, studyName, dataToPut);\r\n        } else {\r\n          this.setState({ checked: res.data.randomize });\r\n        };\r\n      });\r\n    this.props.getStudyInfo(username, studyName);\r\n    this.props.getColNames(username);\r\n    axios\r\n      .get('https://test-api-615.herokuapp.com/api/' + username + \"/collections\")\r\n      .then(res => {\r\n        const thisSudyDeployedExpt = res.data.filter(name => \r\n          name.split(\"-\")[0] == studyName);\r\n        this.setState({ deployed: thisSudyDeployedExpt.length >= 1 });\r\n      });\r\n  }\r\n\r\n  processColNames() {\r\n    const studyName = this.props.match.params.studyName;\r\n    const processedArr = this.props.colNames.filter(name => name !== \"info\");\r\n    const currentStudyExpts = processedArr.filter(name =>\r\n      name.split('-')[0] == studyName);\r\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\r\n    // this.setState({ deployExpts: deployedExpts });\r\n    return deployedExpts;\r\n  }\r\n\r\n  putRandomize(database_name, study_name, data) {\r\n    axios.put('https://test-api-615.herokuapp.com/api/feedback/' + \r\n      database_name + '/info/studyName-' + study_name, data);\r\n  }\r\n\r\n  onChecked() {\r\n    const nowState = !this.state.checked;\r\n    this.setState({ checked: !this.state.checked });\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const dataToPut = {\r\n      \"randomize\": nowState\r\n    }\r\n    this.putRandomize(username, studyName, dataToPut);\r\n  }\r\n\r\n  getExptNames() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    // check if the experiments are deployed \r\n    return this.props.experiments.map(expt => {\r\n      const exptName = expt.exptName;\r\n      const surveyLink = expt.link;\r\n\r\n      var condition;\r\n      if (expt.condition == null) {\r\n        condition = \"N/A\";\r\n      } else {\r\n        condition = expt.condition;\r\n      }\r\n\r\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/configs\";\r\n      // const partDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n      //   exptName + \"/participantsData\";\r\n      const partExptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsExptData\";\r\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \r\n        \"participant-app/#/participant-app/expt/\" + username + \r\n          \"/\" + studyName + \"-\" + exptName\r\n      const previewLink = \"https://statistical-perceptions.github.io/\" + \r\n      \"participant-app/#/participant-app/preview/\" + username + \r\n        \"/\" + studyName + \"-\" + exptName\r\n      const dbLink = \"https://test-api-615.herokuapp.com/api/feedback/\" + \r\n        username + \"/\" + studyName + \"-\" + exptName\r\n\r\n      if (deployed.includes(exptName)) {\r\n        return (\r\n          <div className=\"container\">\r\n            <br/>\r\n            <div className=\"boxed\">\r\n              <b>{expt.exptName}</b> <br/>\r\n              <a target=\"_blank\" href={previewLink}>\r\n                Preview Experiment\r\n              </a> <br/><br/>\r\n              <Link to={exptDataLink}>\r\n                <button type=\"button\">\r\n                  Experiment Configs\r\n                </button>\r\n              </Link> <p> </p>\r\n              <Link to={partExptDataLink}>\r\n                <button type=\"button\">\r\n                  View Participants Data\r\n                </button>\r\n              </Link> <p> </p> \r\n              <br/><br/>\r\n              <button id={expt.exptName} onClick={this.onDeleteExperiment}>\r\n              Delete this Experiment\r\n              </button>\r\n              <br/><br/>\r\n              Condition: <b>{condition}</b>\r\n\r\n              {/* <br/>\r\n              <button onClick={() => console.log(condition)}></button> */}\r\n\r\n              <br/><br/>\r\n              <b>Database Link:</b><br/>\r\n              {dbLink} <br/>\r\n              <CopyToClipboard text={dbLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Database link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Experiment Link:</b> <br/>\r\n              {exptPartLink} <br/>\r\n              <CopyToClipboard text={exptPartLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Experiment link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Qualtrics Demographics Survey Link:</b> <br/>\r\n              {surveyLink} <br/>\r\n              <CopyToClipboard text={surveyLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Qualtrics Survey link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div>\r\n            <div className=\"boxed\">\r\n            Experiment: <b>{expt.exptName}</b><br/>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Configurations\r\n              </button>\r\n            </Link><br/><br/>\r\n            <button id={expt.exptName} onClick={this.onDeleteExperiment}>\r\n            Delete this Experiment\r\n            </button>\r\n            <br/><br/>\r\n            <b>Experiment Link:</b><br/>\r\n            {exptPartLink} <br/>\r\n            <CopyToClipboard text={exptPartLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Experiment link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>Database Link:</b><br/>\r\n            {dbLink} <br/>\r\n            <CopyToClipboard text={dbLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Database link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>TODO</b> <br/>\r\n            Paste the link to demographics qualtrics survey below: <br/>\r\n            <textarea cols=\"60\" rows=\"1\" id={exptName + \"link\"}\r\n              onInput={this.changeState} value={this.state.exptName}></textarea>\r\n            <br/><br/>\r\n            {\r\n              this.state.checked\r\n              ? <div>\r\n                <b>TODO</b> <br/>\r\n                Name the condition of this experiment: <br/>\r\n                <textarea cols=\"60\" rows=\"1\" id={exptName + \"condition\"}\r\n                  onInput={this.changeState} value={this.state.condition}></textarea>\r\n                <br/>\r\n              </div>\r\n              : <div></div>\r\n            }\r\n            <br/>\r\n            {/* <button onClick={() => console.log(this.state)}>Show State</button><br/> */}\r\n            <button id={exptName} onClick={this.onDeploy}> \r\n              <b>DEPLOY</b>\r\n            </button>\r\n            <br/>\r\n          </div>\r\n          </div>\r\n          \r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  changeState(e) {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  onDeleteExperiment(e) {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = e.target.id;\r\n    var confirm = window.confirm(\"Are you sure you want to delete this\" +\r\n      \" experiment [\" + exptName + \"] (and all its participant data)?\");\r\n    if (confirm) {\r\n      // first delete expt config from /info\r\n      axios\r\n      .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n        username + '/info/studyName-' + studyName + '/experiments/exptName-' +\r\n        exptName)\r\n      .then(res => {\r\n        // then delete participant data collection\r\n        axios\r\n          .delete('https://test-api-615.herokuapp.com/api/feedback/' + \r\n            username + \"/one\", {data: {colName: studyName + \"-\" + exptName}})\r\n          .then(res => {\r\n            alert(\"You have successfully deleted [\" + exptName + \r\n              \"] and all its data!\");\r\n            window.location.reload(true);\r\n          })\r\n      });\r\n    } else {\r\n      alert(\"Deletion cancelled!\");\r\n      window.location.reload(true);\r\n    }\r\n    \r\n  }\r\n\r\n  onDeploy(e) {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = e.currentTarget.id;\r\n\r\n    const link = this.state[exptName + \"link\"];\r\n    const condition = this.state[exptName + \"condition\"];\r\n\r\n    // process condition first\r\n    const conditionInfo = { \"condition\": condition };\r\n    // this.props.saveAddInfo(username, studyName, exptName, \"condition\", conditionInfo);\r\n\r\n    // NEED TO CLEAN THIS UP\r\n    // i only used axios here for debugging\r\n    axios\r\n      .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \r\n           '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'condition',\r\n           conditionInfo)\r\n      .then(res => {\r\n        var linkToSend;\r\n        if (this.state.checked) {\r\n          linkToSend = link + \"?condition=\" + condition\r\n        } else {\r\n          linkToSend = link;\r\n        }\r\n        const linkInfo = { \"link\": linkToSend };\r\n        axios\r\n          .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \r\n               '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'link',\r\n               linkInfo)\r\n          .then(res => {\r\n            this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\r\n          })\r\n      })\r\n\r\n\r\n    // const linkToSend = link + \"?condition=\" + condition\r\n    // const linkInfo = { \"link\": linkToSend };\r\n    // this.props.saveAddInfo(username, studyName, exptName, \"link\", linkInfo);\r\n    // this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\r\n  }\r\n\r\n  // for now deployment simply creates a collection for each experiment \r\n  // that would later store participants data\r\n  deployExpts() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    difference.forEach(expt_name => {\r\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\r\n    });\r\n  }\r\n\r\n  deploy() {\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    if (exptNames.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            No experiments.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            All experiments are deployed.\r\n          </p>\r\n        </div>\r\n      )\r\n    } \r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptBuilderLink = \"/\" + username + \"/\" +\r\n      studyName + \"/exptBuilder\";\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n\r\n    const partStudyDataLink = \"/\" + username + \"/\" + studyName + \"/participantsStudyData\";\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Study: {this.props.match.params.studyName}</h2>\r\n        <Link to={exptBuilderLink}>\r\n          <button>\r\n            Build an Experiment\r\n          </button>\r\n        </Link>\r\n        <br/><br/>\r\n        <Link to={partStudyDataLink}>\r\n          <button>\r\n            View All Participant Data\r\n          </button>\r\n        </Link>\r\n        <h3>\r\n          Your Experiments\r\n        </h3>\r\n        {\r\n          this.state.deployed\r\n          ? <div></div>\r\n          : <div>\r\n              <input type=\"checkbox\" onChange={this.onChecked} checked={this.state.checked}/>\r\n                I want to randomize experiments in this study\r\n              <br/><br/>\r\n          </div>\r\n        }\r\n        {\r\n          this.state.checked \r\n          ? <div>\r\n            You have chosen to randomize experiments in this study.\r\n          </div>\r\n          : <div>\r\n            You have chosen not to randomize experiments in this study. \r\n            <br/>\r\n          </div>\r\n        }\r\n        {this.getExptNames()}\r\n        <br /><br />\r\n        {this.deploy()}\r\n        <br />\r\n        {/* <button onClick={() => console.log(this.props.experiments)}>show state</button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nConfigStudy.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  auth: PropTypes.object.isRequired,\r\n\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  createExptCol: PropTypes.func.isRequired,\r\n\r\n  getColNames: PropTypes.func.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n\r\n  saveAddInfo: PropTypes.func.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\n// props: state\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  // experiments refer to the experiment configurations \r\n  // stored in collection [info] under the user's database\r\n  experiments: state.dataFlow.studyInfo,\r\n  colNames: state.dataFlow.colNames\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo, createExptCol, getColNames, saveAddInfo }\r\n)(ConfigStudy);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ExptConfigs extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(this.props.experiments);\r\n  }\r\n\r\n  showExptData() {\r\n    const thisExpt = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const exptObj =\r\n        this.props.experiments.find(item => item.exptName == thisExpt);\r\n      // const allKeys = Object.keys(exptObj);\r\n      // const questionKeys = allKeys.filter(\r\n      //   x => x != \"userID\" && x != \"count\" &&\r\n      //     x != \"type\" && x != \"exptName\");\r\n      // return questionKeys.map(q => {\r\n      //   const question = JSON.stringify(exptObj[q]);\r\n      //   return (\r\n      //     <div>\r\n      //       {question}\r\n      //     </div>\r\n      //   )\r\n      // })\r\n      const JSONString = JSON.stringify(exptObj);\r\n      return (\r\n        <div>\r\n          {JSONString}\r\n        </div>\r\n      )\r\n    }\r\n    // const exptName = exptObj.exptName;\r\n    // const info = JSON.stringify(exptObj);\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Configuration data: </b>\r\n        <br /><br />\r\n        {this.showExptData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  getColNames,\r\n  getColsData,\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass PartStudyData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.makeArr = this.makeArr.bind(this);\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n    this.getIndex = this.getIndex.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + username + \"/collections\")\r\n    .then(res => {\r\n      const nameArr = res.data;\r\n      const partColNames = nameArr.filter(name => \r\n        name != \"info\" && name != \"itemData\" && name.includes(studyName));\r\n      console.log(partColNames);\r\n      partColNames.map(colName => this.props.getColsData(username, colName));\r\n      this.props.getStudyInfo(username, studyName);\r\n    })\r\n  }\r\n\r\n  flattenObj(obj) {\r\n    var flattendObj = {};\r\n    const flattenObject = (obj, keyName) => {\r\n      Object.keys(obj).forEach(key => {\r\n        var newKey = `${keyName}.${key}` \r\n        if (typeof obj[key] === \"object\") {\r\n          // calling the function again\r\n          flattenObject(obj[key], newKey);\r\n        } else {\r\n          flattendObj[newKey] = obj[key];\r\n        }\r\n      });\r\n    };\r\n    flattenObject(obj, \"\");\r\n\r\n    function renameKey (obj, oldKey, newKey) {\r\n      obj[newKey] = obj[oldKey];\r\n      delete obj[oldKey];\r\n    }\r\n\r\n    const allKeys = Object.keys(flattendObj);\r\n    allKeys.map(k => {\r\n      const oldKey = k;\r\n      const newKey = oldKey.substr(1, oldKey.length);\r\n      renameKey(flattendObj, oldKey, newKey)\r\n    })\r\n\r\n    return flattendObj;\r\n  } \r\n\r\n  makeArr() {\r\n    if (!Object.keys(this.props.colsData).length == 0) {\r\n      // console.log(this.props.colData);\r\n      var arr = [];\r\n      var ids = [];\r\n      const arrToProcess = this.props.colsData;\r\n      // console.log(arrToProcess);\r\n      arrToProcess.forEach(item => {\r\n        const id = item.participantID;\r\n        const keysInItem = Object.keys(item);\r\n        const qKeys = \r\n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\r\n        \r\n        if (ids.includes(id)) {\r\n          // find that id in arr and update the item\r\n          arr.forEach(ele => {\r\n            if (ele.participantID == id) {\r\n              const prevData = ele;\r\n              qKeys.forEach(k => prevData[k] = item[k]);\r\n              ele = prevData;\r\n            }\r\n          })\r\n        } else {\r\n          // make a new item, put it in arr, and put id in ids \r\n          const doc = {};\r\n          doc[\"participantID\"] = id;\r\n          qKeys.forEach(k => doc[k] = item[k]);\r\n          arr.push(doc);\r\n          ids.push(id);\r\n          // console.log(doc);\r\n        }\r\n      })\r\n      // arr.map(ele => ele = this.flattenObj(ele));\r\n      arr.map(ele => {\r\n        const newEle = this.flattenObj(ele);\r\n        const i = arr.indexOf(ele);\r\n        arr[i] = newEle;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  showJSONData() {\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return arr.map(ele => {\r\n        const line = JSON.stringify(ele);\r\n        return (\r\n          <div>\r\n            <br/>\r\n            {line}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  getIndex() {\r\n    const studyName = this.props.match.params.studyName;\r\n    if (!this.props.experiments.length == 0) {\r\n      var allIndex = [];\r\n      this.props.experiments.map(item => {\r\n        allIndex.push(item[\"index\"]);\r\n      });\r\n\r\n      let str = \"\";\r\n      allIndex.map(item => {\r\n        const objKeys = Object.keys(item);\r\n        objKeys.map(key => {\r\n          const line = key.toString() + \": \" + item[key].toString() + \"\\n\"\r\n          str += line;\r\n        });\r\n      });\r\n\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([str], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = studyName + \"Legend.txt\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n      console.log(file);\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    const file_name = username + \"_\" + studyName + \"_data.csv\";\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return (\r\n        <div>\r\n          <h2>All Participant Data from Study: {studyName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br /><br />\r\n          <button>\r\n            <CSVLink data={arr} filename={file_name}>\r\n              Download Data as CSV\r\n            </CSVLink>\r\n          </button>\r\n          <br/><br/>\r\n          <button onClick={this.getIndex}>Download Legend</button>\r\n          {this.showJSONData()}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>All Participant Data from Study: {studyName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br /><br />\r\n          It seems like there's no participant data yet... \r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nPartStudyData.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColsData: PropTypes.func.isRequired,\r\n  getColNames: PropTypes.func.isRequired,\r\n  colsData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colsData: state.dataFlow.colsData,\r\n  colNames: state.dataFlow.colNames,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColNames, getColsData, getStudyInfo }\r\n)(PartStudyData);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  getColData,\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass PartExptData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // finalObj: {}\r\n    };\r\n\r\n    this.makeArr = this.makeArr.bind(this);\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n    this.getIndex = this.getIndex.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n    this.props.getStudyInfo(username, studyName);\r\n  }\r\n\r\n  flattenObj(obj) {\r\n    var flattendObj = {};\r\n    const flattenObject = (obj, keyName) => {\r\n      Object.keys(obj).forEach(key => {\r\n        var newKey = `${keyName}.${key}` \r\n        if (typeof obj[key] === \"object\") {\r\n          // calling the function again\r\n          flattenObject(obj[key], newKey);\r\n        } else {\r\n          flattendObj[newKey] = obj[key];\r\n        }\r\n      });\r\n    };\r\n    flattenObject(obj, \"\");\r\n\r\n    function renameKey (obj, oldKey, newKey) {\r\n      obj[newKey] = obj[oldKey];\r\n      delete obj[oldKey];\r\n    }\r\n\r\n    const allKeys = Object.keys(flattendObj);\r\n    allKeys.map(k => {\r\n      const oldKey = k;\r\n      const newKey = oldKey.substr(1, oldKey.length);\r\n      renameKey(flattendObj, oldKey, newKey)\r\n    })\r\n\r\n    return flattendObj;\r\n  } \r\n\r\n  makeArr() {\r\n    if (!Object.keys(this.props.colData).length == 0) {\r\n      // console.log(this.props.colData);\r\n      var arr = [];\r\n      var ids = [];\r\n      const arrToProcess = this.props.colData;\r\n      console.log(arrToProcess);\r\n      arrToProcess.forEach(item => {\r\n        const id = item.participantID;\r\n        const keysInItem = Object.keys(item);\r\n        // switch statement here\r\n        const qKeys = \r\n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\r\n        \r\n        if (ids.includes(id)) {\r\n          // find that id in arr and update the item\r\n          arr.forEach(ele => {\r\n            if (ele.participantID == id) {\r\n              const prevData = ele;\r\n              qKeys.forEach(k => prevData[k] = item[k]);\r\n              ele = prevData;\r\n            }\r\n          })\r\n        } else {\r\n          // make a new item, put it in arr, and put id in ids \r\n          const doc = {};\r\n          doc[\"participantID\"] = id;\r\n          qKeys.forEach(k => doc[k] = item[k]);\r\n          arr.push(doc);\r\n          ids.push(id);\r\n          // console.log(doc);\r\n        }\r\n      })\r\n      // arr.map(ele => ele = this.flattenObj(ele));\r\n      arr.map(ele => {\r\n        const newEle = this.flattenObj(ele);\r\n        const i = arr.indexOf(ele);\r\n        arr[i] = newEle;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  showJSONData() {\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return arr.map(ele => {\r\n        const line = JSON.stringify(ele);\r\n        return (\r\n          <div>\r\n            <br/>\r\n            {line}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  getIndex() {\r\n    const exptName = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const thisExpt = \r\n      this.props.experiments\r\n        .filter(item => item[\"exptName\"] == this.props.match.params.exptName)[0]\r\n      const index = thisExpt[\"index\"];\r\n\r\n      let str = \"\"\r\n      const objKeys = Object.keys(index);\r\n      objKeys.map(key => {\r\n        const line = key.toString() + \": \" + index[key].toString() + \"\\n\"\r\n        str += line;\r\n      });\r\n\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([str], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = exptName + \"Legend.txt\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n      console.log(file);\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    const file_name = username + \"_\" + studyName + \"_\" + exptName + \"_data.csv\";\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      console.log(arr);\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/>\r\n          <h4>Participants data: </h4> \r\n          {/* <button onClick={this.downloadData}>See data as csv</button> */}\r\n          <button>\r\n            <CSVLink data={arr} filename={file_name}>\r\n              Download Data as CSV\r\n            </CSVLink>\r\n          </button>\r\n          <br/><br/>\r\n          <button onClick={this.getIndex}>Download Legend</button><br/>\r\n          \r\n          <div>\r\n            {this.showJSONData()}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/><br/>\r\n          It seems like there's no participant data yet...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nPartExptData.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n\r\n  getStudyInfo: PropTypes.array.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData, getStudyInfo }\r\n)(PartExptData);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BuildExpt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exptName: '',\r\n      numOfItems: Number,\r\n      showItems: false,\r\n      itemToSelect: [\"slider\", \"normal curve\"]\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.preBuild = this.preBuild.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.toggleShowItems = this.toggleShowItems.bind(this);\r\n    this.inputNumItems = this.inputNumItems.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showItem() {\r\n    console.log(this.state.numOfItems);\r\n    const inputs = [];\r\n    for (let i = 1; i <= this.state.numOfItems; i ++) {\r\n      inputs.push(\r\n        <div>\r\n          Hello\r\n        </div>\r\n      )\r\n    }\r\n    return inputs;\r\n  }\r\n\r\n  toggleShowItems() {\r\n    this.setState({ showItems: true })\r\n  }\r\n\r\n  inputNumItems() {\r\n    return (\r\n      <div>\r\n        How many items do you want to build? <br/><br/>\r\n        <input type=\"text\" name=\"numOfItems\" value={this.state.numOfItems}\r\n          onChange={this.onChange}/> <p></p>\r\n        <button class=\"btn\" onClick={this.toggleShowItems}>Ok</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  preBuild() {\r\n    return (\r\n      <div className=\"container\">\r\n        Enter experiment name: <br/><br/>\r\n        <input type=\"text\" name=\"exptName\" value={this.state.exptName}\r\n          onChange={this.onChange}/> <br/><br/>\r\n          {\r\n            !this.state.showItems && \r\n            <this.inputNumItems/>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Experiment Builder</h3> <br/>\r\n        {this.preBuild()} <br/>\r\n        { this.state.showItems && <this.showItem/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BuildExpt;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport TabList from './components/TabList/TabList';\r\n\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport HomePage from './components/layout/HomePage';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login'\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ConfigStudy from './components/Study/ConfigStudy';\r\nimport ExptConfigs from './components/Study/ExptConfigs';\r\nimport PartStudyData from './components/Study/PartStudyData';\r\nimport PartExptData from './components/Study/PartExptData';\r\nimport BuildExpt from './components/Study/BuildExpt.jsx';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/survey-builder/\">\r\n        <div className=\"App\">\r\n          < NavBar />\r\n          <br/>\r\n          < Landing />\r\n          < Route exact path=\"/\" component={HomePage} />\r\n          < Route exact path=\"/register\" component={Register} />\r\n          < Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/:username/:studyName\"\r\n              component={ConfigStudy} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\r\n              component={TabList} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/newExpt\" \r\n              component={BuildExpt} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\r\n              component={ExptConfigs}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/participantsStudyData\"\r\n              component={PartStudyData}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsExptData\"\r\n              component={PartExptData}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}