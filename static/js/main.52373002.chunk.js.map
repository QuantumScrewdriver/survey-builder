{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","components/TabBuilder/TabBuilder.jsx","components/items/Slider/SliderTab.jsx","components/items/StaticText/StaticText.js","components/items/NormalCurve/NormalCurve.jsx","actions/dataActions.js","components/items/NormalCurve/NormalCurveResearch.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartData.js","components/Study/PartJSONData.js","components/Study/BuildExpt.jsx","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","colData","colNames","fileName","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","TabBuilder","selectRef","React","createRef","className","name","id","ref","this","value","onClick","build","current","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","checked","minVal","Number","maxVal","handleChange","bind","onChange","delete","count","getCount","e","setState","target","q","onInput","defaultValue","StaticText","cols","rows","NormalCurve","rectRef","svgRef","areaRef","lengthRef","startPos1Ref","startPos2Ref","graph1keyRef","graph2keyRef","colNumValRef","radiusRef","dotReturn","curveArea","triMouseDown","triDrag","triUp","lengthSubmit","toggleXVals","alterStartPos1","alterStartPos2","svgColReturn","unitHeight","data","circRad","len1","len2","distancing","height","Math","ceil","colNumInit","internalLength","edgeCol","edgeLength","ceilDist","length","colNum","console","log","axisStart","axisStartCol","axisWidth","axisEndCol","axisEnd","triCent1","triCent2","triCentCol1","triCentCol2","variance1","abs","variance2","startPos1","distancing1","col11","col12","colNumVal","startPos2","distancing2","col21","col22","axisLength","x","y","isDown","rectX","down","svgWidth","svgHeight","svgX","colValHeiS","colValHeiS2","mousePointerRange","triDown","colLim1","round","colLim2","overlapVals","lowVal","showCoors","xPos","yPos","xPosOrig","CX","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","dragger","distFromCent","variance","svg","pt","createSVGPoint","clientX","svgP","matrixTransform","getScreenCTM","inverse","preventDefault","col","colRelative","num","svgPre","ptPre","svgPPre","prevState","svgColPlacement","innerHTML","key","changeJSON","newLength","newPos","parseInt","onMouseMove","onMouseUp","width","Array","keys","map","row","dotReturn2","points","onMouseDown","text-anchor","class","style","backgroundColor","getStudyInfo","which_database","which_study","get","then","res","experiments","getColData","col_name","NormalCurveResearch","handleDrop","handleSelectedFile","dataReceived","fileNames","setFileNames","fileChosen","username","content","saveFile","acceptedFiles","file","forEach","dataFlowColData","filter","item","itemType","includes","alert","reader","FileReader","onabort","onerror","onload","fileText","result","jsonData","JSON","parse","files","readAsText","fileContent","unshift","fileOptions","onDrop","accept","getRootProps","getInputProps","TabList","builderFunction","tabDefine","arr","children","push","tab","toString","curOutput","output","newCount","complete","deleted","exptName","myRef","submitRef","nameRef","outputCreate","checkOutput","newDelete","newFile","concat","obj","int","elem","lowNum","isNaN","highNum","indexOf","finalObj","match","params","sendFile","put","response","window","location","reload","catch","error","studyLink","method","dataFlowDBInfo","dataFlowFileName","post","Navbar","userIsLoggedIn","Landing","HomePage","href","Register","onSubmit","newUser","password","password2","registerUser","history","nextProps","noValidate","classnames","invalid","userExists","userData","err","withRouter","Login","loginUser","userNotFound","pwdIncorrect","setItem","jwt_decode","Dashboard","onLogoutClick","onAddStudy","getDBInfo","Object","link","addStudyName","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployExpts","changeState","onDeploy","getColNames","split","deployed","processColNames","expt","condition","surveyLink","exptDataLink","partJSONDataLink","exptPartLink","previewLink","dbLink","text","currentTarget","conditionInfo","saveAddInfo","linkInfo","createExptCol","expt_name","exptNames","difference","color","exptBuilderLink","getExptNames","deploy","which_expt","infoType","info","ExptConfigs","thisExpt","exptObj","find","JSONString","stringify","showExptData","returnRow","colName","hd","answer","align","partDataHeader","showPartData","makeArr","showJSONData","downloadData","flattendObj","flattenObject","keyName","newKey","k","oldKey","substr","renameKey","ids","participantID","qKeys","ele","prevData","doc","newEle","flattenObj","i","line","BuildExpt","numOfItems","showItems","itemToSelect","preBuild","showItem","toggleShowItems","inputNumItems","inputs","jwtToken","currentTime","Date","now","exp","App","basename","NavBar","exact","path","PartData","PartJSONData","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.52373002.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \r\n// if the user is already logged in \r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    // set up proxy in package.json later\r\n    .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","// types are how actions communicate with reducers\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\r\nexport const GET_DB_INFO = \"GET_DB_INFO\";\r\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\r\nexport const GET_COL_DATA = \"GET_COL_DATA\";\r\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";\r\n\r\nexport const STORE_FILENAME = \"STORE_FILENAME\";\r\nexport const DELETE_FILE = \"DELETE_FILE\";\r\nexport const SEND_FILE = \"SEND_FILE\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\"); \r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default: return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: return action.payload;\r\n        default: return state;\r\n    }\r\n}","import {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  studyName: '',\r\n  dbInfo: [],\r\n  studyInfo: [],\r\n  colData: [],\r\n  colNames: [],\r\n  // files: []\r\n  fileName: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_STUDY_NAME:\r\n      return {\r\n        ...state,\r\n        studyName: action.payload\r\n      };\r\n    case GET_DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_STUDY_INFO:\r\n      return {\r\n        ...state,\r\n        studyInfo: action.payload\r\n      };\r\n    case GET_COL_DATA:\r\n      return {\r\n        ...state,\r\n        colData: action.payload\r\n      };\r\n    case GET_COL_NAMES:\r\n      return {\r\n        ...state,\r\n        colNames: action.payload\r\n      };\r\n    // case STORE_FILE:\r\n    //   return {\r\n    //     ...state,\r\n    //     files: [...state.files, action.payload]\r\n    //   };\r\n    case STORE_FILENAME:\r\n      return {\r\n        ...state,\r\n        fileName: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport dataReducer from \"./dataReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  dataFlow: dataReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nclass TabBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  // ###TODO###: add options here when you add your experiment type\r\n  render() {\r\n    return (\r\n      <div className=\"unit\">\r\n        <span>Choose what element to add next</span><br />\r\n        <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\r\n          <option value=\"slider\">Slider</option>\r\n          <option value=\"static-text\">Static Text</option>\r\n          <option value=\"normal-curve\">Normal Curve</option>\r\n        </select>\r\n        <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabBuilder;","import React, { Component } from 'react';\r\nimport './SliderTab.css';\r\n\r\nclass SliderTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sliderRef = React.createRef();\r\n    this.outputRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.state = { min: 1, max: 100 }\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"unit\">\r\n        <p>Question: <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} ref={this.qRef} type=\"text\" /></p><br/>\r\n        {this.state.minVal}\r\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\r\n        {this.state.maxVal} <br/>\r\n        <p>Minimum: \r\n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n          ref={this.minRef} type=\"text\" \r\n          name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p><br/>\r\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\r\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n          ref={this.maxRef} type=\"text\" \r\n          name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderTab;","import React, { Component } from 'react';\r\n\r\nclass StaticText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.qRef = React.createRef();\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"unit\">\r\n        Enter your static text below: <br/>\r\n        <textarea cols=\"60\" rows=\"10\" ref={this.qRef}\r\n          onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\r\n        </textarea>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StaticText;","import React, { Component } from 'react';\r\nimport './NormalCurve.css';\r\n\r\nclass NormalCurve extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.sliderRef = React.createRef();\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n    this.lengthRef = React.createRef();\r\n    this.startPos1Ref = React.createRef();\r\n    this.startPos2Ref = React.createRef();\r\n    this.graph1keyRef = React.createRef();\r\n    this.graph2keyRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.colNumValRef = React.createRef();\r\n    this.radiusRef = React.createRef();\r\n\r\n    this.dotReturn = this.dotReturn.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.triMouseDown = this.triMouseDown.bind(this);\r\n    this.triDrag = this.triDrag.bind(this);\r\n    this.triUp = this.triUp.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.lengthSubmit = this.lengthSubmit.bind(this);\r\n    this.toggleXVals = this.toggleXVals.bind(this);\r\n    this.alterStartPos1 = this.alterStartPos1.bind(this);\r\n    this.alterStartPos2 = this.alterStartPos2.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    this.svgColReturn = this.svgColReturn.bind(this);\r\n    const unitHeight = this.props.data[\"max-height\"];\r\n    const circRad = this.props.data[\"circle-radius\"];\r\n    const len1 = this.props.data[\"len1\"];\r\n    const len2 = this.props.data[\"len2\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n\r\n    const colNumInit = this.props.data[\"axis-length\"];\r\n    const internalLength = colNumInit * distancing;\r\n    const edgeCol = Math.ceil(Math.max(len1, len2) / 2);\r\n    const edgeLength = Math.max(len1, len2) * distancing;\r\n\r\n    const ceilDist = height - 50;\r\n    const length = edgeLength + internalLength;\r\n    const colNum = Math.ceil(length / distancing);\r\n    console.log(height, distancing, ceilDist, colNum);\r\n\r\n    const axisStart = Math.ceil(edgeLength / 2);\r\n    const axisStartCol = edgeCol;\r\n    const axisWidth = length - ((len1 / 2 + 1) * distancing + (len2 / 2 + 1) * distancing - 1);\r\n    const axisEndCol = internalLength / distancing;\r\n    const axisEnd = axisEndCol * distancing;\r\n\r\n    const triCent1 = (0.5 * len1 + 1) * distancing;\r\n    const triCent2 = (0.5 * len2 + 1) * distancing;\r\n    const triCentCol1 = Math.ceil(triCent1 / distancing);\r\n    const triCentCol2 = Math.ceil(triCent2 / distancing);\r\n\r\n    const variance1 = Math.abs(Math.ceil(len1 / 2) - axisStartCol);\r\n    const variance2 = Math.abs(Math.ceil(len2 / 2) - axisStartCol);\r\n\r\n    const startPos1 = this.props.data[\"startPos1\"];\r\n    let distancing1 = startPos1 + variance1 - 1;\r\n    let col11 = startPos1;\r\n    let col12 = startPos1 + len1 - 1;\r\n    if (col11 + triCentCol1 < axisStartCol) {\r\n      distancing1 = variance1 - 1;\r\n      col11 = 0;\r\n      col12 = len1 - 1;\r\n    }\r\n    else if (col11 + triCentCol1 > axisStartCol + axisEndCol) {\r\n      distancing1 = variance1 + axisEndCol - 1;\r\n      col11 = axisEndCol;\r\n      col12 = axisEndCol + len1 - 1;\r\n    }\r\n\r\n    let startPos2 = this.props.data[\"startPos2\"];\r\n    let distancing2 = startPos2 + variance2 - 1;\r\n    let col21 = startPos2;\r\n    let col22 = startPos2 + len2 - 1;\r\n    if (col21 + triCentCol2 < axisStartCol) {\r\n      distancing2 = variance2 - 1;\r\n      col21 = 0;\r\n      col22 = len2 - 1;\r\n    }\r\n    else if (col21 + triCentCol2 > axisStartCol + axisEndCol) {\r\n      distancing2 = variance2 + axisEndCol - 1;\r\n      col21 = axisEndCol;\r\n      col22 = axisEndCol + len2 - 1;\r\n    }\r\n\r\n    let colNumVal;\r\n    if (\"colNumVal\" in this.props.data) {\r\n      colNumVal = this.props.data[\"colNumVal\"];\r\n    }\r\n    else {\r\n      colNumVal = 1;\r\n    }\r\n\r\n    this.state = {\r\n      axisLength: this.props.data[\"axis-length\"],\r\n      startPos1: this.props.data[\"startPos1\"],\r\n      startPos2: this.props.data[\"startPos2\"],\r\n      x: 0, y: 0, isDown: false,\r\n      rectX: 12.5,\r\n      down: false,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      svgX: 6,\r\n      len1: len1,\r\n      colValHeiS: this.props.data[\"colValHeiS\"],\r\n      len2: len2,\r\n      colValHeiS2: this.props.data[\"colValHeiS2\"],\r\n      distancing: distancing,\r\n      distancing1 : distancing1 * distancing,\r\n      distancing2: distancing2 * distancing,\r\n      triCent1: triCent1,\r\n      triCentCol1: triCentCol1,\r\n      triCent2: triCent2,\r\n      triCentCol2: triCentCol2,\r\n      mousePointerRange: 0,\r\n      triDown: false,\r\n      col11: col11,\r\n      col12: col12,\r\n      col21: col21,\r\n      col22: col22,\r\n      colLim1: Math.round((length - (len1 * distancing)) / distancing),\r\n      colLim2: Math.round((length - (len2 * distancing)) / distancing),\r\n      overlapVals: this.props.data[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist,\r\n      axisStart: axisStart,\r\n      axisStartCol: axisStartCol,\r\n      axisWidth: axisWidth,\r\n      axisEnd: axisEnd,\r\n      axisEndCol: axisEndCol,\r\n      edgeCol: edgeCol,\r\n      edgeLength: edgeLength,\r\n      colNum: colNumInit,\r\n      variance1: variance1,\r\n      variance2: variance2,\r\n      lowVal: this.props.data[\"lowVal\"],\r\n      showCoors: true,\r\n      colNumVal: colNumVal\r\n    };\r\n  }\r\n\r\n  dotReturn(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing1 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"DarkCyan\" fill=\"DarkCyan\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  dotReturn2(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    const CX = this.state.distancing2 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"Crimson\" fill=\"Crimson\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  svgColReturn(e, dragger) {\r\n    let distFromCent;\r\n    let variance;\r\n    if (dragger === 1) {\r\n      distFromCent = this.state.triCentCol1;\r\n      variance = this.state.variance1;\r\n    }\r\n    else if (dragger === 2) {\r\n      distFromCent = this.state.triCentCol2;\r\n      variance = this.state.variance2;\r\n    }\r\n    var svg = this.svgRef.current;\r\n    var pt = svg.createSVGPoint();\r\n    pt.x = e.clientX;\r\n    var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    e.preventDefault();\r\n    var x = svgP.x - distFromCent + this.state.mousePointerRange;\r\n    var col = Math.round((x - this.state.axisStart) / this.state.distancing) + variance;\r\n    var colRelative = Math.round((x - this.state.axisStart) / this.state.distancing) + 1;\r\n    // console.log(col, colRelative, variance);\r\n    return [col, colRelative];\r\n  }\r\n\r\n  svgColPlacement(col, colRelative, dragger) {\r\n    if (dragger === 2) {\r\n      if (col + this.state.triCentCol2 < this.state.axisStartCol) {\r\n        this.setState({ distancing2: (this.state.variance2 - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\r\n      }\r\n      else if (col + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n        this.setState({ distancing2: this.state.distancing * (this.state.variance2 + this.state.axisEndCol - 1), col21: this.state.axisEndCol, col22: this.state.axisEndCol + this.state.len2 - 1 })\r\n      }\r\n      else {\r\n        this.setState({ distancing2: this.state.distancing * col, col21: colRelative, col22: colRelative + this.state.len2 - 1 });\r\n      }\r\n      this.curveArea();\r\n    }\r\n    else if (dragger === 1) {\r\n      if (col + this.state.triCentCol1 < this.state.axisStartCol) {\r\n        this.setState({ distancing1: (this.state.variance1 - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\r\n      }\r\n      else if (col + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n        this.setState({ distancing1: this.state.distancing * (this.state.variance1 + this.state.axisEndCol - 1), col11: this.state.axisEndCol, col12: this.state.axisEndCol + this.state.len1 - 1 })\r\n      }\r\n      else {\r\n        this.setState({ distancing1: this.state.distancing * col, col11: colRelative, col12: colRelative + this.state.len1 - 1 });\r\n      }\r\n      this.curveArea();\r\n      // this.setState({ distancing2 : x })\r\n    }\r\n  }\r\n\r\n  triMouseDown(e, num) {\r\n    if (e.type === \"mousedown\") {\r\n      // console.log(\"MOUSEDOWN\");\r\n      e.preventDefault();\r\n      var svgPre = this.svgRef.current;\r\n      // Set mousePointerRange so that we know the distance\r\n      // from the mouse tip to the x-value of the triangle\r\n      // tip\r\n      var ptPre = svgPre.createSVGPoint();\r\n      ptPre.x = e.clientX;\r\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n      if (num === 1) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\r\n        }));\r\n      }\r\n      else if (num === 2) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\r\n        }));\r\n      }\r\n      // console.log(this.state);\r\n    }\r\n  }\r\n\r\n  triDrag(e) {\r\n      e.preventDefault();\r\n      var dragger = this.state.triDown;\r\n      var cols = this.svgColReturn(e, dragger);\r\n      var col = cols[0];\r\n      var colRelative = cols[1]\r\n      // console.log(col);\r\n      this.svgColPlacement(col, colRelative, dragger);\r\n      this.curveArea();\r\n  }\r\n\r\n  triUp(e) {\r\n    // console.log(\"UP\");\r\n    if (this.state.triDown) {\r\n      this.setState({ triDown: false });\r\n    }\r\n  }\r\n\r\n  curveArea() {\r\n    const col11 = this.state.col11 + this.state.variance1;\r\n    const col12 = this.state.col12 + this.state.variance1;\r\n    const col21 = this.state.col21 + this.state.variance2;\r\n    const col22 = this.state.col22 + this.state.variance2;\r\n\r\n    if (col11 > col22 || col12 < col21) {\r\n      this.areaRef.current.innerHTML = 0;\r\n    }\r\n    else {\r\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\r\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(col22 - col11)];\r\n    }\r\n  }\r\n  \r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    this.props.changeJSON(key, value);\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  lengthSubmit(newLength) {\r\n    var newLength = this.lengthRef.current.value;\r\n    const internalLength = newLength * this.state.distancing;\r\n    const length = this.state.edgeLength + internalLength;\r\n\r\n    const axisEndCol = internalLength / this.state.distancing;\r\n    const axisEnd = axisEndCol * this.state.distancing;\r\n    console.log(axisEndCol);\r\n\r\n    this.changeJSON(\"axis-length\", newLength);\r\n\r\n    this.setState({\r\n      colNum: newLength,\r\n      svgWidth: length,\r\n      axisEndCol: axisEndCol,\r\n      axisEnd: axisEnd\r\n    });\r\n  }\r\n\r\n  toggleXVals() {\r\n    this.setState(prevState => {\r\n      return {\r\n        showCoors: !prevState.showCoors\r\n      }\r\n    })\r\n  }\r\n\r\n  alterStartPos1(newPos) {\r\n    let startPos1 = parseInt(this.startPos1Ref.current.value) + this.state.variance1 - 1;\r\n    let col11 = startPos1 - this.state.variance1 + 1;\r\n    let col12 = col11 + this.state.len1 - 1;\r\n    if (startPos1 + this.state.triCentCol1 < this.state.axisStartCol) {\r\n      startPos1 = this.state.variance1 - 1;\r\n      col11 = 0;\r\n      col12 = this.state.len1 - 1;\r\n    }\r\n    else if (startPos1 + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos1 = this.state.variance1 + this.state.axisEndCol - 1;\r\n      col11 = this.state.axisEndCol;\r\n      col12 = this.state.axisEndCol + this.state.len1 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos1\", newPos);\r\n\r\n    this.setState({\r\n      distancing1: startPos1 * this.state.distancing,\r\n      col11: col11,\r\n      col12: col12\r\n    });\r\n  }\r\n\r\n  alterStartPos2(newPos) {\r\n    let startPos2 = parseInt(this.startPos2Ref.current.value) + this.state.variance2 - 1;\r\n    let col21 = startPos2 - this.state.variance2 + 1;\r\n    let col22 = col21 + this.state.len2 - 1;\r\n    if (startPos2 + this.state.triCentCol2 < this.state.axisStartCol) {\r\n      startPos2 = this.state.variance2 - 1;\r\n      col21 = 0;\r\n      col22 = this.state.len2 - 1;\r\n    }\r\n    else if (startPos2 + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\r\n      startPos2 = this.state.variance2 + this.state.axisEndCol - 1;\r\n      col21 = this.state.axisEndCol;\r\n      col22 = this.state.axisEndCol + this.state.len2 - 1;\r\n    }\r\n\r\n    this.changeJSON(\"startPos2\", newPos);\r\n\r\n    this.setState({\r\n      distancing2: startPos2 * this.state.distancing,\r\n      col21: col21,\r\n      col22: col22\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        onMouseMove={e => this.triDrag(e)}\r\n        onMouseUp={e => this.triUp(e)}>\r\n        <svg width={this.state.svgWidth} height={this.state.svgHeight + 10} ref={this.svgRef}>\r\n          {/* <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\"/> */}\r\n          {[...Array(this.state.len1).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS[col]).keys()].map(\r\n                (row) => this.dotReturn(col, row)\r\n              )\r\n          )}\r\n          {[...Array(this.state.len2).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS2[col]).keys()].map(\r\n                (row) => this.dotReturn2(col, row)\r\n              )\r\n          )}\r\n          <rect width={this.state.axisEnd}\r\n            height=\"2\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <rect width=\"2\"\r\n            height=\"20\"\r\n            fill=\"black\"\r\n            x={this.state.axisEnd + this.state.axisStart - 1}\r\n            y={this.state.ceilDist + 20} />\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent1 + this.state.distancing1 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\r\n          />\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent2 + this.state.distancing2 - 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2 + 15, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\r\n          />\r\n          <text text-anchor=\"middle\" x={this.state.axisStart} y={this.state.ceilDist + 55}>{this.state.lowVal}</text>\r\n          <text text-anchor=\"middle\" x={this.state.axisStart + this.state.axisEnd} y={this.state.ceilDist + 55}>{this.state.lowVal + this.state.colNum * this.state.colNumVal}</text>\r\n                    Sorry, please use a different browser.\r\n                </svg>\r\n        <br />\r\n        <div class=\"boxed\">\r\n          Question: <br/>\r\n          <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \r\n            onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\r\n          </textarea><br/>\r\n\r\n          <div class=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\r\n          <input type=\"text\" \r\n            ref={this.graph1keyRef}\r\n            onInput={() => this.handleChange(\"graph1key\", this.graph1keyRef.current.value, this.props.count)}></input>\r\n          <br />\r\n\r\n          <div class=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\r\n          <input type=\"text\" \r\n            ref={this.graph2keyRef}\r\n            onInput={() => this.handleChange(\"graph2key\", this.graph2keyRef.current.value, this.props.count)}></input>\r\n          <br />\r\n\r\n          <span>Enter the width of the graph (each point in the curves is \r\n            equivalent to 1 unit of width) </span>\r\n          <input ref={this.lengthRef} type=\"text\" \r\n            name=\"axisLength\" value={this.state.axisLength} \r\n            onChange={this.onChange}/>\r\n          <button onClick={() => {this.lengthSubmit(this.state.axisLength)}}>\r\n            Change Width\r\n          </button>\r\n          <br/>\r\n\r\n          <span>Enter your preferred value for the width of each unit in the curve</span>\r\n          <input type=\"text\" ref={this.colNumValRef}></input>\r\n          <button onClick={() => this.changeJSON(\"colNumVal\", this.colNumValRef.current.value)}>Change Unit Value</button>\r\n          <br />\r\n          \r\n          <span>Enter your preferred value for the radius of each unit in the curve (2 - 5, inclusive)</span>\r\n          <input type=\"text\" ref={this.radiusRef}></input>\r\n          <button onClick={() => this.changeJSON(\"circRad\", this.radiusRef.current.value)}>Change Radius</button>\r\n          <br />\r\n\r\n          <span>Enter your preferred starting position for curve 1, \r\n            if you want to change it </span>\r\n          <input ref={this.startPos1Ref} \r\n            type=\"text\" name=\"startPos1\" value={this.state.startPos1} \r\n            onChange={this.onChange}></input>\r\n          <button onClick={() => this.alterStartPos1(this.state.startPos1)}>\r\n            Change Curve 1\r\n          </button>\r\n          <br/>\r\n\r\n          <span>Enter your preferred starting position for curve 2, \r\n            if you want to change it </span>\r\n          <input ref={this.startPos2Ref} type=\"text\" \r\n          name=\"startPos2\" value={this.state.startPos2} \r\n          onChange={this.onChange}></input>\r\n          <button onClick={() => this.alterStartPos2(this.state.startPos2)}>\r\n            Change Curve 2\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <h1>Area Under Curve: <span ref={this.areaRef}></span> | First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h1>\r\n        {/* <h1>{this.props.data[\"startPos1\"]} | {this.props.data[\"startPos2\"]}</h1> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NormalCurve;","import axios from \"axios\";\r\nimport {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_COL_DATA,\r\n  GET_COL_NAMES,\r\n  STORE_FILENAME,\r\n  SEND_FILE\r\n} from \"./types\";\r\n\r\nexport const addStudyName = (which_database, study_name) => dispatch => {\r\n  const dataToPost = {\r\n    studyName: study_name,\r\n    experiments: []\r\n  };\r\n  // note that the goal of the following step is to show researchers \r\n  // the name of the study they have just created. This is totally doable\r\n  // via a simple this.state written in Dashboard. However, putting it here\r\n  // just makes things more organized and fits well with the rest of the \r\n  // redux structure I have used to create this demo\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\r\n      dataToPost)\r\n    .then(entry => {\r\n      // console.log(entry);\r\n      dispatch({\r\n        type: ADD_STUDY_NAME,\r\n        payload: entry.data.studyName\r\n      });\r\n      alert(\"Study [\" + study_name + \"] is created.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getDBInfo = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_DB_INFO,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      '/info/studyName-' + which_study)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_STUDY_INFO,\r\n        payload: res.data.experiments\r\n      })\r\n    })\r\n}\r\n\r\nexport const saveAddInfo = (which_database, study_name, expt_name, infoType, info) => dispatch => {\r\n  axios\r\n    .put('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      '/info/studyName-' + study_name + '/experiments/exptName-' + expt_name + '/' + infoType,\r\n      info)\r\n    .then(res => {\r\n      console.log(res.data);\r\n    })\r\n} \r\n\r\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\r\n      \"/createCol/\" + col_name)\r\n    .then(res => {\r\n      // we can potentially improve the alert box\r\n      alert(\"Experiment [\" + which_expt + \"] is deployed.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getColData = (which_database, col_name) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      \"/\" + col_name)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_DATA,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getColNames = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_NAMES,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const storeFileName = (fileName) => dispatch => {\r\n  dispatch({\r\n    type: STORE_FILENAME,\r\n    payload: fileName\r\n  })\r\n}\r\n\r\nexport const sendFile = (which_database, file) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \r\n      \"/itemData\", file)\r\n    .then(res => {\r\n      console.log(\"Data sent to DB\");\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\nimport NormalCurve from './NormalCurve';\r\nimport './NormalCurve.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n  getColData\r\n} from '../../../actions/dataActions'\r\n\r\nclass NormalCurveResearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.changeJSON = this.changeJSON.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      dataReceived: false,\r\n      fileNames: [],\r\n      setFileNames: [],\r\n      fileChosen: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getColData(username, \"itemData\");\r\n  }\r\n\r\n  saveFile(type, name, content) {\r\n    this.props.saveFile(type, name, content);\r\n  }\r\n\r\n  handleDrop(acceptedFiles) {\r\n    console.log(acceptedFiles.map(file => {\r\n      acceptedFiles.forEach((file) => {\r\n\r\n        const normalCurveFiles = this.props.dataFlowColData.filter(\r\n          item => item.itemType == \"normal-curve\");\r\n        var fileNames = normalCurveFiles.map(item => item.fileName);\r\n        if (fileNames.includes(file.name)) {\r\n          alert(\"File name already exists. Please upload a file\" +  \r\n            \" with a unique name.\");\r\n          this.setState({ dataReceived: false });\r\n        } else {\r\n          this.handleChange(\"FileName\", file.name, this.props.count);\r\n\r\n          const reader = new FileReader()\r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n            // Do whatever you want with the file contents\r\n            const fileText = reader.result;\r\n            const jsonData = JSON.parse(fileText);\r\n\r\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n            if (this.props.files.length == 0) {\r\n              this.saveFile(\"normal-curve\", file.name, jsonData);\r\n            } else {\r\n              const names = this.props.files.map(item => item.fileName);\r\n              if (!names.includes(file.name)) {\r\n                this.saveFile(\"normal-curve\", file.name, jsonData);\r\n              }\r\n            }\r\n\r\n            const unitHeight = jsonData[\"max-height\"];\r\n            const circRad = jsonData[\"circle-radius\"];\r\n            const distancing = circRad * 4 - 1;\r\n            const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n            const ceilDist = height - 50;\r\n            const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n            const colNum = Math.round(length / distancing);\r\n            this.setState({\r\n              dataReceived: true,\r\n              fileText: fileText,\r\n              jsonData: jsonData, \r\n              svgWidth: length,\r\n              svgHeight: height,\r\n              distancing: distancing,\r\n              dataReceived: true,\r\n              len1: jsonData[\"len1\"],\r\n              colValHeiS: jsonData[\"colValHeiS\"],\r\n              len2: jsonData[\"len2\"],\r\n              colValHeiS2: jsonData[\"colValHeiS2\"],\r\n              distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n              distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n              triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n              triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n              col11: jsonData[\"len2\"] + 1,\r\n              col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n              col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n              col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n              colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n              colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n              overlapVals: jsonData[\"overlapVals\"],\r\n              circRad: circRad,\r\n              ceilDist: ceilDist\r\n            });\r\n          };\r\n          reader.readAsText(file);\r\n        };\r\n      });\r\n    }));\r\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\r\n  }\r\n\r\n  handleSelectedFile() {\r\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\r\n\r\n    const jsonData = this.props.dataFlowColData.filter(item => \r\n      item.fileName == this.state.fileChosen)[0].fileContent;\r\n\r\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\r\n\r\n    const unitHeight = jsonData[\"max-height\"];\r\n    const circRad = jsonData[\"circle-radius\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n    const ceilDist = height - 50;\r\n    const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\r\n    const colNum = Math.round(length / distancing);\r\n    this.setState({\r\n      dataReceived: true,\r\n      // fileText: fileText,\r\n      jsonData: jsonData,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      distancing: distancing,\r\n      dataReceived: true,\r\n      len1: jsonData[\"len1\"],\r\n      colValHeiS: jsonData[\"colValHeiS\"],\r\n      len2: jsonData[\"len2\"],\r\n      colValHeiS2: jsonData[\"colValHeiS2\"],\r\n      distancing1: (jsonData[\"len2\"] + 1) * distancing,\r\n      distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\r\n      triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\r\n      triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\r\n      col11: jsonData[\"len2\"] + 1,\r\n      col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\r\n      col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\r\n      col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\r\n      colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\r\n      colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\r\n      overlapVals: jsonData[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist\r\n    })\r\n  }  \r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(key, value, count) {\r\n    this.props.handleChange(key, value, count);\r\n  }\r\n\r\n  changeJSON(key, value) {\r\n    var data = this.state.jsonData;\r\n    data[key] = Number(value);\r\n    this.handleChange(\"FileContent\", data, this.props.count);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.dataReceived) {\r\n      return (\r\n        <div>\r\n          <NormalCurve \r\n            data={this.state.jsonData} count={this.props.count}\r\n            changeJSON={this.changeJSON} \r\n            handleChange={this.handleChange} />\r\n          <br/>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      const normalCurveFiles = this.props.dataFlowColData.filter(\r\n        item => item.itemType == \"normal-curve\");\r\n      var fileNames = normalCurveFiles.map(item => item.fileName);\r\n      fileNames.unshift(\"Select File\");\r\n      const renderOption = item => <option value={item}>{item}</option>\r\n      const fileOptions = fileNames.map(renderOption);\r\n\r\n      return (\r\n        <div className=\"boxed\">\r\n          Select previously uploaded files: \r\n          <br/>\r\n          <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\r\n            {fileOptions}\r\n          </select>\r\n          <button onClick={this.handleSelectedFile}>OK</button>\r\n          <br/>\r\n          <Dropzone\r\n            onDrop={this.handleDrop}\r\n            accept=\"application/JSON, .json\"\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"dropzone\" })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nNormalCurveResearch.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getColData: PropTypes.func.isRequired,\r\n  dataFlowColData: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowColData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(NormalCurveResearch);","import React, { Component } from 'react';\r\nimport './TabList.css';\r\nimport '../TabBuilder/TabBuilder'\r\nimport TabBuilder from '../TabBuilder/TabBuilder'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ###TODO###: import your component here\r\nimport SliderTab from '../items/Slider/SliderTab';\r\nimport StaticText from '../items/StaticText/StaticText';\r\nimport NormalCurveResearch from '../items/NormalCurve/NormalCurveResearch';\r\n\r\nimport { sendFile } from '../../actions/dataActions'\r\n\r\nconst axios = require('axios');\r\n\r\n// This component allows Psych researchers to configure an experiment \r\nclass TabList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      count: 0,\r\n      output: {},\r\n      deleted: [],\r\n      complete: false,\r\n      exptName: '',\r\n      files: []\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.submitRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n\r\n    this.builderFunction = this.builderFunction.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.outputCreate = this.outputCreate.bind(this);\r\n    this.checkOutput = this.checkOutput.bind(this);\r\n\r\n    this.saveFile = this.saveFile.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  builderFunction = (tabDefine) => {\r\n    var arr = this.state.children;\r\n    // ###TODO###: Add more cases here for TabList to display \r\n    //             Follow the format of the provided components below\r\n    switch (tabDefine) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()} /> \r\n        })\r\n        break;\r\n      case \"static-text\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <StaticText getCount={this.getCount}\r\n                  delete={this.delete} count={this.state.count}\r\n                  handleChange={this.handleChange}\r\n                  key={this.state.count.toString()}/>\r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  files={this.state.files} saveFile={this.saveFile}\r\n                  key={this.state.count.toString()}/> \r\n        })\r\n        break;  \r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\r\n  }\r\n\r\n  // Input: \r\n  //  key: key of JSON object\r\n  //  value: value of JSON object\r\n  //  count: the numerical order of the JSON object\r\n  // Action: put the key and value pair in the final output JSON object\r\n  handleChange(key, value, count) {\r\n    var curOutput = this.state.output;\r\n    curOutput[count.toString()][key] = value;\r\n    this.setState({ output: curOutput });\r\n  }\r\n\r\n  delete(id) {\r\n    var newDelete = this.state.deleted;\r\n    newDelete.push(id);\r\n    this.setState({ deleted: newDelete });\r\n  }\r\n\r\n  getCount(count) {\r\n    return count;\r\n  }\r\n\r\n  // Action: put newly uploaded files into this.state. \r\n  //         All newly uploaded files will be sent to database as JSON objs\r\n  saveFile(type, name, content) {\r\n    const newFile = {\r\n      \"itemType\": type,\r\n      \"fileName\": name,\r\n      \"fileContent\": content\r\n    };\r\n    this.setState({ files: this.state.files.concat(newFile) });\r\n  }\r\n\r\n  // validating input fields. \r\n  // for now: developers will need to add a case below \r\n  checkOutput(obj) {\r\n    var int = 0;\r\n    var complete = true;\r\n    while ((int.toString()) in obj) {\r\n      var elem = obj[int.toString()];\r\n      switch (elem[\"Type\"]) {\r\n        case \"slider\":\r\n          var lowIs = \"lowRange\" in elem;\r\n          var highIs = \"highRange\" in elem;\r\n          var qIs = \"Question\" in elem;\r\n          if (lowIs && highIs && qIs) {\r\n            var lowNum = !isNaN(elem[\"lowRange\"]);\r\n            var highNum = !isNaN(elem[\"highRange\"]);\r\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\r\n            if (highLow && lowNum && highNum) {\r\n              complete = complete && true;\r\n            }\r\n            else {\r\n              complete = false;\r\n            }\r\n          }\r\n          else {\r\n            complete = false;\r\n          }\r\n          break;\r\n        default:\r\n          complete = false;\r\n      case \"normal-curve\":\r\n        complete = true;\r\n      }\r\n      int++;\r\n    }\r\n    return complete;\r\n  }\r\n\r\n  outputCreate() {\r\n    var obj = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\r\n    var validName = this.nameRef.current.value.length > 0;\r\n    // if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\r\n    if (!validName) {\r\n      alert(\"You have not filled out all fields, or have entered an invalid value!\");\r\n    }\r\n    else {\r\n      var finalObj = {};\r\n      finalObj[\"exptName\"] = this.nameRef.current.value;\r\n      var int = 0;\r\n      while (int < this.state.count) {\r\n        if ((int.toString()) in obj) {\r\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n        }\r\n        int++;\r\n      }\r\n      finalObj[\"count\"] = int;\r\n\r\n      const username = this.props.auth.user.username;\r\n      const studyName = this.props.match.params.studyName;\r\n\r\n      if (!this.state.files.length == 0) {\r\n        this.state.files.map(item => this.props.sendFile(username, item))\r\n      };\r\n\r\n      axios.put(\r\n        'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName + '/experiments',\r\n        finalObj\r\n      )\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .then(function (response) {\r\n          alert(\"Your experiment has been successfully created\");\r\n          window.location.reload(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div ref={this.myRef}>\r\n        <h2>Experiment Builder</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <form action=\"/submit\" method=\"POST\" className=\"unit\">\r\n          <p>Enter a name for this experiment </p>\r\n          <input ref={this.nameRef}\r\n            value={this.state.exptName}\r\n            onChange={this.onChange}\r\n            type=\"text\" id=\"userid\" name=\"exptName\" /><br /><br />\r\n        </form>\r\n        {\r\n          this.state.children\r\n            .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n            .map((item) => {\r\n              return item.tab;\r\n            })\r\n        }\r\n        <TabBuilder build={this.builderFunction} />\r\n        <div className=\"extraPad\">\r\n          <button onClick={this.outputCreate} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n        </div>\r\n        <button onClick={() => console.log(this.state.output)}>show final output</button>\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired,\r\n  sendFile: PropTypes.func.isRequired,\r\n  dataFlowFileName: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo,\r\n  dataFlowFileName: state.dataFlow.fileName\r\n});\r\n\r\n// export default TabList;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendFile }\r\n)(TabList);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n            <br/>\r\n            {userIsLoggedIn ? '' : \r\n              <Link to=\"/register\">Register</Link>}\r\n            <br/>\r\n            {userIsLoggedIn ? \r\n              <Link to=\"/dashboard\"> Dashboard </Link> \r\n              : \r\n              <Link to=\"/login\">Login</Link>}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Navbar;\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentWillMount() {\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          Scientist: <b>{this.props.auth.user.username}</b>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n      return(\r\n        <div className=\"container\">\r\n            <h1>\r\n            Welcome to Psych Researcher App!\r\n            </h1>\r\n            Please click on this <p></p>\r\n            <a target=\"_blank\" href=\"https://github.com/statistical-perceptions/statistical-perceptions.github.io\">link</a> <p></p>\r\n            to view researcher user guide. \r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(HomePage);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    };\r\n  };\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form and flask request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Register below</h1>\r\n        <p className=\"grey-text text-darken-1\">\r\n          Already have an account?\r\n                    <Link to=\"/login\">Log in</Link>\r\n        </p>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              // userExists comes from res json message in API\r\n              invalid: errors.userExists\r\n            })} />\r\n          <span className=\"red-text\">{errors.userExists}</span>\r\n          <br />\r\n          <br />\r\n            Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n              invalid: errors.password})} />\r\n          <span className=\"red-text\">{errors.password}</span>\r\n          <br />\r\n          <br />\r\n            Confirm Password:\r\n            <input\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password2})} />\r\n          <span className=\"red-text\">{errors.password2}</span>\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\" className=\"btn\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Register;\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// map state from redux props to use inside components\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n// linking redux to Register component\r\n// withRouter makes it easy to redirect within a component\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // push user to dashboard when they login\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form post and request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    // we are redirecting wthin a component, so we don't need to\r\n    // pass in this.props.history\r\n    this.props.loginUser(userData);\r\n  };\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Log in</h1>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.userNotFound\r\n              // || USERNAME NOT FOUND\r\n            })} />\r\n          <span className=\"red-text\">{errors.userNotFound}</span>\r\n          <br />\r\n          <br />\r\n                    Password:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.pwdIncorrect\r\n            })} />\r\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Log in\"\r\n            className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Login;\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport {\r\n  addStudyName,\r\n  getDBInfo\r\n} from \"../../actions/dataActions\";\r\n\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studyName: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onAddStudy = this.onAddStudy.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // load experiment names when the page loads\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getDBInfo(username); // dbInfo will be in the store now\r\n  }\r\n\r\n  getStudyNames() {\r\n    // TODO. Filter out study names. If an item doesn't have study names\r\n    // as a key, then don't do anything. (wrap everything inside an if)\r\n    const allInfo = this.props.dataFlowDBInfo;\r\n    return allInfo.map(item => {\r\n      const allKeys = Object.keys(item);\r\n      if (allKeys.includes(\"studyName\")) {\r\n        const username = this.props.auth.user.username;\r\n        const link = \"/\" + username + \"/\" + item.studyName;\r\n        return (\r\n          <div className=\"container\">\r\n            <p>\r\n              {item.studyName} <p> </p>\r\n              <Link to={link}>\r\n                View\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddStudy() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.addStudyName(username, this.state.studyName);\r\n    // // alert(\"Your study has been succesfully created.\");\r\n    // window.location.reload(false);\r\n  };\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const username = this.props.auth.user.username;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Dashboard</h2>\r\n\r\n        <form>\r\n          Click on this <p></p>\r\n          <b>\r\n          <a href=\"https://colab.research.google.com/drive/1yleVQB_CrNJ5Z3v-YPatW2XqAD7yS8yp?usp=sharing\" target=\"_blank\">link</a>\r\n          </b> <p></p>\r\n          to configure a <b>normal curve</b> item.\r\n        </form>\r\n\r\n        <form onSubmit={this.onAddStudy}>\r\n          <b>Enter a name for your study:</b> <br/>\r\n          <input type=\"text\" name=\"studyName\"\r\n            value={this.state.studyName} onChange={this.onChange} />\r\n          <input type=\"submit\" value=\"Add Study\" /> <br/>\r\n          Please do <b>not</b> use \"-\" in the name\r\n        </form>\r\n\r\n        <form>\r\n          <br />\r\n          {this.getStudyNames()}\r\n          <br />\r\n        </form>\r\n\r\n        <button\r\n          onClick={this.onLogoutClick}\r\n          className=\"btn\">\r\n          Logout\r\n                </button>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  logoutUser: PropTypes.func.isRequired,\r\n  addStudyName: PropTypes.func.isRequired,\r\n  getDBInfo: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, addStudyName, getDBInfo }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  getStudyInfo,\r\n  createExptCol,\r\n  getColNames,\r\n  saveAddInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ConfigStudy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n\r\n    this.deployExpts = this.deployExpts.bind(this);\r\n    this.changeState = this.changeState.bind(this);\r\n    this.onDeploy = this.onDeploy.bind(this);\r\n  }\r\n  // note: using params to get studyName is probably not good practice. \r\n  // figure out a better way to get info from previous page later, might\r\n  // use cookies? or does react have some way to pass states between pages?\r\n  componentDidMount() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    this.props.getColNames(username);\r\n  }\r\n\r\n  processColNames() {\r\n    const studyName = this.props.match.params.studyName;\r\n    const processedArr = this.props.colNames.filter(name => name !== \"info\");\r\n    const currentStudyExpts = processedArr.filter(name =>\r\n      name.split('-')[0] == studyName);\r\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\r\n    // this.setState({ deployExpts: deployedExpts });\r\n    return deployedExpts;\r\n  }\r\n\r\n  getExptNames() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    // check if the experiments are deployed \r\n    return this.props.experiments.map(expt => {\r\n      const exptName = expt.exptName;\r\n      const condition = expt.condition;\r\n      const surveyLink = expt.link;\r\n\r\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/configs\";\r\n      const partDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsData\";\r\n      const partJSONDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsJSONData\";\r\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \r\n        \"participant-app/#/participant-app/expt/\" + username + \r\n          \"/\" + studyName + \"-\" + exptName\r\n      const previewLink = \"https://statistical-perceptions.github.io/\" + \r\n      \"participant-app/#/participant-app/preview/\" + username + \r\n        \"/\" + studyName + \"-\" + exptName\r\n      const dbLink = \"https://test-api-615.herokuapp.com/api/feedback/\" + \r\n        username + \"/\" + studyName + \"-\" + exptName\r\n\r\n      if (deployed.includes(exptName)) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"boxed\">\r\n              <b>{expt.exptName}</b> <br/>\r\n              <a target=\"_blank\" href={previewLink}>\r\n                Preview Experiment\r\n              </a> <br/><br/>\r\n              <Link to={exptDataLink}>\r\n                <button type=\"button\">\r\n                  Experiment Configs\r\n                </button>\r\n              </Link> <p> </p>\r\n              <Link to={partJSONDataLink}>\r\n                <button type=\"button\">\r\n                  View Participants Data\r\n                </button>\r\n              </Link> <p> </p> \r\n              <br/><br/>\r\n              Condition: <b>{condition}</b>\r\n              <br/><br/>\r\n              <b>Database Link:</b><br/>\r\n              {dbLink} <br/>\r\n              <CopyToClipboard text={dbLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Database link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Experiment Link:</b> <br/>\r\n              {exptPartLink} <br/>\r\n              <CopyToClipboard text={exptPartLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Experiment link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n              <br/><br/>\r\n              <b>Qualtrics Survey Link:</b> <br/>\r\n              {surveyLink} <br/>\r\n              <CopyToClipboard text={surveyLink}>\r\n                <button \r\n                  onClick={() => \r\n                    alert(\"Qualtrics Survey link has been copied to clipboard. \" + \r\n                      \"Paste it into your Qualtrics survey :)\")}>\r\n                  Copy experiment link to clipboard\r\n                </button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"boxed\">\r\n            Experiment: <b>{expt.exptName}</b><br/>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Configurations\r\n              </button>\r\n            </Link><br/><br/>\r\n            <b>Experiment Link:</b><br/>\r\n            {exptPartLink} <br/>\r\n            <CopyToClipboard text={exptPartLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Experiment link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>Database Link:</b><br/>\r\n            {dbLink} <br/>\r\n            <CopyToClipboard text={dbLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Database link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n            <br/><br/>\r\n            <b>TODO</b> <br/>\r\n            Paste the link to demographics qualtrics survey below: <br/>\r\n            <textarea cols=\"60\" rows=\"1\" id={exptName + \"link\"}\r\n              onInput={this.changeState} value={this.state.exptName}></textarea>\r\n            <br/><br/>\r\n            <b>TODO</b> <br/>\r\n            Name the condition of this experiment: <br/>\r\n            <textarea cols=\"60\" rows=\"1\" id={exptName + \"condition\"}\r\n              onInput={this.changeState} value={this.state.condition}></textarea>\r\n            <br/><br/>\r\n            {/* <button onClick={() => console.log(this.state)}>Show State</button><br/> */}\r\n            <button id={expt.exptName} onClick={this.onDeploy}> \r\n              <b>DEPLOY</b>\r\n            </button>\r\n            <br/>\r\n            \r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  changeState(e) {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  onDeploy(e) {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = e.currentTarget.id;\r\n\r\n    const link = this.state[exptName + \"link\"];\r\n    const condition = this.state[exptName + \"condition\"]\r\n\r\n    // process condition first\r\n    const conditionInfo = { \"condition\": condition };\r\n    this.props.saveAddInfo(username, studyName, exptName, \"condition\", conditionInfo);\r\n\r\n    const linkToSend = link + \"?condition=\" + condition\r\n    const linkInfo = { \"link\": linkToSend };\r\n    this.props.saveAddInfo(username, studyName, exptName, \"link\", linkInfo);\r\n    this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\r\n  }\r\n\r\n  // for now deployment simply creates a collection for each experiment \r\n  // that would later store participants data\r\n  deployExpts() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    difference.forEach(expt_name => {\r\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\r\n    });\r\n  }\r\n\r\n  deploy() {\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    if (exptNames.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            No experiments.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            All experiments are deployed.\r\n          </p>\r\n        </div>\r\n      )\r\n    } \r\n    // else {\r\n    //   return (\r\n    //     <div className=\"container\">\r\n    //       <button\r\n    //         class=\"btn\"\r\n    //         onClick={this.deployExpts}>\r\n    //         Deploy: <p></p>\r\n    //           {difference.map(name => { return (<b>[{name}] </b>) })}\r\n    //       </button>\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptBuilderLink = \"/\" + username + \"/\" +\r\n      studyName + \"/exptBuilder\";\r\n    const normalCurvesLink = \"/\" + username + \"/\" +\r\n      studyName + \"/normalCurves\";\r\n    const buildExptLink = \"/\" + username + \"/\" + studyName + \"/newExpt\";\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Study: {this.props.match.params.studyName}</h2>\r\n        <Link to={exptBuilderLink}>\r\n          <button>\r\n            Build an Experiment\r\n          </button>\r\n        </Link>\r\n        <br/>\r\n        <form>\r\n          <h3>\r\n            Your Experiments\r\n          </h3>\r\n          {this.getExptNames()}\r\n          <br /><br />\r\n          {this.deploy()}\r\n          {/* <button onClick={() => console.log(this.state)}>\r\n            Show State\r\n          </button> */}\r\n          <br />\r\n        </form>\r\n        <button onClick={() => console.log(this.state)}>show state</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nConfigStudy.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  auth: PropTypes.object.isRequired,\r\n\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  createExptCol: PropTypes.func.isRequired,\r\n\r\n  getColNames: PropTypes.func.isRequired,\r\n  colNames: PropTypes.array.isRequired,\r\n\r\n  saveAddInfo: PropTypes.func.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\n// props: state\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  // experiments refer to the experiment configurations \r\n  // stored in collection [info] under the user's database\r\n  experiments: state.dataFlow.studyInfo,\r\n  colNames: state.dataFlow.colNames\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo, createExptCol, getColNames, saveAddInfo }\r\n)(ConfigStudy);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ExptConfigs extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(this.props.experiments);\r\n  }\r\n\r\n  showExptData() {\r\n    const thisExpt = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const exptObj =\r\n        this.props.experiments.find(item => item.exptName == thisExpt);\r\n      // const allKeys = Object.keys(exptObj);\r\n      // const questionKeys = allKeys.filter(\r\n      //   x => x != \"userID\" && x != \"count\" &&\r\n      //     x != \"type\" && x != \"exptName\");\r\n      // return questionKeys.map(q => {\r\n      //   const question = JSON.stringify(exptObj[q]);\r\n      //   return (\r\n      //     <div>\r\n      //       {question}\r\n      //     </div>\r\n      //   )\r\n      // })\r\n      const JSONString = JSON.stringify(exptObj);\r\n      return (\r\n        <div>\r\n          {JSONString}\r\n        </div>\r\n      )\r\n    }\r\n    // const exptName = exptObj.exptName;\r\n    // const info = JSON.stringify(exptObj);\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Configuration data: </b>\r\n        <br /><br />\r\n        {this.showExptData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getColData\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass ExptConfigs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.returnRow = this.returnRow.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n  }\r\n\r\n  partDataHeader() {\r\n    var item = {};\r\n    if (!this.props.colData.length == 0) {\r\n      item = this.props.colData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n      <th>{hd}</th>\r\n      )\r\n    })\r\n  }\r\n\r\n  returnRow(answer) {\r\n    var item = {};\r\n    if (!this.props.colData.length == 0) {\r\n      item = this.props.colData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n        <th>\r\n          {answer[hd]}\r\n        </th>\r\n      )\r\n    })\r\n  }\r\n\r\n  showPartData() {\r\n    if (!this.props.colData.length == 0) {\r\n      return this.props.colData.map(answer => {\r\n        return (\r\n          <tr>\r\n            {this.returnRow(answer)}\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div>\r\n        <br /><br />\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Participants data: </b>\r\n        <br /><br />\r\n        <table align=\"center\">\r\n          <tbody>\r\n            <tr>{this.partDataHeader()}</tr>\r\n            {this.showPartData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  getColData\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nconst { parse } = require('json2csv');\r\n\r\nclass ExptConfigs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      finalObj: {}\r\n    };\r\n\r\n    this.makeArr = this.makeArr.bind(this);\r\n    this.showJSONData = this.showJSONData.bind(this);\r\n    this.downloadData = this.downloadData.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getColData(username, colName);\r\n  }\r\n\r\n  flattenObj(obj) {\r\n    var flattendObj = {};\r\n    const flattenObject = (obj, keyName) => {\r\n      Object.keys(obj).forEach(key => {\r\n        var newKey = `${keyName}.${key}` \r\n        if (typeof obj[key] === \"object\") {\r\n          // calling the function again\r\n          flattenObject(obj[key], newKey);\r\n        } else {\r\n          flattendObj[newKey] = obj[key];\r\n        }\r\n      });\r\n    };\r\n    flattenObject(obj, \"\");\r\n\r\n    function renameKey (obj, oldKey, newKey) {\r\n      obj[newKey] = obj[oldKey];\r\n      delete obj[oldKey];\r\n    }\r\n\r\n    const allKeys = Object.keys(flattendObj);\r\n    allKeys.map(k => {\r\n      const oldKey = k;\r\n      const newKey = oldKey.substr(1, oldKey.length);\r\n      renameKey(flattendObj, oldKey, newKey)\r\n    })\r\n\r\n    return flattendObj;\r\n  } \r\n\r\n  makeArr() {\r\n    if (!Object.keys(this.props.colData).length == 0) {\r\n      // console.log(this.props.colData);\r\n      var arr = [];\r\n      var ids = [];\r\n      const arrToProcess = this.props.colData;\r\n      // console.log(arrToProcess);\r\n      arrToProcess.forEach(item => {\r\n        const id = item.participantID;\r\n        const keysInItem = Object.keys(item);\r\n        const qKeys = \r\n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\r\n        \r\n        if (ids.includes(id)) {\r\n          // find that id in arr and update the item\r\n          arr.forEach(ele => {\r\n            if (ele.participantID == id) {\r\n              const prevData = ele;\r\n              qKeys.forEach(k => prevData[k] = item[k]);\r\n              ele = prevData;\r\n            }\r\n          })\r\n        } else {\r\n          // make a new item, put it in arr, and put id in ids \r\n          const doc = {};\r\n          doc[\"participantID\"] = id;\r\n          qKeys.forEach(k => doc[k] = item[k]);\r\n          arr.push(doc);\r\n          ids.push(id);\r\n          // console.log(doc);\r\n        }\r\n      })\r\n      // arr.map(ele => ele = this.flattenObj(ele));\r\n      arr.map(ele => {\r\n        const newEle = this.flattenObj(ele);\r\n        const i = arr.indexOf(ele);\r\n        arr[i] = newEle;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  showJSONData() {\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return arr.map(ele => {\r\n        const line = JSON.stringify(ele);\r\n        return (\r\n          <div>\r\n            <br/>\r\n            {line}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  downloadData() {\r\n    const arr = this.makeArr();\r\n    // if (arr != null) {\r\n    //   console.log(arr);\r\n    // }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    const arr = this.makeArr();\r\n    if (arr != null) {\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/>\r\n          <h4>Participants data: </h4> \r\n          {/* <button onClick={this.downloadData}>See data as csv</button> */}\r\n          <button>\r\n            <CSVLink data={arr} >Download Data as CSV</CSVLink>\r\n          </button>\r\n          {this.showJSONData()}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2>Experiment: {this.props.match.params.exptName}</h2>\r\n          Back to <p> </p>\r\n          <Link to={studyLink}>\r\n            {studyName}\r\n          </Link>\r\n          <br/><br/>\r\n          It seems like there's no participant data yet...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getColData: PropTypes.func.isRequired,\r\n  colData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  colData: state.dataFlow.colData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getColData }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BuildExpt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exptName: '',\r\n      numOfItems: Number,\r\n      showItems: false,\r\n      itemToSelect: [\"slider\", \"normal curve\"]\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.preBuild = this.preBuild.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.toggleShowItems = this.toggleShowItems.bind(this);\r\n    this.inputNumItems = this.inputNumItems.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showItem() {\r\n    console.log(this.state.numOfItems);\r\n    const inputs = [];\r\n    for (let i = 1; i <= this.state.numOfItems; i ++) {\r\n      inputs.push(\r\n        <div>\r\n          Hello\r\n        </div>\r\n      )\r\n    }\r\n    return inputs;\r\n  }\r\n\r\n  toggleShowItems() {\r\n    this.setState({ showItems: true })\r\n  }\r\n\r\n  inputNumItems() {\r\n    return (\r\n      <div>\r\n        How many items do you want to build? <br/><br/>\r\n        <input type=\"text\" name=\"numOfItems\" value={this.state.numOfItems}\r\n          onChange={this.onChange}/> <p></p>\r\n        <button class=\"btn\" onClick={this.toggleShowItems}>Ok</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  preBuild() {\r\n    return (\r\n      <div className=\"container\">\r\n        Enter experiment name: <br/><br/>\r\n        <input type=\"text\" name=\"exptName\" value={this.state.exptName}\r\n          onChange={this.onChange}/> <br/><br/>\r\n          {\r\n            !this.state.showItems && \r\n            <this.inputNumItems/>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Experiment Builder</h3> <br/>\r\n        {this.preBuild()} <br/>\r\n        { this.state.showItems && <this.showItem/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BuildExpt;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport TabList from './components/TabList/TabList';\r\nimport NormalCurveResearch from './components/items/NormalCurve/NormalCurveResearch';\r\n\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport HomePage from './components/layout/HomePage';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login'\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ConfigStudy from './components/Study/ConfigStudy';\r\nimport ExptConfigs from './components/Study/ExptConfigs';\r\nimport PartData from './components/Study/PartData';\r\nimport PartJSONData from './components/Study/PartJSONData';\r\nimport BuildExpt from './components/Study/BuildExpt.jsx';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/survey-builder/\">\r\n        <div className=\"App\">\r\n          < NavBar />\r\n          <br/>\r\n          < Landing />\r\n          < Route exact path=\"/\" component={HomePage} />\r\n          < Route exact path=\"/register\" component={Register} />\r\n          < Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/:expt/participantsData\"\r\n              component={PartData} />\r\n            <PrivateRoute exact path=\"/:username/:studyName\"\r\n              component={ConfigStudy} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\r\n              component={TabList} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/newExpt\" \r\n              component={BuildExpt} />\r\n            {/* <PrivateRoute exact path=\"/:username/:studyName/normalCurves\"\r\n              component={NormalCurveResearch} /> */}\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\r\n              component={ExptConfigs}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsData\"\r\n              component={PartData}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsJSONData\"\r\n              component={PartJSONData}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}