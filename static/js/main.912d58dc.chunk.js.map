{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","components/TabBuilder/TabBuilder.jsx","components/SliderTab/SliderTab.jsx","components/items/NormalCurveResearch.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","actions/dataActions.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartData.js","components/Study/BuildExpt.jsx","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","partData","colNames","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","TabBuilder","selectRef","React","createRef","className","name","id","ref","this","value","onClick","build","current","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","checked","minVal","Number","maxVal","handleChange","bind","onChange","delete","count","getCount","e","setState","target","q","onInput","defaultValue","NormalCurveResearch","rectRef","svgRef","areaRef","dotReturn","curveArea","triMouseDown","triDrag","triUp","handleDrop","x","y","isDown","rectX","down","svgWidth","svgX","distancing","mousePointerRange","triDown","dataReceived","fileNames","setFileNames","xPos","yPos","xPosOrig","CX","distancing1","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","distancing2","preventDefault","svgPre","ptPre","createSVGPoint","clientX","svgPPre","matrixTransform","getScreenCTM","inverse","prevState","triCent","svgPPree","screenX","screenY","svg","pt","svgP","col","Math","round","col21","col22","len2","col11","col12","innerHTML","overlapVals","abs","acceptedFiles","console","log","map","file","forEach","reader","FileReader","onabort","onerror","onload","fileText","result","jsonData","JSON","parse","len1","colValHeiS","colValHeiS2","readAsText","onMouseMove","onMouseUp","width","height","Array","keys","row","dotReturn2","points","onMouseDown","onDrop","accept","getRootProps","getInputProps","fileName","key","TabList","builderFunction","tabDefine","arr","children","push","tab","toString","curOutput","output","newCount","complete","deleted","exptName","myRef","submitRef","nameRef","outputCreate","checkOutput","pos","newVal","newDelete","obj","int","elem","lowNum","isNaN","highNum","parseInt","filter","item","indexOf","validName","length","finalObj","userID","Date","username","match","params","put","then","res","response","alert","window","location","reload","catch","error","studyLink","method","dataFlowDBInfo","Navbar","userIsLoggedIn","Landing","HomePage","Register","onSubmit","newUser","password","password2","registerUser","history","nextProps","noValidate","classnames","invalid","userExists","userData","post","err","data","withRouter","Login","loginUser","userNotFound","pwdIncorrect","class","setItem","jwt_decode","getStudyInfo","which_database","which_study","get","experiments","Dashboard","onLogoutClick","onAddStudy","getDBInfo","Object","includes","link","addStudyName","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployExpts","getColNames","split","deployed","processColNames","expt","exptDataLink","partDataLink","exptPartLink","text","expt_name","createExptCol","exptNames","difference","style","color","exptBuilderLink","getExptNames","deploy","col_name","which_expt","ExptConfigs","thisExpt","exptObj","find","question","stringify","showExptData","returnRow","colName","getPartData","hd","answer","align","partDataHeader","showPartData","BuildExpt","numOfItems","showItems","itemToSelect","preBuild","showItem","toggleShowItems","inputNumItems","inputs","i","jwtToken","currentTime","now","exp","href","App","basename","NavBar","exact","path","PartData","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.912d58dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \r\n// if the user is already logged in \r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        // set up proxy in package.json later\r\n        .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\r\n        .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        // set up proxy in package.json later\r\n        .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\r\n        .then(res => {\r\n        // Save to localStorage\r\n        // Set token to localStorage\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // Set token to Auth header\r\n        setAuthToken(token);\r\n        // Decode token to get user data\r\n        const decoded = jwt_decode(token);\r\n        // Set current user\r\n        dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};","// types are how actions communicate with reducers\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\r\nexport const GET_DB_INFO = \"GET_DB_INFO\";\r\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\r\nexport const GET_PART_DATA = \"GET_PART_DATA\";\r\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\"); \r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default: return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: return action.payload;\r\n        default: return state;\r\n    }\r\n}","import {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_PART_DATA,\r\n  GET_COL_NAMES\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  studyName: '',\r\n  dbInfo: [],\r\n  studyInfo: [],\r\n  partData: [],\r\n  colNames: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_STUDY_NAME:\r\n      return {\r\n        ...state,\r\n        studyName: action.payload\r\n      };\r\n    case GET_DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_STUDY_INFO:\r\n      return {\r\n        ...state,\r\n        studyInfo: action.payload\r\n      };\r\n    case GET_PART_DATA:\r\n      return {\r\n        ...state,\r\n        partData: action.payload\r\n      };\r\n    case GET_COL_NAMES:\r\n      return {\r\n        ...state,\r\n        colNames: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport dataReducer from \"./dataReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  dataFlow: dataReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nclass TabBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"unit\">\r\n        <span>Choose what element to add next</span><br />\r\n        <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\r\n          <option value=\"slider\">Slider</option>\r\n          {/* <option value=\"normal-curve\">Normal Curve</option> */}\r\n        </select>\r\n        <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabBuilder;","import React, { Component } from 'react';\r\nimport './SliderTab.css';\r\n\r\nclass SliderTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sliderRef = React.createRef();\r\n    this.outputRef = React.createRef();\r\n    this.qRef = React.createRef();\r\n    this.minRef = React.createRef();\r\n    this.maxRef = React.createRef();\r\n    this.state = { min: 1, max: 100 }\r\n\r\n    // console.log(this.props);\r\n\r\n    this.state = {\r\n      checked: false,\r\n      minVal: Number,\r\n      maxVal: Number\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    this.props.delete(this.props.count);\r\n  }\r\n\r\n  getCount() {\r\n    this.props.getCount(this.props.count);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleChange(type, q, count) {\r\n    this.props.handleChange(type, q, count);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"unit\">\r\n        <p>Question: <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} ref={this.qRef} type=\"text\" /></p><br/>\r\n        {this.state.minVal}\r\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\r\n        {this.state.maxVal} <br/>\r\n        <p>Minimum: \r\n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \r\n          ref={this.minRef} type=\"text\" \r\n          name=\"minVal\" value={this.state.minVal} onChange={this.onChange}/></p><br/>\r\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\r\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \r\n          ref={this.maxRef} type=\"text\" \r\n          name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}/></p><br/>\r\n        <button onClick={this.delete.bind(this)}>Delete</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderTab;","import React, { Component } from 'react';\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport './NormalCurve.css';\nimport { Link } from \"react-router-dom\";\n\nclass NormalCurveResearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sliderRef = React.createRef();\n    this.rectRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.areaRef = React.createRef();\n\n    this.dotReturn = this.dotReturn.bind(this);\n    this.curveArea = this.curveArea.bind(this);\n    this.triMouseDown = this.triMouseDown.bind(this);\n    this.triDrag = this.triDrag.bind(this);\n    this.triUp = this.triUp.bind(this);\n    this.curveArea = this.curveArea.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n\n    this.state = {\n      x: 0, y: 0, isDown: false,\n      rectX: 12.5,\n      down: false,\n      svgWidth: 500,\n      svgX: 6,\n      distancing: 7,\n      mousePointerRange: 0,\n      triDown: false,\n      dataReceived: false,\n      fileNames: [],\n      setFileNames: []\n    };\n  }\n\n  dotReturn(xPos, yPos) {\n    const xPosOrig = xPos;\n\n    if (xPos > 7) {\n      xPos = 15 - xPos;\n    }\n\n    const CX = this.state.distancing1 + this.state.distancing * xPosOrig + 10;\n    const CY = 140 - this.state.distancing * yPos + 10;\n\n\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\n    var hard;\n\n    if (CX < this.state.rectX) {\n      hard = <circle className=\"icon\" stroke=\"#039\" fill=\"#039\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n    else {\n      hard = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n\n    return hard;\n  }\n\n  dotReturn2(xPos, yPos) {\n    const xPosOrig = xPos;\n\n    if (xPos > 7) {\n      xPos = 15 - xPos;\n    }\n\n    const CX = this.state.distancing2 + this.state.distancing * xPosOrig + 10;\n    const CY = 140 - this.state.distancing * yPos + 10;\n\n\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\n    var hard;\n\n    if (CX < this.state.rectX) {\n      hard = <circle className=\"icon\" stroke=\"#039\" fill=\"#039\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n    else {\n      hard = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r=\"2\"></circle>;\n    }\n\n    return hard;\n  }\n\n  triMouseDown(e) {\n    if (e.type === \"mousedown\") {\n      // console.log(\"MOUSEDOWN\");\n      e.preventDefault();\n      var svgPre = this.svgRef.current;\n      // Set mousePointerRange so that we know the distance\n      // from the mouse tip to the x-value of the triangle\n      // tip\n      var ptPre = svgPre.createSVGPoint();\n      ptPre.x = e.clientX;\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\n      this.setState(prevState => ({\n        // rectX : svgP.x,\n        triDown: true,\n        mousePointerRange: prevState.triCent + this.state.distancing2 - svgPPre.x\n      }));\n      // console.log(this.state);\n    }\n  }\n\n  triDrag(e) {\n    // Set mousePointerRange so that we know the distance\n    // from the mouse tip to the x-value of the triangle\n    // tip\n    var svgPre = this.svgRef.current;\n    var ptPre = svgPre.createSVGPoint();\n    ptPre.x = e.clientX;\n    var svgPPree = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\n    this.setState({ x: e.screenX, y: e.screenY, svgX: svgPPree.x });\n    if (this.state.triDown) {\n      // console.log(\"DRAG CONT'D\");\n      var svg = this.svgRef.current;\n      var pt = svg.createSVGPoint();\n      pt.x = e.clientX;\n      var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n      e.preventDefault();\n      var x = svgP.x - this.state.triCent + this.state.mousePointerRange;\n      // if (x < 6) {\n      //     this.setState({ rectX : 6, col : 0 })\n      // }\n      // else if (x > 250) {\n      //     // this.setState({ rectX : this.state.svgWidth - this.state.cursorWidth})\n      //     this.setState({ rectX : 250 - 187, col : 15});\n      // }\n      // else {\n      //     var colValTemp = Math.round((svgP.x - 6) / 7);\n      //     var newX = this.state.distancing * colValTemp + 6;\n      //     this.setState({ rectX : newX, col : colValTemp });\n      // }\n      var col = Math.round((x - 6) / 7);\n      if (col < 0) {\n        this.setState({ distancing2: 0, col21: 0, col22: this.state.len2 - 1 });\n      }\n      else if (col > 55) {\n        this.setState({ distancing2: this.state.distancing * 55, col21: 58, col22: 69 })\n      }\n      else {\n        this.setState({ distancing2: this.state.distancing * col, col21: col, col22: col + this.state.len2 - 1 });\n      }\n      this.curveArea(col);\n      // this.setState({ distancing2 : x })\n    }\n  }\n\n  triUp(e) {\n    // console.log(\"UP\");\n    if (this.state.triDown) {\n      this.setState({ triDown: false });\n    }\n  }\n\n  curveArea(col) {\n    if (this.state.col11 > this.state.col22 || this.state.col12 < this.state.col21) {\n      this.areaRef.current.innerHTML = 0;\n    }\n    else {\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(this.state.col22 - this.state.col11)];\n    }\n  }\n\n  handleDrop(acceptedFiles) {\n    console.log(acceptedFiles.map(file => {\n      acceptedFiles.forEach((file) => {\n        const reader = new FileReader()\n\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = () => {\n          // Do whatever you want with the file contents\n          const fileText = reader.result;\n          console.log(fileText);\n          const jsonData = JSON.parse(fileText);\n          this.setState({\n            dataReceived: true,\n            len1: jsonData[\"len1\"],\n            colValHeiS: jsonData[\"colValHeiS\"],\n            len2: jsonData[\"len2\"],\n            colValHeiS2: jsonData[\"colValHeiS2\"],\n            distancing1: (jsonData[\"len2\"] + 1) * 7,\n            distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * 7,\n            triCent: Math.round((0.5 * jsonData[\"len2\"]) * 7) + 7,\n            col11: jsonData[\"len2\"] + 1,\n            col12: jsonData[\"len1\"] + jsonData[\"len2\"],\n            col21: 17,\n            col22: 28,\n            overlapVals: jsonData[\"overlapVals\"],\n          })\n        }\n        reader.readAsText(file)\n      })\n    }));\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\n  }\n\n  render() {\n    // const username = this.props.match.params.username;\n    // const studyName = this.props.match.params.studyName;\n    // const studyLink = \"/\" + username + \"/\" + studyName;\n    if (this.state.dataReceived) {\n      return (\n        <div\n          onMouseMove={e => this.triDrag(e)}\n          onMouseUp={e => this.triUp(e)}>\n          <svg width={this.state.svgWidth} height=\"500\" ref={this.svgRef}>\n            {[...Array(this.state.len1).keys()].map(\n              (col) =>\n                [...Array(this.state.colValHeiS[col]).keys()].map(\n                  (row) => this.dotReturn(col, row)\n                )\n            )}\n            {[...Array(this.state.len2).keys()].map(\n              (col) =>\n                [...Array(this.state.colValHeiS2[col]).keys()].map(\n                  (row) => this.dotReturn2(col, row)\n                )\n            )}\n            <polygon\n              points={\n                [\n                  [this.state.triCent + this.state.distancing2 - 15, 175],\n                  [this.state.triCent + this.state.distancing2 + 15, 175],\n                  [this.state.triCent + this.state.distancing2, 160]\n                ]\n              }\n              onMouseDown={e => this.triMouseDown(e)}\n            />\n              Sorry, please use a different browser.\n          </svg>\n          {/* <h1>Area Under Curve: {this.state.colVals[this.state.col]}</h1> */}\n          {/* <h1>Mouse coordinates: { this.state.x } { this.state.y } {this.state.svgX} {Math.round((this.state.svgX - 6) / 7)} | Triangle Tip: {this.state.triCent + this.state.distancing2} | Tip-Mouse Distance: {this.state.mousePointerRange}</h1> */}\n          <h1>Area Under Curve: <span ref={this.areaRef}></span></h1>\n          {/* <input className=\"slider\" type=\"range\" min=\"1\" max=\"15\" defaultValue=\"8\" className=\"slider\" name=\"myRange\" ref={this.sliderRef} /> */}\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n          <br />\n          <Dropzone\n            onDrop={this.handleDrop}\n            // minSize={1024}\n            // maxSize={3072000}\n            accept=\"application/JSON, .json\"\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps({ className: \"dropzone\" })}>\n                <input {...getInputProps()} />\n                <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\n                {/* {!isDragActive && 'Click here or drag and drop a file to upload!'}\n                            {isDragActive && !isDragReject && \"Drop file here\"}\n                            {isDragReject && \"File type not accepted\"} */}\n              </div>\n            )}\n          </Dropzone>\n          <div>\n            <strong>Files:</strong>\n            <ul>\n              {this.state.fileNames.map(fileName => (\n                <li key={fileName}>{fileName}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default NormalCurveResearch;","import React, { Component } from 'react';\r\nimport './TabList.css';\r\nimport '../TabBuilder/TabBuilder'\r\nimport TabBuilder from '../TabBuilder/TabBuilder';\r\nimport SliderTab from '../SliderTab/SliderTab';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport NormalCurveResearch from '../items/NormalCurveResearch';\r\n\r\nconst axios = require('axios');\r\n\r\nclass TabList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      children: [],\r\n      count: 0,\r\n      output: {},\r\n      deleted: [],\r\n      complete: false,\r\n      exptName: ''\r\n    }\r\n    this.myRef = React.createRef();\r\n    this.submitRef = React.createRef();\r\n    this.nameRef = React.createRef();\r\n\r\n    this.builderFunction = this.builderFunction.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.outputCreate = this.outputCreate.bind(this);\r\n    this.checkOutput = this.checkOutput.bind(this);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  builderFunction = (tabDefine) => {\r\n    var arr = this.state.children;\r\n\r\n    switch (tabDefine) {\r\n      case \"slider\":\r\n        arr.push({ \r\n          id: this.state.count, \r\n          tab: <SliderTab getCount={this.getCount} \r\n                  delete={this.delete} count={this.state.count} \r\n                  handleChange={this.handleChange} \r\n                  key={this.state.count.toString()} /> \r\n        })\r\n        break;\r\n      case \"normal-curve\": \r\n        arr.push({\r\n          id: this.state.count,\r\n          tab: <NormalCurveResearch /> \r\n        })\r\n        break;  \r\n      default:\r\n        arr = <div>Unknown Element</div>\r\n    }\r\n\r\n    var curOutput = this.state.output;\r\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\r\n    var newCount = this.state.count + 1;\r\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\r\n  }\r\n\r\n  handleChange(pos, newVal, count) {\r\n    var curOutput = this.state.output;\r\n    curOutput[count.toString()][pos] = newVal;\r\n    this.setState({ output: curOutput });\r\n  }\r\n\r\n  delete(id) {\r\n    var newDelete = this.state.deleted;\r\n    newDelete.push(id);\r\n    this.setState({ deleted: newDelete });\r\n  }\r\n\r\n  getCount(count) {\r\n    return count;\r\n  }\r\n\r\n  checkOutput(obj) {\r\n    var int = 0;\r\n    var complete = true;\r\n    while ((int.toString()) in obj) {\r\n      var elem = obj[int.toString()];\r\n      switch (elem[\"Type\"]) {\r\n        case \"slider\":\r\n          var lowIs = \"lowRange\" in elem;\r\n          var highIs = \"highRange\" in elem;\r\n          var qIs = \"Question\" in elem;\r\n          if (lowIs && highIs && qIs) {\r\n            var lowNum = !isNaN(elem[\"lowRange\"]);\r\n            var highNum = !isNaN(elem[\"highRange\"]);\r\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\r\n            if (highLow && lowNum && highNum) {\r\n              complete = complete && true;\r\n            }\r\n            else {\r\n              complete = false;\r\n            }\r\n          }\r\n          else {\r\n            complete = false;\r\n          }\r\n          break;\r\n        default:\r\n          complete = false;\r\n      }\r\n\r\n      int++;\r\n    }\r\n    return complete;\r\n  }\r\n\r\n  outputCreate() {\r\n    var obj = {};\r\n    this.state.children\r\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\r\n    var validName = this.nameRef.current.value.length > 0;\r\n    if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\r\n      alert(\"You have not filled out all fields, or have entered an invalid value!\");\r\n    }\r\n    else {\r\n      var finalObj = { userID: new Date().toString() };\r\n      finalObj[\"exptName\"] = this.nameRef.current.value;\r\n      var int = 0;\r\n      while (int < this.state.count) {\r\n        if ((int.toString()) in obj) {\r\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\r\n        }\r\n        int++;\r\n      }\r\n      finalObj[\"count\"] = int;\r\n      finalObj[\"type\"] = \"experiment\";\r\n\r\n      const username = this.props.auth.user.username;\r\n      const expt_name = this.state.exptName;\r\n      const studyName = this.props.match.params.studyName;\r\n\r\n      // use the API to add a json object into an array under the study\r\n      axios.put(\r\n        'https://test-api-615.herokuapp.com/api/feedback/' + username +\r\n        '/info/studyName-' + studyName + '/experiments',\r\n        finalObj\r\n      )\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .then(function (response) {\r\n          alert(\"Your experiment has been successfully created\");\r\n          window.location.reload(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"list\" ref={this.myRef}>\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <form action=\"/submit\" method=\"POST\" className=\"unit\">\r\n          <p>Enter a name for this experiment </p>\r\n          <input ref={this.nameRef}\r\n            value={this.state.exptName}\r\n            onChange={this.onChange}\r\n            type=\"text\" id=\"userid\" name=\"exptName\" /><br /><br />\r\n        </form>\r\n        {\r\n          this.state.children\r\n            .filter(item => this.state.deleted.indexOf(item.id) === -1)\r\n            .map((item) => {\r\n              return item.tab;\r\n            })\r\n        }\r\n        <TabBuilder build={this.builderFunction} />\r\n        <div className=\"extraPad\">\r\n          <button onClick={this.outputCreate} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTabList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\n// export default TabList;\r\nexport default connect(mapStateToProps)(TabList);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link to=\"/\">\r\n              Home\r\n            </Link>\r\n            <br/>\r\n            {userIsLoggedIn ? '' : \r\n              <Link to=\"/register\">Register</Link>}\r\n            <br/>\r\n            {userIsLoggedIn ? \r\n              <Link to=\"/dashboard\"> Dashboard </Link> \r\n              : \r\n              <Link to=\"/login\">Login</Link>}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Navbar;\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentWillMount() {\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          Scientist: <b>{this.props.auth.user.username}</b>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n      return(\r\n        <div className=\"container\">\r\n            <h1>\r\n            Welcome to Psych Researcher App!\r\n            </h1>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(HomePage);\r\n\r\n// export default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page,\r\n        // should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        };\r\n    };\r\n\r\n    // <form> element will have a corresponding onChange event that sends value\r\n    // to this.state. Works similarly to html form and flask request. \r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        console.log(newUser);\r\n        this.props.registerUser(newUser, this.props.history); \r\n    };\r\n    render() {\r\n        const errors = this.state.errors;\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Register below</h1>\r\n                <p className=\"grey-text text-darken-1\">\r\n                    Already have an account? \r\n                    <Link to=\"/login\">Log in</Link>\r\n                </p>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    Username:\r\n                    <input \r\n                        onChange={this.onChange} \r\n                        value={this.state.username} \r\n                        error={errors.username} \r\n                        id=\"username\" \r\n                        type=\"text\"\r\n                        className={classnames(\"\", {\r\n                            // userExists comes from res json message in API\r\n                            invalid: errors.userExists\r\n                        })}/>\r\n                    <span className=\"red-text\">{errors.userExists}</span>\r\n                    <br/>\r\n                    <br/>\r\n                    Password: \r\n                    <input \r\n                        onChange={this.onChange} \r\n                        value={this.state.password} \r\n                        error={errors.password} \r\n                        id=\"password\" \r\n                        type=\"password\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.password\r\n                        })}/>\r\n                    <span className=\"red-text\">{errors.password}</span>\r\n                    <br/>\r\n                    <br/>\r\n                    Confirm Password: \r\n                    <input \r\n                        onChange={this.onChange} \r\n                        value={this.state.password2} \r\n                        error={errors.password2} \r\n                        id=\"password2\" \r\n                        type=\"password\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.password2\r\n                        })}/>\r\n                    <span className=\"red-text\">{errors.password2}</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <button type=\"submit\" className=\"btn\">\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n// export default Register;\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\n// map state from redux props to use inside components\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\n// linking redux to Register component\r\n// withRouter makes it easy to redirect within a component\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page,\r\n    // should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // push user to dashboard when they login\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  // <form> element will have a corresponding onChange event that sends value\r\n  // to this.state. Works similarly to html form post and request. \r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    console.log(userData);\r\n    // we are redirecting wthin a component, so we don't need to\r\n    // pass in this.props.history\r\n    this.props.loginUser(userData);\r\n  };\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Log in</h1>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          Username:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n            error={errors.username}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.userNotFound\r\n              // || USERNAME NOT FOUND\r\n            })} />\r\n          <span className=\"red-text\">{errors.userNotFound}</span>\r\n          <br />\r\n          <br />\r\n                    Password:\r\n                    <input\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.pwdIncorrect\r\n            })} />\r\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Log in\"\r\n            class=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n// export default Login;\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import axios from \"axios\";\r\nimport {\r\n  ADD_STUDY_NAME,\r\n  GET_DB_INFO,\r\n  GET_STUDY_INFO,\r\n  GET_PART_DATA,\r\n  GET_COL_NAMES\r\n} from \"./types\";\r\n\r\nexport const addStudyName = (which_database, study_name) => dispatch => {\r\n  const dataToPost = {\r\n    studyName: study_name,\r\n    experiments: []\r\n  };\r\n  // note that the goal of the following step is to show researchers \r\n  // the name of the study they have just created. This is totally doable\r\n  // via a simple this.state written in Dashboard. However, putting it here\r\n  // just makes things more organized and fits well with the rest of the \r\n  // redux structure I have used to create this demo\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\r\n      dataToPost)\r\n    .then(entry => {\r\n      // console.log(entry);\r\n      dispatch({\r\n        type: ADD_STUDY_NAME,\r\n        payload: entry.data.studyName\r\n      });\r\n      alert(\"Study [\" + study_name + \"] is created.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getDBInfo = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_DB_INFO,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      '/info/studyName-' + which_study)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_STUDY_INFO,\r\n        payload: res.data.experiments\r\n      })\r\n    })\r\n}\r\n\r\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\r\n  axios\r\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\r\n      \"/createCol/\" + col_name)\r\n    .then(res => {\r\n      // we can potentially improve the alert box\r\n      alert(\"Experiment [\" + which_expt + \"] is deployed.\");\r\n      window.location.reload(true);\r\n    })\r\n}\r\n\r\nexport const getPartData = (which_database, col_name) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\r\n      \"/\" + col_name)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PART_DATA,\r\n        payload: res.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const getColNames = (which_database) => dispatch => {\r\n  axios\r\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_COL_NAMES,\r\n        payload: res.data\r\n      })\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport {\r\n  addStudyName,\r\n  getDBInfo\r\n} from \"../../actions/dataActions\";\r\n\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studyName: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onAddStudy = this.onAddStudy.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // load experiment names when the page loads\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.getDBInfo(username); // dbInfo will be in the store now\r\n  }\r\n\r\n  getStudyNames() {\r\n    // TODO. Filter out study names. If an item doesn't have study names\r\n    // as a key, then don't do anything. (wrap everything inside an if)\r\n    const allInfo = this.props.dataFlowDBInfo;\r\n    return allInfo.map(item => {\r\n      const allKeys = Object.keys(item);\r\n      if (allKeys.includes(\"studyName\")) {\r\n        const username = this.props.auth.user.username;\r\n        const link = \"/\" + username + \"/\" + item.studyName;\r\n        return (\r\n          <div className=\"container\">\r\n            <p>\r\n              {item.studyName} <p> </p>\r\n              <Link to={link}>\r\n                View\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddStudy() {\r\n    const username = this.props.auth.user.username;\r\n    this.props.addStudyName(username, this.state.studyName);\r\n    // // alert(\"Your study has been succesfully created.\");\r\n    // window.location.reload(false);\r\n  };\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const username = this.props.auth.user.username;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.onAddStudy}>\r\n          <b>Enter a name for your study:</b> <br/>\r\n          <input type=\"text\" name=\"studyName\"\r\n            value={this.state.studyName} onChange={this.onChange} />\r\n          <input type=\"submit\" value=\"Add Study\" /> <br/>\r\n          Please do <b>not</b> use \"-\" in the name\r\n        </form>\r\n\r\n        <form>\r\n          <br />\r\n          {this.getStudyNames()}\r\n          <br />\r\n        </form>\r\n\r\n        <button\r\n          onClick={this.onLogoutClick}\r\n          className=\"btn\">\r\n          Logout\r\n                </button>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nDashboard.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  logoutUser: PropTypes.func.isRequired,\r\n  addStudyName: PropTypes.func.isRequired,\r\n  getDBInfo: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  dataFlowDBInfo: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  dataFlowDBInfo: state.dataFlow.dbInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, addStudyName, getDBInfo }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  getStudyInfo,\r\n  createExptCol,\r\n  getColNames\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ConfigStudy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.deployExpts = this.deployExpts.bind(this);\r\n  }\r\n  // note: using params to get studyName is probably not good practice. \r\n  // figure out a better way to get info from previous page later, might\r\n  // use cookies? or does react have some way to pass states between pages?\r\n  componentWillMount() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    this.props.getColNames(username);\r\n  }\r\n\r\n  processColNames() {\r\n    const studyName = this.props.match.params.studyName;\r\n    const processedArr = this.props.colNames.filter(name => name !== \"info\");\r\n    const currentStudyExpts = processedArr.filter(name =>\r\n      name.split('-')[0] == studyName);\r\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\r\n    // this.setState({ deployExpts: deployedExpts });\r\n    return deployedExpts;\r\n  }\r\n\r\n  getExptNames() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    // check if the experiments are deployed \r\n    return this.props.experiments.map(expt => {\r\n      const exptName = expt.exptName;\r\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/configs\";\r\n      const partDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\r\n        exptName + \"/participantsData\";\r\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \r\n        \"participant-app/#/participant-app/\" + username + \r\n          \"/\" + studyName + \"-\" + exptName\r\n      if (deployed.includes(exptName)) {\r\n        return (\r\n          <div className=\"container\">\r\n            {expt.exptName} <p> </p>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Experiment Configs\r\n              </button>\r\n            </Link> <p> </p>\r\n            <Link to={partDataLink}>\r\n              <button type=\"button\">\r\n                View Participants Data\r\n              </button>\r\n            </Link> <p> </p>\r\n            <CopyToClipboard text={exptPartLink}>\r\n              <button \r\n                onClick={() => \r\n                  alert(\"Experiment link has been copied to clipboard. \" + \r\n                    \"Paste it into your Qualtrics survey :)\")}>\r\n                Copy experiment link to clipboard\r\n              </button>\r\n            </CopyToClipboard>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"container\">\r\n            {expt.exptName} <p> </p>\r\n            <Link to={exptDataLink}>\r\n              <button type=\"button\">\r\n                Experiment Configs\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  // for now deployment simply creates a collection for each experiment \r\n  // that would later store participants data\r\n  deployExpts() {\r\n    const username = this.props.auth.user.username;\r\n    const studyName = this.props.match.params.studyName;\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    difference.forEach(expt_name => {\r\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\r\n    });\r\n  }\r\n\r\n  deploy() {\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    if (exptNames.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            No experiments.\r\n                    </p>\r\n        </div>\r\n      )\r\n    } else if (difference.length == 0) {\r\n      return (\r\n        <div className=\"container\">\r\n          <p style={{ color: \"grey\" }}>\r\n            All experiments are deployed.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <button\r\n            class=\"btn\"\r\n            onClick={this.deployExpts}>\r\n            Deploy: <b>\r\n              {difference.map(name => { return (<p>{name} </p>) })}\r\n            </b>\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptBuilderLink = \"/\" + username + \"/\" +\r\n      studyName + \"/exptBuilder\";\r\n    const normalCurvesLink = \"/\" + username + \"/\" +\r\n      studyName + \"/normalCurves\";\r\n    const buildExptLink = \"/\" + username + \"/\" + studyName + \"/newExpt\";\r\n\r\n    const deployed = this.processColNames();\r\n    const exptNames = this.props.experiments.map(item => item.exptName);\r\n    const difference = exptNames.filter(name => !deployed.includes(name));\r\n    return (\r\n      <div className=\"container\">\r\n        <br />\r\n        <b>{this.props.match.params.studyName}</b>\r\n        <br /><br />\r\n        <Link to={exptBuilderLink}>\r\n          Build an Experiment\r\n        </Link>\r\n        <br/>\r\n        {/* <Link to={buildExptLink}>\r\n          Build a new experiment\r\n        </Link>\r\n        <br/> */}\r\n        {/* <Link to={normalCurvesLink}>\r\n          Build a normal curve item\r\n        </Link> */}\r\n        <form>\r\n          <br />\r\n          Your Experiments\r\n          <br /><br />\r\n          {this.getExptNames()}\r\n          <br /><br />\r\n          {this.deploy()}\r\n          <br />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nConfigStudy.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  auth: PropTypes.object.isRequired,\r\n\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n\r\n  createExptCol: PropTypes.func.isRequired,\r\n\r\n  getColNames: PropTypes.func.isRequired,\r\n  colNames: PropTypes.array.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\n// props: state\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  // experiments refer to the experiment configurations \r\n  // stored in collection [info] under the user's database\r\n  experiments: state.dataFlow.studyInfo,\r\n  colNames: state.dataFlow.colNames\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo, createExptCol, getColNames }\r\n)(ConfigStudy);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getStudyInfo\r\n} from \"../../actions/dataActions\"\r\n\r\nclass ExptConfigs extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    this.props.getStudyInfo(username, studyName);\r\n    // console.log(this.props.experiments);\r\n  }\r\n\r\n  showExptData() {\r\n    const thisExpt = this.props.match.params.exptName;\r\n    if (!this.props.experiments.length == 0) {\r\n      const exptObj =\r\n        this.props.experiments.find(item => item.exptName == thisExpt);\r\n      const allKeys = Object.keys(exptObj);\r\n      const questionKeys = allKeys.filter(\r\n        x => x != \"userID\" && x != \"count\" &&\r\n          x != \"type\" && x != \"exptName\");\r\n      return questionKeys.map(q => {\r\n        const question = JSON.stringify(exptObj[q]);\r\n        return (\r\n          <div>\r\n            {question}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n    // const exptName = exptObj.exptName;\r\n    // const info = JSON.stringify(exptObj);\r\n  }\r\n\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div className=\"container\">\r\n        <br /><br />\r\n                Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Configuration data: </b>\r\n        <br /><br />\r\n        {this.showExptData()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getStudyInfo: PropTypes.func.isRequired,\r\n  experiments: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  experiments: state.dataFlow.studyInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getStudyInfo }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getPartData\r\n} from \"../../actions/dataActions\"\r\n\r\nimport \"./PartData.css\";\r\n\r\nclass ExptConfigs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.returnRow = this.returnRow.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const exptName = this.props.match.params.exptName;\r\n    const colName = studyName + \"-\" + exptName;\r\n    this.props.getPartData(username, colName);\r\n  }\r\n\r\n  partDataHeader() {\r\n    var item = {};\r\n    if (!this.props.partData.length == 0) {\r\n      item = this.props.partData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n      <th>{hd}</th>\r\n      )\r\n    })\r\n  }\r\n\r\n  returnRow(answer) {\r\n    var item = {};\r\n    if (!this.props.partData.length == 0) {\r\n      item = this.props.partData[0];\r\n    }\r\n    const header = Object.keys(item).filter(x => x != \"_id\");\r\n    return header.map(hd => {\r\n      return (\r\n        <th>\r\n          {answer[hd]}\r\n        </th>\r\n      )\r\n    })\r\n  }\r\n\r\n  showPartData() {\r\n    if (!this.props.partData.length == 0) {\r\n      return this.props.partData.map(answer => {\r\n        return (\r\n          <tr>\r\n            {this.returnRow(answer)}\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  // an action to fetch userData from APi for componentWillMount\r\n  render() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.studyName;\r\n    const studyLink = \"/\" + username + \"/\" + studyName;\r\n    return (\r\n      <div>\r\n        <br /><br />\r\n        Back to <p> </p>\r\n        <Link to={studyLink}>\r\n          {studyName}\r\n        </Link>\r\n        <br /><br />\r\n        <b>Participants data: </b>\r\n        <br /><br />\r\n        <table align=\"center\">\r\n          <tbody>\r\n            <tr>{this.partDataHeader()}</tr>\r\n            {this.showPartData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExptConfigs.propTypes = {\r\n  // Proptype.type, the type here must match initialState of reducer\r\n  getPartData: PropTypes.func.isRequired,\r\n  partData: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// interaction between reducer and store (state), connect to props \r\n// for components to use\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  partData: state.dataFlow.partData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPartData }\r\n)(ExptConfigs);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BuildExpt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exptName: '',\r\n      numOfItems: Number,\r\n      showItems: false,\r\n      itemToSelect: [\"slider\", \"normal curve\"]\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.preBuild = this.preBuild.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.toggleShowItems = this.toggleShowItems.bind(this);\r\n    this.inputNumItems = this.inputNumItems.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showItem() {\r\n    console.log(this.state.numOfItems);\r\n    const inputs = [];\r\n    for (let i = 1; i <= this.state.numOfItems; i ++) {\r\n      inputs.push(\r\n        <div>\r\n          Hello\r\n        </div>\r\n      )\r\n    }\r\n    return inputs;\r\n  }\r\n\r\n  toggleShowItems() {\r\n    this.setState({ showItems: true })\r\n  }\r\n\r\n  inputNumItems() {\r\n    return (\r\n      <div>\r\n        How many items do you want to build? <br/><br/>\r\n        <input type=\"text\" name=\"numOfItems\" value={this.state.numOfItems}\r\n          onChange={this.onChange}/> <p></p>\r\n        <button class=\"btn\" onClick={this.toggleShowItems}>Ok</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  preBuild() {\r\n    return (\r\n      <div className=\"container\">\r\n        Enter experiment name: <br/><br/>\r\n        <input type=\"text\" name=\"exptName\" value={this.state.exptName}\r\n          onChange={this.onChange}/> <br/><br/>\r\n          {\r\n            !this.state.showItems && \r\n            <this.inputNumItems/>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Experiment Builder</h3> <br/>\r\n        {this.preBuild()} <br/>\r\n        { this.state.showItems && <this.showItem/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BuildExpt;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport TabList from './components/TabList/TabList';\r\nimport NormalCurveResearch from './components/items/NormalCurveResearch';\r\n\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport HomePage from './components/layout/HomePage';\r\n\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login'\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ConfigStudy from './components/Study/ConfigStudy';\r\nimport ExptConfigs from './components/Study/ExptConfigs';\r\nimport PartData from './components/Study/PartData';\r\nimport BuildExpt from './components/Study/BuildExpt.jsx';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/survey-builder/\">\r\n        <div className=\"App\">\r\n          < NavBar />\r\n          <br/>\r\n          < Landing />\r\n          < Route exact path=\"/\" component={HomePage} />\r\n          < Route exact path=\"/register\" component={Register} />\r\n          < Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/:expt/participantsData\"\r\n              component={PartData} />\r\n            <PrivateRoute exact path=\"/:username/:studyName\"\r\n              component={ConfigStudy} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\r\n              component={TabList} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/newExpt\" \r\n              component={BuildExpt} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/normalCurves\"\r\n              component={NormalCurveResearch} />\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\r\n              component={ExptConfigs}/>\r\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsData\"\r\n              component={PartData}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}