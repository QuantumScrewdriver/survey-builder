{"version":3,"sources":["components/private-route/PrivateRoute.js","utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/dataReducers.js","reducers/index.js","store.js","actions/dataActions.js","components/TabBuilder/TabBuilder.jsx","components/items/Slider/SliderTab.jsx","components/items/StaticText/StaticText.js","components/items/NormalCurve/NormalCurve.jsx","components/items/NormalCurve/sameSquare.png","components/items/NormalCurve/rlyDiff.png","components/items/NormalCurve/bigSmall.png","components/items/NormalCurve/NormalCurveResearch.jsx","components/items/ThresholdSlider/threshold.jsx","components/items/ThresholdSlider/thresholdReasearch.jsx","components/items/Tradeoff/tradeoff.jsx","components/TabList/TabList.jsx","components/layout/NavBar.js","components/layout/Landing.js","components/layout/HomePage.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/Study/ConfigStudy.js","components/Study/ExptConfigs.js","components/Study/PartStudyData.js","components/Study/PartExptData.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","ADD_STUDY_NAME","GET_DB_INFO","GET_STUDY_INFO","GET_COL_DATA","GET_COLS_DATA","GET_COL_NAMES","STORE_FILENAME","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","studyName","dbInfo","studyInfo","colData","colsData","colNames","fileName","combineReducers","action","errors","dataFlow","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","getStudyInfo","which_database","which_study","get","then","res","data","experiments","getColData","col_name","getColNames","TabBuilder","selectRef","React","createRef","importQRef","username","this","qType","allGroups","qSelectedToExptname","length","allExpts","renderOption","item","value","map","qKeys","Object","keys","filter","k","charAt","qArr","forEach","question","csvColName","mapQTypetoQKey","push","q","exptName","qOptions","label","className","name","id","ref","onClick","build","current","importQuestion","SliderTab","sliderRef","outputRef","qRef","minRef","maxRef","min","max","keyRef","checked","minVal","Number","maxVal","handleChange","bind","onChange","appendToKeysArr","delete","count","getCount","e","setState","target","imported","defaultQ","defaultMin","defaultMax","objType","nameType","qNum","onInput","defaultValue","thumbsContainer","justifyContent","display","flexDirection","flexWrap","marginTop","thumbWithDelete","alignItems","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","StaticText","imageRef","images","names","onDeleteImage","handleImageURL","arrRemovedImg","imag","rawURl","a","match_arr","match","alert","imageID","parsedURL","console","log","qToDisplay","includes","previousCount","arrayLength","editing","Images","sth","src","style","key","parsedLink","cols","rows","placeholder","NormalCurve","rectRef","svgRef","areaRef","lengthRef","startPos1Ref","startPos2Ref","graph1keyRef","graph2keyRef","colNumValRef","radiusRef","ticksRef","checkBoxRef","toggleTriRef1","toggleTriRef2","questionKeyRef","legendKey1Ref","legendKey2Ref","color1Ref","color2Ref","arg0ref","arg1ref","arg2ref","arg3ref","arg4ref","arg5ref","arg6ref","dotReturn","curveArea","triMouseDown","triDrag","triUp","lengthSubmit","alterStartPos1","alterStartPos2","svgColReturn","establishStateData","updateRadius","updateTicks","checkChange","toggleTri1","toggleTri2","returnTri1","returnTri2","changeColor1","changeColor2","changeJSON","onUpdateShapes","onFinishShapes","configuredShapes","edgeLim","unitHeight","circRad","len1","len2","distancing","Math","ceil","colNumInit","internalLength","edgeCol","edgeLength","ceilDist","axisStart","axisStartCol","axisWidth","axisEndCol","axisEnd","triCent1","triCent2","triCentCol1","triCentCol2","variance1","abs","variance2","startPos1","distancing1","col11","col12","variance","endCol","colNumVal","tickNum","tickDist","rangeVal","startPos2","distancing2","col21","col22","fixCurve1","fixCurve2","axisLength","parseInt","color1","color2","maxLength","jsonData","x","y","isDown","rectX","down","svgWidth","svgHeight","svgX","colValHeiS","colValHeiS2","mousePointerRange","triDown","colLim1","round","colLim2","overlapVals","colNum","lowVal","showCoors","xPos","yPos","xPosOrig","CX","CY","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","points","onMouseDown","num","dragger","distFromCent","svg","pt","createSVGPoint","clientX","svgP","matrixTransform","getScreenCTM","inverse","preventDefault","col","colRelative","svgPre","ptPre","svgPPre","prevState","svgColPlacement","innerHTML","newLength","newData","newPos","radius","newTickCount","colVal","Boolean","newColor","argArr","post","JSON","parse","replace","window","confirm","defaultVal","defaultCurveVal","dataType","defaultArg","whichArg","configArgs","onMouseMove","onMouseUp","Array","row","dotReturn2","tick","textAnchor","class","backgroundColor","updateColVal","for","sameSquareData","rlyDiffData","bigSmallData","NormalCurveResearch","arg7ref","handleDrop","handleSelectedFile","processJSON","selectNC","dataReceived","fileNames","setFileNames","fileChosen","content","saveFile","acceptedFiles","file","dataFlowColData","itemType","reader","FileReader","onabort","onerror","onload","fileText","result","files","readAsText","fileContent","currentTarget","unshift","sameSquare","alt","rlyDiff","bigSmall","ThresholdCurve","slider2Ref","radRef","stroke1Ref","stroke2Ref","stroke3Ref","stroke4Ref","fill1Ref","refLine6Ref","refLine5Ref","refLine7Ref","refLine8Ref","refLine9Ref","refLine10Ref","fill2Ref","fill3Ref","fill4Ref","distancing3","colWidth","displayVal1","displayVal2","rect1Width","rectHeight","rect2Width","onChange1","line1","line2","line3","onChange2","onChange4","onChange5","onChange6","onChange7","onChange8","dotReturn1","dotReturn3","dotReturn4","rectReturn1","rectReturn2","rectReturn3","rectReturn4","rectReturn5","rectReturn6","rectReturn7","rectReturn8","textReturn","textReturn2","rect3Width","displayArr1","displayArr2","rect4Width","displayArr4","displayArr3","xPos1","xPos2","yPos1","yPos2","x1","x2","y1","y2","dottedLine","i","hard","placement1","strokeWidth","placement2","stroke-dasharray","placement3","placement4","stroke3","stroke4","fill4","stroke1","stroke2","fill2","xPos3","yPos3","xPos4","yPos4","legend","fill1","fill3","rad","sliderPos","sliderPos2","legendKey","labels","thumbDown","topSliderX","topSliderY","bottomSliderX","bottomSliderY","dragger1Pos","dragger2Pos","tedxt","fontSize","color","heightFactor","index","line4","line5","line6","left","changeStroke1","ThresholdCurveResearch","onDrop","accept","getRootProps","getInputProps","Tradeoff","threeGraphRef","graphColRef","refLine1Ref","refLine2Ref","refLine4Ref","refLine3Ref","textReturn1","changeGraphColNumber","changeGraphNumber","rect1Height","rect2Height","rect3Height","rect4Height","rect5Height","rect6Height","rect7Height","rect8Height","rectWidth","rect1Arr","rect2Arr","rect3Arr","rect4Arr","rect5Arr","rect6Arr","rect7Arr","rect8Arr","line1Height","line2Height","line3Height","line4Height","line5Height","line6Height","line7Height","line8Height","threeGraphs","threeGraphOne","fourGraphOne","rectReturn9","rectReturn10","size","list","top","TabList","builderFunction","tabDefine","arr","children","tab","toString","curOutput","output","newCount","complete","deleted","expt","myRef","submitRef","nameRef","outputCreate","checkOutput","configDataToItem","checkValidInput","params","location","newExpt","thisExpt","exptObj","find","questionKey","thisQKey","questionToDisplay","newDelete","newFile","concat","obj","int","elem","lowNum","isNaN","highNum","indexOf","exptItem","finalObj","sendFile","put","response","reload","catch","error","studyLink","method","opacity","history","dataFlowDBInfo","dataFlowFileName","Navbar","userIsLoggedIn","Landing","HomePage","href","Register","onSubmit","newUser","password","password2","registerUser","nextProps","noValidate","classnames","invalid","userExists","userData","err","withRouter","Login","loginUser","userNotFound","pwdIncorrect","setItem","jwt_decode","Dashboard","onLogoutClick","onAddStudy","onDeleteStudy","getDBInfo","link","addStudyName","margin","getStudyNames","study_name","dataToPost","entry","ConfigStudy","deployed","deployExpts","changeState","onDeploy","onChecked","onDeleteExperiment","randomize","putRandomize","thisSudyDeployedExpt","split","database_name","nowState","dataToPut","processColNames","condition","surveyLink","exptDataLink","partExptDataLink","exptPartLink","previewLink","dbLink","exptBuilderLink","text","pathname","colName","conditionInfo","linkInfo","createExptCol","expt_name","exptNames","difference","partStudyDataLink","getExpts","deploy","which_expt","saveAddInfo","infoType","info","ExptConfigs","JSONString","stringify","showExptData","PartStudyData","makeArr","showJSONData","getIndex","partColNames","getColsData","flattendObj","flattenObject","keyName","newKey","oldKey","substr","renameKey","ids","participantID","ele","prevData","doc","newEle","flattenObj","line","allIndex","str","element","document","createElement","Blob","URL","createObjectURL","download","body","appendChild","click","file_name","filename","PartExptData","jwtToken","currentTime","Date","now","exp","App","basename","NavBar","exact","path","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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ChD,EAAKiX,UAAY,EAAKA,UAAUtT,KAAf,gBAnCF,E,sDAsCnB,SAAmB3D,GACf,MAAM,CACFka,QAAU,UACVC,QAAU,UACV8C,YAAc,IACdC,YAAc,IACdC,YAAc,IACdC,YAAa,IACbC,YAAY,IACZC,YAAY,IACZC,YAAY,IACZC,YAAY,IACZC,UAAY,GACZ5C,UAAU,EACVC,WAAW,EACX4C,SAAU,CAAC,IAAK,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,KAAO,KAAO,IACnKC,SAAU,CAAC,iBACT,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACFC,SAAU,CAAC,IACT,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACFC,SAAU,CAAC,IACT,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACFC,SAAU,CAAC,iBACT,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,IACFC,SAAU,CAAC,IAAK,iBACd,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,iBACA,iBACA,iBACA,gBACA,iBACA,gBACA,iBACA,kBAEFC,SAAU,CAAC,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","file":"static/js/main.deda1a7d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Set up private routes so that only logged in users can see configuration components\n * @param {[Object]} param0 [Object containing component, authorization, and else]\n */\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","// this will delete the Authorization header for axios requests \n// if the user is already logged in \n\nimport axios from \"axios\";\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply authorization token to every request if logged in\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","// reducers use types to put data into Redux store\n\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const ADD_STUDY_NAME = \"ADD_STUDY_NAME\";\nexport const GET_DB_INFO = \"GET_DB_INFO\";\nexport const GET_STUDY_INFO = \"GET_STUDY_INFO\";\nexport const GET_COL_DATA = \"GET_COL_DATA\";\nexport const GET_COLS_DATA = \"GET_COLS_DATA\";\nexport const GET_COL_NAMES = \"GET_COL_NAMES\";\n\nexport const STORE_FILENAME = \"STORE_FILENAME\";\nexport const DELETE_FILE = \"DELETE_FILE\";\nexport const SEND_FILE = \"SEND_FILE\";","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n\n/**\n * POST request to api to create a collection with user's login name\n * @param {[Object]} userData [json object contains username and password]\n * @param {[Object]} history [json object contains React history]\n */\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    // set up proxy in package.json later\n    .post(\"https://test-api-615.herokuapp.com/api/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n/**\n * POST request to api to grant jwtToken and login user\n * @param {[Object]} userData [json object contains username and password]\n */\nexport const loginUser = userData => dispatch => {\n  axios\n    // set up proxy in package.json later\n    .post(\"https://test-api-615.herokuapp.com/api/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n/**\n * Set logged in user\n * @param {[Boolean]} decoded [whether the user is logged in]\n */\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n/**\n * Load user\n */\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n/**\n * Logout user\n */\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n  } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\"); \n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default: return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS: return action.payload;\n        default: return state;\n    }\n}","import {\n  ADD_STUDY_NAME,\n  GET_DB_INFO,\n  GET_STUDY_INFO,\n  GET_COL_DATA,\n  GET_COLS_DATA,\n  GET_COL_NAMES,\n  STORE_FILENAME\n} from \"../actions/types\";\n\nconst initialState = {\n  studyName: '',\n  dbInfo: [],\n  studyInfo: [],\n  colData: [],\n  colsData: [],\n  colNames: [],\n  // files: []\n  fileName: ''\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_STUDY_NAME:\n      return {\n        ...state,\n        studyName: action.payload\n      };\n    case GET_DB_INFO:\n      return {\n        ...state,\n        dbInfo: action.payload\n      };\n    case GET_STUDY_INFO:\n      return {\n        ...state,\n        studyInfo: action.payload\n      };\n    case GET_COL_DATA:\n      return {\n        ...state,\n        colData: action.payload\n      };\n    case GET_COLS_DATA:\n      return {\n        ...state,\n        colsData: [...state.colsData, action.payload]\n      };\n    case GET_COL_NAMES:\n      return {\n        ...state,\n        colNames: action.payload\n      };\n    case STORE_FILENAME:\n      return {\n        ...state,\n        fileName: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport dataReducer from \"./dataReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  dataFlow: dataReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\n// ****** IMPORTANT ******\n// uncomment the line including __REDUX_DEVTOOLS_EXTENSION__ when developing\n// comment the line including __REDUX_DEVTOOLS_EXTENSION__ before \n// deploying to gh pages \n// (the line tells the browser to require devtools, but users don't have devtools)\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import axios from \"axios\";\nimport {\n  ADD_STUDY_NAME,\n  GET_DB_INFO,\n  GET_STUDY_INFO,\n  GET_COL_DATA,\n  GET_COLS_DATA,\n  GET_COL_NAMES,\n  STORE_FILENAME\n} from \"./types\";\n\n/**\n * POST request to add a document containing study_name \n * @param {[String]} which_database [name of the database we are sending the document to]\n * @param {[String]} study_name [name of the study (user input)]\n */\nexport const addStudyName = (which_database, study_name) => dispatch => {\n  const dataToPost = {\n    studyName: study_name,\n    experiments: []\n  };\n  // We are adding the document to /info collection\n  axios\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info',\n      dataToPost)\n    .then(entry => {\n      // console.log(entry);\n      dispatch({\n        type: ADD_STUDY_NAME,\n        payload: entry.data.studyName\n      });\n      alert(\"Study [\" + study_name + \"] is created.\");\n      window.location.reload(true);\n    })\n}\n\n/**\n * Get all documents from the /info collection of which_database\n * @param {[String]} which_database [name of the database we want to query]\n */\nexport const getDBInfo = (which_database) => dispatch => {\n  axios\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database + '/info')\n    .then(res => {\n      dispatch({\n        type: GET_DB_INFO,\n        payload: res.data\n      })\n    })\n}\n\n/**\n * Get all experiments associated with which_study\n * @param {[String]} which_database [name of the database we want to query]\n * @param {[String]} which_study [name of the study we want to query]\n */\nexport const getStudyInfo = (which_database, which_study) => dispatch => {\n  axios\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\n      '/info/studyName-' + which_study)\n    .then(res => {\n      dispatch({\n        type: GET_STUDY_INFO,\n        // note we are grabbing the experiments object from res.data\n        payload: res.data.experiments\n      });\n    })\n}\n\n/**\n * PUT request to add additional information to a specific element of the \n * experiments array in a stufy document\n * @param {[String]} which_database [name of the database we want to query]\n * @param {[String]} study_name [name of the study we want to query]\n * @param {[String]} expt_name [experiment name]\n * @param {[String]} infoType [either 'link' or 'condition']\n * @param {[Object]} info [a JSON object in the format {infoType: \"some_data\"}]\n */\nexport const saveAddInfo = (which_database, study_name, expt_name, infoType, info) => dispatch => {\n  axios\n    .put('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \n      '/info/studyName-' + study_name + '/experiments/exptName-' + expt_name + '/' + infoType,\n      info)\n    .then(res => {\n      // Note we don't need to save any data to Redux store\n      console.log(res.data);\n    })\n} \n\n/**\n * POST request to create a collection to store participant data for which_expt\n * @param {[String]} which_database [database name]\n * @param {[String]} col_name [name of the collection to be created]\n * @param {[String]} which_expt [name of the experiment to be deployed]\n */\nexport const createExptCol = (which_database, col_name, which_expt) => dispatch => {\n  axios\n    .post('https://test-api-615.herokuapp.com/api/' + which_database +\n      \"/createCol/\" + col_name)\n    .then(res => {\n      // we can potentially improve the alert box\n      alert(\"Experiment [\" + which_expt + \"] is deployed.\");\n      window.location.reload(true);\n    })\n}\n\n/**\n * Get participant data from col_name \n * @param {[String]} which_database [name of the database we want to query]\n * @param {[String]} col_name [name of the collection we want to query]\n */\nexport const getColData = (which_database, col_name) => dispatch => {\n  axios\n    .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\n      \"/\" + col_name)\n    .then(res => {\n      // set collection data in redux store\n      dispatch({\n        type: GET_COL_DATA,\n        payload: res.data\n      })\n    })\n}\n\n/**\n * Get participant data from col_name then append data to Redux store\n * ( Look at reducers to see the different between getColData and getColsData )\n * @param {[String]} which_database [database name]\n * @param {[String]} col_name [collection name]\n */\nexport const getColsData = (which_database, col_name) => dispatch => {\n  axios\n  .get('https://test-api-615.herokuapp.com/api/feedback/' + which_database +\n    \"/\" + col_name)\n  .then(res => {\n    res.data.forEach(doc => {\n      // append collection data to redux store\n      dispatch({\n        type: GET_COLS_DATA,\n        payload: doc\n      })\n    })\n  })\n}\n\n/**\n * Get all collection names from which_database\n * @param {[String]} which_database [database name]\n */\nexport const getColNames = (which_database) => dispatch => {\n  axios\n    .get('https://test-api-615.herokuapp.com/api/' + which_database + \"/collections\")\n    .then(res => {\n      dispatch({\n        type: GET_COL_NAMES,\n        payload: res.data\n      })\n    })\n}\n\n// forgot if this function is useful\n// export const storeFileName = (fileName) => dispatch => {\n//   dispatch({\n//     type: STORE_FILENAME,\n//     payload: fileName\n//   })\n// }\n\n/**\n * DEPRECATED method: POST request to send user uploaded data to database\n * under the \"itemData\" collection\n * @param {[String]} which_database [database name]\n * @param {[Object]} file [a json object containing experiment item config data]\n */\nexport const sendFile = (which_database, file) => dispatch => {\n  axios\n    .post('https://test-api-615.herokuapp.com/api/feedback/' + which_database + \n      \"/itemData\", file)\n    .then(res => {\n      console.log(\"Data sent to DB\");\n    })\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  getStudyInfo\n} from \"../../actions/dataActions\"\n\nclass TabBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.selectRef = React.createRef();\n    this.importQRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // username and studyName are passed from TabList.jsx\n    const username = this.props.username;\n    const studyName = this.props.studyName;\n    this.props.getStudyInfo(username, studyName);\n  }\n\n  // ###TODO###: add more switch statements here when adding a new component\n  // ###TODO###: the switch statement is not super necessary, pls improve\n  /**\n   * Convert question type to its key in json\n   * @param {[String]} qType [question type]\n   */\n  mapQTypetoQKey(qType) {\n    switch(qType) {\n      case \"slider\":\n        return \"slider-question-key\"\n      case \"static-text\":\n        return \"static-text-key\"\n      case \"normal-curve\":\n        return \"normal-curve-question-key\"\n      case \"threshold\":\n        return \"threshold-key\"\n      case \"tradeoff\":\n        return \"tradeoff-key\"\n      default:\n        return \"\"\n    }\n  }\n\n  render() {\n    var allGroups;\n    // this object contains the mapping from questions to their experiment\n    var qSelectedToExptname = {};\n    // the following block of code generates the content of a dropdown menu\n    // for researchers to select which question them want to import \n    if (!this.props.experiments.length == 0) {\n      const allExpts = this.props.experiments;\n      const renderOption = item => <option value={item}>{item}</option>\n      // per experiment\n      // input: item represents a JSON object containing the configuration data\n      //        of a specific experiment \n      const renderGroup = item => {\n        const qKeys = Object.keys(item).filter(\n          k => k.charAt(0) == \"q\");\n        // qArr contains all csvColNames of all questions in an experiment\n        var qArr = [];\n        qKeys.forEach(k => {\n          const question = item[k]; \n          const qKey = this.mapQTypetoQKey(question[\"Type\"]);\n          const csvColName = question[qKey];\n          qArr.push(csvColName);\n        })\n        qArr.map(q => qSelectedToExptname[q] = item.exptName);\n        const qOptions = qArr.map(renderOption);\n        return (\n          <optgroup label={item.exptName}>\n            {qOptions}\n          </optgroup>\n        )\n      }\n      allGroups = allExpts.map(renderGroup);\n    }\n\n    return (\n      <div>\n        <br/>\n        <div className=\"boxed\"> \n          <span>Choose what element to add next</span><br />\n          <select name=\"tabType\" id=\"tabType\" ref={this.selectRef}>\n            {/* <option value=\"slider\">Slider</option> */}\n            <option value=\"static-text\">Static Text</option>\n            <option value=\"normal-curve\">Normal Curve</option>\n            <option value=\"threshold\">Threshold</option>\n            <option value = \"tradeoff\">Tradeoff</option>\n          </select>\n          <button onClick={() => this.props.build(this.selectRef.current.value)}>+</button>\n          <br/><br/>\n          OR\n          <br/><br/>\n          {\n            this.props.experiments.length == 0 \n            ? \n            <div>\n              Cannot import question from another experiment because there are no \n              experiments in this study yet.\n            </div>\n            :\n            <div>\n              <span>Import a question from another experiment in this study</span><br/>\n              <select name=\"importQue\" id=\"importQue\" ref={this.importQRef}>\n                {allGroups}\n              </select>\n              <button onClick={() => \n                // importQuestion lives in TabList.jsx\n                this.props.importQuestion(\n                  qSelectedToExptname[this.importQRef.current.value], \n                  this.importQRef.current.value)}>\n                +\n              </button>\n            </div>\n          }\n        </div>\n      </div>\n    ) \n  }\n}\n\nTabBuilder.propTypes = {\n  getStudyInfo: PropTypes.func.isRequired,\n  experiments: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  experiments: state.dataFlow.studyInfo\n})\n\nexport default connect(\n  mapStateToProps,\n  { getStudyInfo }\n)(TabBuilder);","import React, { Component } from 'react';\nimport './SliderTab.css';\n\nclass SliderTab extends Component {\n  constructor(props) {\n    super(props);\n    this.sliderRef = React.createRef();\n    this.outputRef = React.createRef();\n    this.qRef = React.createRef();\n    this.minRef = React.createRef();\n    this.maxRef = React.createRef();\n    this.state = { min: 1, max: 100 }\n    this.keyRef = React.createRef();\n\n    // console.log(this.props);\n\n    this.state = {\n      checked: false,\n      minVal: Number,\n      maxVal: Number\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.count);\n  }\n\n  getCount() {\n    this.props.getCount(this.props.count);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleChange(type, q, count) {\n    this.props.handleChange(type, q, count);\n  }\n\n  componentDidMount() {\n    if (this.props.imported) {\n      this.handleChange(\"Question\", this.props.defaultQ, this.props.count);\n      this.handleChange(\"lowRange\", this.props.defaultMin, this.props.count);\n      this.handleChange(\"highRange\", this.props.defaultMax, this.props.count);\n    }\n  }\n\n  appendToKeysArr(objType, nameType, csvColName, count) {\n    this.props.appendToKeysArr(objType, nameType, csvColName, count);\n  }\n\n  render() {\n    const qNum = this.props.count + 1;\n    return (\n      <form className=\"unit\">\n        <br/>\n        Question #{qNum} \n        <br/><br/>\n        <p>Enter your question below:\n        <br/>\n        <input onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)} \n          ref={this.qRef} type=\"text\" defaultValue={this.props.defaultQ}/></p><br/>\n        {/* { this.qRef.current.value == null ? this.props.min : this.qRef.current.value } */}\n        <input type=\"range\" min=\"1\" max=\"100\" defaultValue=\"50\" className=\"slider\" name=\"myRange\" id=\"myRange\" ref={this.sliderRef} />\n        {this.state.maxVal} <br/>\n        <p>Minimum: \n          <input onInput={() => this.handleChange(\"lowRange\", this.minRef.current.value, this.props.count)} \n          ref={this.minRef} type=\"text\" \n          defaultValue={this.props.defaultMin}\n          // name=\"minVal\" value={this.state.minVal} onChange={this.onChange}\n          /></p><br/>\n        {/* <p>Value: <span id=\"slider1\" ref={this.outputRef}></span></p> */}\n        <p>Maximum: <input onInput={() => this.handleChange(\"highRange\", this.maxRef.current.value, this.props.count)} \n          ref={this.maxRef} type=\"text\" \n          defaultValue={this.props.defaultMax}\n          // name=\"maxVal\" value={this.state.maxVal} onChange={this.onChange}\n          /></p>\n        <br/><br/>\n        What csv column name do you want to assign to this question? <br/>\n        <b>Please use letters only, and the name must be unique.</b> <br/>\n        Recommedation: include your experiment name, this question number \n        ({qNum}), and the question type (slider)\n        <br/>\n        <input type=\"text\" ref={this.keyRef} \n          onInput={() => {\n            // this.appendToKeysArr(\n            //   \"csvColNames\", \n            //   \"slider-question-key\", \n            //   this.keyRef.current.value, \n            //   this.props.count);\n            this.handleChange(\"slider-question-key\", this.keyRef.current.value, this.props.count)\n            // this.appendToKeysArr(\n            //   \"keyValuePairs\",\n              \n            // )\n          }}/>\n        <br/><br/>\n        <button onClick={this.delete.bind(this)}>Delete</button>\n      </form>\n    )\n  }\n}\n\nexport default SliderTab;","import React, { Component, useCallback } from 'react';\nimport Dropzone, { useDropzone } from \"react-dropzone\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { \n  getColData\n} from '../../../actions/dataActions'\n\nconst thumbsContainer = {\n  justifyContent: 'center',\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\n\nconst thumbWithDelete = {\n  display: 'inline-block',\n  justifyContent: 'center',\n  alignItems: 'center'\n}\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nclass StaticText extends Component {\n  constructor(props) {\n    super(props);\n    this.qRef = React.createRef();\n    this.keyRef = React.createRef();\n    this.imageRef = React.createRef();\n\n    this.state = {\n      images: [],\n      names: [],\n      count: 0\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onDeleteImage = this.onDeleteImage.bind(this);\n    this.handleImageURL = this.handleImageURL.bind(this);\n  }\n\n  /**\n   * Deletes this element in the parent element if called\n   * @param  \n   * @return \n   */\n  delete() {\n    this.props.delete(this.props.count);\n  }\n\n  /**\n   * Change the state within the normal curve component\n   * @param {Event} e some event\n   */\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  /**\n   * Calls props function handleChange to update parent element\n   * This function is inherited from TabList.jsx\n   * !!! This function updates the final obj to send to the database !!!\n   * @param  {[String]} key [key in parent that must be updated]\n   * @param  {[Any]} value [new value for key]\n   * @param  {[Number]} count [count of current element in parent list]\n   * @return \n   */\n  handleChange(type, q, count) {\n    this.props.handleChange(type, q, count);\n  }\n\n  /**\n   * Deletes the selected \n   * @param {Event} e an event to delete an image\n   */\n  onDeleteImage(e) {\n    // update both state and finalObj\n    const arrRemovedImg = this.state.images.filter(imag => imag.name != e.target.id);\n    this.setState({ images: arrRemovedImg });\n    this.handleChange(\"Images\", arrRemovedImg, this.props.count);\n  }\n\n  /**\n   * Parses the original URL into a URL that's accessible via HTML\n   * @param {String} rawURl the URL to an image on google drive\n   * \n   * Example: \n   * https://drive.google.com/file/d/1EfTINoAi0YUfR_3rECe_vDT9CtfGTlO-/view?usp=sharing\n   * to \n   * https://drive.google.com/uc?export=view&id=1EfTINoAi0YUfR_3rECe_vDT9CtfGTlO-\n   */\n  async handleImageURL(rawURl) {\n    if (rawURl != '') {\n      this.state.count += 1;\n      const reg = 'file/d/(.*)/view?';\n      const match_arr = rawURl.match(reg);\n      if (match_arr == null) {\n        alert(\"Please make sure you have copied a valid URL\");\n      } else {\n        // the actual id is the second element in the array because \n        // the first element includes file/d/ and /view?\n        const imageID = match_arr[1];\n        const parsedURL = \"https://drive.google.com/uc?export=view&id=\" + imageID\n        console.log(parsedURL);\n        // this.getBase64Image(parsedURL);\n        const imag = {\n          'name': this.state.count,\n          'parsedLink': parsedURL,\n          'originalLink': rawURl\n        }\n        await this.setState({ images: [...this.state.images, imag] });\n        this.handleChange(\"Images\", this.state.images, this.props.count);\n        this.imageRef.current.value = '';\n      }\n    }\n  }\n\n  componentDidMount() {\n    // NOTE: this.props.import includes both situations:\n    // - \"import question from another experiment\" \n    //    - (you'll see this when u have at least one experiment in your study)\n    // - \"Edit experiment\"\n    if (this.props.imported) {\n      // we only want to show the actual content because the question is imported \n      // (researchers may want to use different csv column names)\n      this.handleChange(\"Static Text\", this.props.qToDisplay[\"Static Text\"], this.props.count);\n      this.handleChange(\"Images\", this.props.qToDisplay[\"Images\"], this.props.count);\n      if (Object.keys(this.props.qToDisplay).includes(\"Images\")) {\n        this.setState({ images: this.props.qToDisplay[\"Images\"] });\n        var previousCount = 0;\n        const arrayLength = this.props.qToDisplay[\"Images\"].length;\n        if (arrayLength != 0) {\n          const lastElement = this.props.qToDisplay[\"Images\"][arrayLength - 1];\n          previousCount = lastElement.name;\n        }\n        this.setState({ count: previousCount });\n      }\n    }; \n    // Note: this.props.editing only includes \"Edit Experiment\" situation\n    if (this.props.editing) {\n      // we want to show previous csv column names because researchers want to make edits\n      this.handleChange(\"static-text-key\", this.props.qToDisplay[\"static-text-key\"], this.props.count);\n    }; \n  }\n\n  render() {\n    const qNum = this.props.count + 1;\n    // show preview thumbnails\n    var Images = ({sth}) => <img src={''} />\n    if (this.state.images.length != 0) {\n      Images = ({sth}) => (\n        this.state.images.map(imag => (\n          <div style={thumbWithDelete}>\n            <div style={thumb} key={imag.name}>\n              <div style={thumbInner}>\n                <img src={imag.parsedLink} style={{ height: \"100%\", width: \"100%\" }}/>\n              </div>\n            </div>\n            <br/>\n            <button id={imag.name} onClick={this.onDeleteImage}>\n              Delete\n            </button>\n          </div>\n        ))\n      );\n    }\n    return (\n      <div>\n        <div className=\"boxed\">\n          <br/>\n          Question #{qNum} \n          <br/>\n          Enter your static text below: <br/>\n          {\n            this.props.imported\n            ?\n            <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \n            defaultValue={this.props.qToDisplay[\"Static Text\"]}\n            onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\n            </textarea>\n            :\n            <textarea cols=\"60\" rows=\"10\" ref={this.qRef} \n            onInput={() => this.handleChange(\"Static Text\", this.qRef.current.value, this.props.count)}>\n            </textarea>\n          }\n          <br/><br/>\n          Add image(s) by pasting shared Google Drive link below:\n          <br/>\n          <textarea cols=\"60\" rows=\"3\" ref={this.imageRef} \n            onInput={() => this.handleImageURL(this.imageRef.current.value)}\n            placeholder=\"Paste a new link here\">\n          </textarea>\n          <div style={thumbsContainer}>\n            <Images data={''} />\n          </div>\n          <br/>\n          What csv column name do you want to assign to this question? <br/>\n          <b>Please use letters only, the name must be unique, leave no space between letters.</b> <br/>\n          Recommedation: include your experiment name, this question number \n          ({qNum}), and the question type (staticText)\n          <br/>\n          {\n            this.props.editing \n            ? \n            <input type=\"text\" ref={this.keyRef} \n            defaultValue={this.props.qToDisplay[\"static-text-key\"]}\n            onInput={() => this.handleChange(\"static-text-key\", this.keyRef.current.value, this.props.count)}/>\n            :\n            <input type=\"text\" ref={this.keyRef} \n            onInput={() => this.handleChange(\"static-text-key\", this.keyRef.current.value, this.props.count)}/>\n          }\n          <br/><br/>\n          <button onClick={this.delete.bind(this)}>Delete</button>\n        </div>\n        <br/><br/><br/><br/>\n      </div>\n    )\n  }\n}\n\nexport default StaticText;","import React, { Component } from 'react';\nimport './NormalCurve.css';\nimport axios from 'axios';\nimport { json } from 'd3';\n\nclass NormalCurve extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sliderRef = React.createRef();\n    this.rectRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.areaRef = React.createRef();\n    this.lengthRef = React.createRef();\n    this.startPos1Ref = React.createRef();\n    this.startPos2Ref = React.createRef();\n    this.graph1keyRef = React.createRef();\n    this.graph2keyRef = React.createRef();\n    this.qRef = React.createRef();\n    this.colNumValRef = React.createRef();\n    this.radiusRef = React.createRef();\n    this.ticksRef = React.createRef();\n    this.checkBoxRef = React.createRef();\n    this.toggleTriRef1 = React.createRef();\n    this.toggleTriRef2 = React.createRef();\n    this.questionKeyRef = React.createRef();\n    this.legendKey1Ref = React.createRef();\n    this.legendKey2Ref = React.createRef();\n    this.color1Ref = React.createRef();\n    this.color2Ref = React.createRef();\n\n    this.arg0ref = React.createRef();\n    this.arg1ref = React.createRef();\n    this.arg2ref = React.createRef();\n    this.arg3ref = React.createRef();\n    this.arg4ref = React.createRef();\n    this.arg5ref = React.createRef();\n    this.arg6ref = React.createRef();\n\n    this.dotReturn = this.dotReturn.bind(this);\n    this.curveArea = this.curveArea.bind(this);\n    this.triMouseDown = this.triMouseDown.bind(this);\n    this.triDrag = this.triDrag.bind(this);\n    this.triUp = this.triUp.bind(this);\n    this.curveArea = this.curveArea.bind(this);\n    this.lengthSubmit = this.lengthSubmit.bind(this);\n    // this.toggleXVals = this.toggleXVals.bind(this);\n    this.alterStartPos1 = this.alterStartPos1.bind(this);\n    this.alterStartPos2 = this.alterStartPos2.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.svgColReturn = this.svgColReturn.bind(this);\n    this.svgColReturn = this.svgColReturn.bind(this);\n    this.establishStateData = this.establishStateData.bind(this);\n    this.updateRadius = this.updateRadius.bind(this);\n    this.updateTicks = this.updateTicks.bind(this);\n    this.checkChange = this.checkChange.bind(this);\n    this.toggleTri1 = this.toggleTri1.bind(this);\n    this.toggleTri2 = this.toggleTri2.bind(this);\n    this.returnTri1 = this.returnTri1.bind(this);\n    this.returnTri2 = this.returnTri2.bind(this);\n    this.changeColor1 = this.changeColor1.bind(this);\n    this.changeColor2 = this.changeColor2.bind(this);\n    this.changeJSON = this.changeJSON.bind(this);\n    this.onUpdateShapes = this.onUpdateShapes.bind(this);\n    this.onFinishShapes = this.onFinishShapes.bind(this);\n\n    this.state = this.establishStateData(this.props.data);\n  }\n\n  /**\n   * Sets the shared area upon loading\n   * @param\n   * @return\n   */\n  componentDidMount() {\n    this.curveArea();\n  }\n\n  /**\n   * Creates data for state upon loading the element\n   * @param  {[Object]} data [JSON file data for element]\n   * @return {[type]}     [JSON data for setting state]\n   */\n  establishStateData(data) {\n    // console.log(\"establishStateData()\", new Date());\n    const unitHeight = data[\"max-height\"];\n    const circRad = data[\"circle-radius\"];\n    const len1 = data[\"len1\"];\n    const len2 = data[\"len2\"];\n    const distancing = circRad * 4 - 1;\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\n\n    const colNumInit = data[\"axis-length\"];\n    const internalLength = colNumInit * distancing;\n    const edgeCol = Math.ceil(Math.max(len1, len2) / 2);\n    const edgeLength = Math.max(len1, len2) * distancing;\n\n    const ceilDist = height - 50;\n    const length = edgeLength + internalLength;\n    const colNum = Math.ceil(length / distancing);\n\n    const axisStart = Math.ceil(edgeLength / 2);\n    const axisStartCol = edgeCol;\n    const axisWidth = length - ((len1 / 2 + 1) * distancing + (len2 / 2 + 1) * distancing - 1);\n    const axisEndCol = internalLength / distancing;\n    const axisEnd = axisEndCol * distancing;\n\n    const triCent1 = Math.ceil(0.5 * len1) * distancing;\n    const triCent2 = Math.ceil(0.5 * len2) * distancing;\n    const triCentCol1 = Math.ceil(triCent1 / distancing);\n    const triCentCol2 = Math.ceil(triCent2 / distancing);\n\n    const variance1 = Math.abs(Math.ceil(len1 / 2) - axisStartCol);\n    const variance2 = Math.abs(Math.ceil(len2 / 2) - axisStartCol);\n\n    let edgeLim;\n    if (\"edgeLim\" in data) {\n      edgeLim = data[\"edgeLim\"];\n    }\n    else {\n      edgeLim = false;\n    }\n\n    const startPos1 = data[\"startPos1\"];\n    let distancing1 = startPos1 + variance1 - 1;\n    let col11 = startPos1 + variance1;\n    let col12 = startPos1 + len1 - 1;\n    let col11Rel = startPos1;\n\n    let variance = axisStartCol - variance1;\n    if (edgeLim) {\n      if (col11 < axisStartCol - 1) {\n        distancing1 = (axisStartCol - 1) * distancing;\n        col11 = 0;\n        col12 = len1 - 1;\n      }\n      else if (col11 + len1 + 1 > axisStartCol + axisEndCol) {\n        const endCol = axisEndCol - len1;\n        distancing1 = distancing * (axisStartCol + endCol - 1);\n        col11 = endCol;\n        col12 = endCol + len2 - 1;\n      }\n      else {\n        distancing1 = distancing * col11;\n        col11 = col11Rel - variance;\n        col12 = col11Rel - variance + len1 - 1;\n      }\n    }\n    else {\n      // col11 = col11 - 1;\n      if (col11 + triCentCol1 < axisStartCol) {\n        distancing1 = (variance1) * distancing;\n        col11 = 0;\n        col12 = len1 - 1;\n      }\n      else if (col11 + triCentCol1 > axisStartCol + axisEndCol) {\n        distancing1 = distancing * (variance1 + axisEndCol);\n        col11 = axisEndCol;\n        col12 = axisEndCol + len1 - 1;\n      }\n      else {\n        distancing1 = distancing * (col11);\n        col11 = col11Rel;\n        col12 = col11Rel + len1 - 1;\n      }\n    }\n\n    const startPos2 = data[\"startPos2\"];\n    let distancing2 = startPos2 + variance2 - 1;\n    let col21 = startPos2 + variance2;\n    let col22 = startPos2 + len2 - 1;\n    let col21Rel = startPos2;\n\n    variance = axisStartCol - variance2;\n    if (edgeLim) {\n      if (col21 < axisStartCol - 1) {\n        distancing2 = (axisStartCol - 1) * distancing;\n        col21 = 0;\n        col22 = len2 - 1;\n      }\n      else if (col21 + len2 + 1 > axisStartCol + axisEndCol) {\n        const endCol = axisEndCol - len2;\n        distancing2 = distancing * (axisStartCol + endCol);\n        col21 = endCol;\n        col22 = endCol + len2 - 1;\n      }\n      else {\n        distancing2 = distancing * col21;\n        col21 = col21Rel - variance;\n        col22 = col21Rel - variance + len2 - 1;\n      }\n    }\n    else {\n      // col21 = col21 - 1;\n      if (col21 + triCentCol2 < axisStartCol) {\n        distancing2 = (variance2) * distancing;\n        col21 = 0;\n        col22 = len2 - 1;\n      }\n      else if (col21 + triCentCol2 > axisStartCol + axisEndCol) {\n        distancing2 = distancing * (variance2 + axisEndCol - 1);\n        col21 = axisEndCol;\n        col22 = axisEndCol + len2 - 1;\n      }\n      else {\n        distancing2 = distancing * (col21);\n        col21 = col21Rel;\n        col22 = col21Rel + len2 - 1;\n      }\n    }\n\n    let colNumVal;\n    if (\"colNumVal\" in data) {\n      colNumVal = this.props.data[\"colNumVal\"];\n    }\n    else {\n      colNumVal = 1;\n    }\n\n    let tickNum;\n    let tickDist;\n    let rangeVal;\n    const axisLength = colNumInit * colNumVal;\n    if (\"tickNum\" in data && axisLength % (parseInt(data[\"tickNum\"]) + 1) === 0) {\n      tickNum = parseInt(data[\"tickNum\"]);\n      tickDist = colNumInit * distancing / (tickNum + 1);\n      rangeVal = axisLength / (tickNum + 1);\n    }\n    else {\n      tickNum = 0;\n      tickDist = axisLength;\n      rangeVal = axisLength;\n    }\n\n    let fixCurve1;\n    if (\"fixCurve1\" in data) {\n      fixCurve1 = data[\"fixCurve1\"];\n    }\n    else {\n      fixCurve1 = false;\n    }\n\n    let fixCurve2;\n    if (\"fixCurve2\" in data) {\n      fixCurve2 = data[\"fixCurve2\"];\n    }\n    else {\n      fixCurve2 = false;\n    }\n\n    let maxLength = len1;\n    if (len2 > len1) {\n      maxLength = len2;\n    }\n\n    let color1;\n    if (\"color1\" in data) {\n      color1 = data[\"color1\"];\n    }\n    else {\n      color1 = \"CornflowerBlue\";\n    }\n\n    let color2;\n    if (\"color2\" in data) {\n      color2 = data[\"color2\"];\n    }\n    else {\n      color2 = \"Crimson\";\n    }\n\n    return {\n      jsonData: data,\n      axisLength: data[\"axis-length\"],\n      startPos1: data[\"startPos1\"],\n      startPos2: data[\"startPos2\"],\n      x: 0, y: 0, isDown: false,\n      rectX: 12.5,\n      down: false,\n      svgWidth: length,\n      svgHeight: height,\n      svgX: 6,\n      len1: len1,\n      colValHeiS: data[\"colValHeiS\"],\n      len2: len2,\n      colValHeiS2: data[\"colValHeiS2\"],\n      distancing: distancing,\n      distancing1 : distancing1,\n      distancing2: distancing2,\n      triCent1: triCentCol1 * distancing,\n      triCentCol1: triCentCol1,\n      triCent2: triCentCol2 * distancing,\n      triCentCol2: triCentCol2,\n      mousePointerRange: 0,\n      triDown: false,\n      col11: col11,\n      col12: col12,\n      col21: col21,\n      col22: col22,\n      colLim1: Math.round((length - (len1 * distancing)) / distancing),\n      colLim2: Math.round((length - (len2 * distancing)) / distancing),\n      overlapVals: data[\"overlapVals\"],\n      circRad: circRad,\n      ceilDist: ceilDist,\n      axisStart: axisStart,\n      axisStartCol: axisStartCol,\n      axisWidth: axisWidth,\n      axisEnd: axisEnd,\n      axisEndCol: axisEndCol,\n      edgeCol: edgeCol,\n      edgeLength: edgeLength,\n      colNum: colNumInit,\n      variance1: variance1,\n      variance2: variance2,\n      lowVal: this.props.data[\"lowVal\"],\n      showCoors: true,\n      colNumVal: colNumVal,\n      tickNum: tickNum,\n      tickDist: tickDist,\n      rangeVal: rangeVal,\n      edgeLim: edgeLim,\n      fixCurve1: fixCurve1,\n      fixCurve2: fixCurve2,\n      maxLength: maxLength,\n      color1: color1,\n      color2: color2\n    };\n  }\n\n  /**\n   * Returns the <circle> for a given point on the first curve\n   * @param  {[Number]} xPos [X coordinate of circle]\n   * @param  {[Number]} yPos [Y coordinate of circle]\n   * @return {[JSX Object]}  [SVG Circle element]\n   */\n  dotReturn(xPos, yPos) {\n    const xPosOrig = xPos;\n\n    const CX = this.state.distancing1 + this.state.distancing * (xPosOrig + 1) + this.state.circRad - this.state.maxLength + 10;\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\n\n    var hard = \n    <circle \n    // onMouseEnter={e => this.displayTag1(e)}\n    // onMouseLeave={e => this.hideTag1(e)}\n    // onMouseMove={e => this.updateTag1(e)} \n    className=\"icon\" \n    stroke={this.state.color1} \n    fill={this.state.color1}\n    fillOpacity=\"0.3\" \n    strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}>\n    </circle>;\n\n    return hard;\n  }\n\n  /**\n   * Returns the <circle> for a given point on the second curve\n   * @param  {[Number]} xPos [X coordinate of circle]\n   * @param  {[Number]} yPos [Y coordinate of circle]\n   * @return {[JSX Object]}  [SVG Circle element]\n   */\n  dotReturn2(xPos, yPos) {\n    const xPosOrig = xPos;\n\n    const CX = this.state.distancing2 + this.state.distancing * (xPosOrig + 1) + this.state.circRad - this.state.maxLength + 10;\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\n\n    var hard = \n    <circle \n    // onMouseEnter={e => this.displayTag2(e)}\n    // onMouseLeave={e => this.hideTag2(e)}\n    // onMouseMove={e => this.updateTag2(e)} \n    className=\"icon\" \n    stroke={this.state.color2}\n    fill={this.state.color2}\n    fillOpacity=\"0.3\" \n    strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}>\n\n    </circle>;\n\n    return hard;\n  }\n\n  /**\n   * Returns the <polygon> for the triangle of the first curve\n   * @param  \n   * @return {[JSX Object]}  [SVG Polygon element]\n   */\n  returnTri1() {\n    if (this.state.fixCurve1) {\n      return (null);\n    }\n    else {\n      return (\n        <polygon\n            points={\n              [\n                [this.state.triCent1 + this.state.distancing1 - 15, this.state.ceilDist + 35],\n                [this.state.triCent1 + this.state.distancing1 + 15, this.state.ceilDist + 35],\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\n              ]\n            }\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\n          />\n      )\n    }\n  }\n\n  /**\n   * Returns the <polygon> for the triangle of the second curve\n   * @param  \n   * @return {[JSX Object]}  [SVG Polygon element]\n   */\n  returnTri2() {\n    if (this.state.fixCurve2) {\n      return (null);\n    }\n    else {\n      return (\n        <polygon\n            points={\n              [\n                [this.state.triCent2 + this.state.distancing2 - 15, this.state.ceilDist + 35],\n                [this.state.triCent2 + this.state.distancing2 + 15, this.state.ceilDist + 35],\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\n              ]\n            }\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\n          />\n      )\n    }\n  }\n\n  /**\n   * Returns the position of the triangle being dragged as a column relative to the\n   * absolute position and relative to the given starting value\n   * @param  {[Event]} e [Standard event sent when mouse movement occurs in javascript]\n   * @param  {[Number]} Dragger [1 for the first curve, 2 for the second]\n   * @return {[Number, Number]}  [Column position of triangle relative to absolute axis width,\n   * relative to starting position]\n   */\n  svgColReturn(e, dragger) {\n    let distFromCent;\n    let variance;\n    if (dragger === 1) {\n      distFromCent = this.state.triCentCol1;\n      variance = this.state.variance1;\n    }\n    else if (dragger === 2) {\n      distFromCent = this.state.triCentCol2;\n      variance = this.state.variance2;\n    }\n    var svg = this.svgRef.current;\n    var pt = svg.createSVGPoint();\n    pt.x = e.clientX;\n    var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n    e.preventDefault();\n    var x = svgP.x - distFromCent + this.state.mousePointerRange;\n    var col = Math.round((x - this.state.axisStart) / this.state.distancing) + variance;\n    var colRelative = Math.round((x - this.state.axisStart) / this.state.distancing) - 1;\n    // console.log(col, colRelative, variance);\n    return [col, colRelative];\n  }\n\n  /**\n   * Updates state to reflect changes in curve position after mouse movement\n   * @param  {[Number]} col [Position of the curve in the SVG element]\n   * @param  {[Number]} colRelative [Position of the curve on the axis relative to the starting value]\n   * @param  {[Number]} dragger [1 for first curve, 2 for second curve]\n   * @return \n   */\n  svgColPlacement(col, colRelative, dragger) {\n    // console.log(col);\n    // console.log(this.state.axisStartCol);\n    // console.log(this.state.axisStart);\n    if (this.state.edgeLim) {\n      if (dragger === 2) {\n        const variance = this.state.axisStartCol - this.state.variance2;\n        if (col < this.state.axisStartCol - 1) {\n          // console.log(\"edge\");\n          this.setState({ distancing2: (this.state.axisStartCol - 1) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\n        }\n        else if (col + this.state.len2 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\n          const endCol = this.state.axisEndCol - this.state.len2;\n          this.setState({ distancing2: this.state.distancing * (this.state.axisStartCol + endCol - 1), col21: endCol, col22: endCol + this.state.len2 - 1 })\n        }\n        else {\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative - variance, col22: colRelative - variance + this.state.len2 - 1 });\n        }\n        this.curveArea();\n      }\n      else if (dragger === 1) {\n        const variance = this.state.axisStartCol - this.state.variance1;\n        if (col < this.state.axisStartCol - 1) {\n          this.setState({ distancing1: (this.state.axisStartCol - 1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\n        }\n        else if (col + this.state.len1 + 1 > this.state.axisStartCol + this.state.axisEndCol) {\n          const endCol = this.state.axisEndCol - this.state.len1;\n          this.setState({ distancing1: this.state.distancing * (this.state.axisStartCol + endCol - 1), col11: endCol, col12: endCol + this.state.len1 - 1 })\n        }\n        else {\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative - variance, col12: colRelative - variance + this.state.len1 - 1 });\n        }\n        // this.setState({ distancing2 : x })\n      }\n    }\n    else {\n      col = col - 1;\n      if (dragger === 2) {\n        // colRelative = colRelative - this.state.axisStartCol + this.state.variance2;\n        if (col + this.state.triCentCol2 < this.state.axisStartCol) {\n          this.setState({ distancing2: (this.state.variance2) * this.state.distancing, col21: 0, col22: this.state.len2 - 1 });\n        }\n        else if (col + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\n          this.setState({ distancing2: this.state.distancing * (this.state.variance2 + this.state.axisEndCol), col21: this.state.axisEndCol, col22: this.state.axisEndCol + this.state.len2 - 1 })\n        }\n        else {\n          this.setState({ distancing2: this.state.distancing * col, col21: colRelative, col22: colRelative + this.state.len2 - 1 });\n        }\n        this.curveArea();\n      }\n      else if (dragger === 1) {\n        // colRelative = colRelative - this.state.axisStartCol + this.state.variance1;\n        if (col + this.state.triCentCol1 < this.state.axisStartCol) {\n          this.setState({ distancing1: (this.state.variance1) * this.state.distancing, col11: 0, col12: this.state.len1 - 1 });\n        }\n        else if (col + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\n          this.setState({ distancing1: this.state.distancing * (this.state.variance1 + this.state.axisEndCol), col11: this.state.axisEndCol, col12: this.state.axisEndCol + this.state.len1 - 1 })\n        }\n        else {\n          this.setState({ distancing1: this.state.distancing * col, col11: colRelative, col12: colRelative + this.state.len1 - 1 });\n        }\n        this.curveArea();\n      }\n    }\n  }\n\n  /**\n   * Updates state to reflect movement of trianlges and distance from mouse point to triangle center\n   * @param  {[Event]} e [Event called by javascript upon mouse action]\n   * @param  {[Number]} num [1 for first curve, 2 for second curve]\n   * @return \n   */\n  triMouseDown(e, num) {\n    if (e.type === \"mousedown\") {\n      // console.log(\"MOUSEDOWN\");\n      e.preventDefault();\n      var svgPre = this.svgRef.current;\n      // Set mousePointerRange so that we know the distance\n      // from the mouse tip to the x-value of the triangle\n      // tip\n      var ptPre = svgPre.createSVGPoint();\n      ptPre.x = e.clientX;\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\n      if (num === 1) {\n        this.setState(prevState => ({\n          // rectX : svgP.x,\n          triDown: num,\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\n        }));\n      }\n      else if (num === 2) {\n        this.setState(prevState => ({\n          // rectX : svgP.x,\n          triDown: num,\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\n        }));\n      }\n      // console.log(this.state);\n    }\n  }\n\n  /**\n   * Called upon mouse being dragged, calls functions for moving curves\n   * @param  {[Event]} e [Event called by javascript upon mouse action]\n   * @return \n   */\n  triDrag(e) {\n      e.preventDefault();\n      var dragger = this.state.triDown;\n      var cols = this.svgColReturn(e, dragger);\n      var col = cols[0];\n      var colRelative = cols[1]\n      // console.log(col);\n      this.setState(this.svgColPlacement(col, colRelative, dragger));\n      this.curveArea();\n  }\n\n  /**\n   * Informs state the mouse is no longer holding down on a triangle\n   * @param  {[Event]} e [Event called by javascript upon mouse action]\n   * @return \n   */\n  triUp(e) {\n    // console.log(\"UP\");\n    if (this.state.triDown) {\n      this.setState({ triDown: false });\n    }\n  }\n\n  /**\n   * Calculates area of the curve and updates the element that carries area value using ref\n   * @param  \n   * @return \n   */\n  curveArea() {\n    let col11;\n    let col12;\n    let col21;\n    let col22;\n\n    if (this.state.edgeLim) {\n      col11 = this.state.col11;\n      col12 = this.state.col12;\n      col21 = this.state.col21;\n      col22 = this.state.col22;\n    }\n    else {\n      col11 = this.state.col11 + this.state.variance1;\n      col12 = this.state.col12 + this.state.variance1;\n      col21 = this.state.col21 + this.state.variance2;\n      col22 = this.state.col22 + this.state.variance2;\n    }\n\n    if (col11 > col22 || col12 < col21) {\n      this.areaRef.current.innerHTML = 0;\n    }\n    else {\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(col22 - col11)];\n    }\n  }\n\n  /**\n   * Reloads the curve upon a new axis length being entered with new length recorded\n   * @param  {[Number]} newLength [The new length set by the researcher]\n   * @return \n   */\n  lengthSubmit() {\n    const newLength = this.lengthRef.current.value;\n    const internalLength = newLength * this.state.distancing;\n    const length = this.state.edgeLength + internalLength;\n\n    const axisEndCol = internalLength / this.state.distancing;\n    const axisEnd = axisEndCol * this.state.distancing;\n    // console.log(axisEndCol);\n\n    this.changeJSON(\"axis-length\", Number(newLength), this.state.jsonData);\n\n    // this.setState({\n    //   colNum: newLength,\n    //   svgWidth: length,\n    //   axisEndCol: axisEndCol,\n    //   axisEnd: axisEnd\n    // });\n\n    // const col1 = this.state.col11 - 1 + this.state.variance1;\n    // this.svgColPlacement(col1, this.state.col11, 1);\n\n    // const col2 = this.state.col21 - 1 + this.state.variance2;\n    // this.svgColPlacement(col2, this.state.col21, 2);\n    \n    const newData = this.props.data;\n    newData[\"axis-length\"] = newLength;\n    this.setState(this.establishStateData(newData));\n  }\n\n  // toggleXVals() {\n  //   this.setState(prevState => {\n  //     return {\n  //       showCoors: !prevState.showCoors\n  //     }\n  //   })\n  // }\n\n  /**\n   * Manually alters the start position of the first curve when presented\n   * Accounts for possibility of going beyond the axis\n   * @param  {[Number]} newPos [new column position on the axis]\n   * @return\n   */\n  alterStartPos1(newPos) {\n    let startPos1 = parseInt(this.startPos1Ref.current.value) + this.state.variance1;\n    let col11 = startPos1 - this.state.variance1 + 1;\n    let col12 = col11 + this.state.len1 - 1;\n    if (startPos1 + this.state.triCentCol1 < this.state.axisStartCol) {\n      startPos1 = this.state.variance1 - 1;\n      col11 = 0;\n      col12 = this.state.len1 - 1;\n    }\n    else if (startPos1 + this.state.triCentCol1 > this.state.axisStartCol + this.state.axisEndCol) {\n      startPos1 = this.state.variance1 + this.state.axisEndCol - 1;\n      col11 = this.state.axisEndCol;\n      col12 = this.state.axisEndCol + this.state.len1 - 1;\n    }\n\n    this.changeJSON(\"startPos1\", Number(newPos), this.state.jsonData);\n\n    this.setState({\n      distancing1: startPos1 * this.state.distancing,\n      col11: col11,\n      col12: col12\n    });\n  }\n\n  \n  /**\n   * Manually alters the start position of the second curve when presented\n   * Accounts for possibility of going beyond the axis\n   * @param  {[Number]} newPos [new column position on the axis]\n   * @return\n   */\n  alterStartPos2(newPos) {\n    let startPos2 = parseInt(this.startPos2Ref.current.value) + this.state.variance2;\n    let col21 = startPos2 - this.state.variance2 + 1;\n    let col22 = col21 + this.state.len2 - 1;\n    if (startPos2 + this.state.triCentCol2 < this.state.axisStartCol) {\n      startPos2 = this.state.variance2 - 1;\n      col21 = 0;\n      col22 = this.state.len2 - 1;\n    }\n    else if (startPos2 + this.state.triCentCol2 > this.state.axisStartCol + this.state.axisEndCol) {\n      startPos2 = this.state.variance2 + this.state.axisEndCol - 1;\n      col21 = this.state.axisEndCol;\n      col22 = this.state.axisEndCol + this.state.len2 - 1;\n    }\n\n    this.changeJSON(\"startPos2\", Number(newPos), this.state.jsonData);\n\n    this.setState({\n      distancing2: startPos2 * this.state.distancing,\n      col21: col21,\n      col22: col22\n    });\n  }\n  \n  /**\n   * Manually alters the radius of circles on the curves\n   * @param  {[Number]} radius [new radius value]\n   * @return\n   */\n  updateRadius(radius) {\n    // console.log(\"updateRadius\", radius);\n    this.changeJSON(\"circle-radius\", parseInt(radius), this.state.jsonData);\n    let newData = this.state.jsonData;\n    newData[\"circle-radius\"] = parseInt(radius);\n    this.setState(this.establishStateData(newData));\n  }\n\n  /**\n   * Manually alters the number of ticks on the axis\n   * @param  {[Number]} newTickCount [new number of ticks on the axis]\n   * @return\n   */\n  updateTicks(newTickCount) {\n    this.changeJSON(\"tickNum\", parseInt(newTickCount), this.state.jsonData);\n    let newData = this.state.jsonData;\n    newData[\"tickNum\"] = parseInt(newTickCount);\n    this.setState(this.establishStateData(newData));\n  }\n\n  /**\n   * Manually alters the value of a given column (used in calculating length\n   * of the axis and tick values)\n   * @param  {[Number]} colVal [new column value]\n   * @return\n   */\n  updateColVal(colVal) {\n    this.changeJSON(\"colNumVal\", parseInt(colVal), this.state.jsonData);\n    let newData = this.state.jsonData;\n    newData[\"colNumVal\"] = parseInt(colVal);\n    this.setState(this.establishStateData(newData));\n    // this.changeJSON(\"colNumVal\", colVal);\n    // this.setState({ colNum: colVal });\n  }\n\n  /**\n   * Toggles 'edgeLim' value, or whether the curves stop at the edge\n   * @param  \n   * @return\n   */\n  checkChange() {\n    this.setState(prevState => {\n      this.changeJSON(\"edgeLim\", !Boolean(prevState.edgeLim), this.state.jsonData);\n      return {\n        edgeLim: Number(!Boolean(prevState.edgeLim))\n      }\n    })\n    // console.log(this.state.edgeLim);\n  }\n\n  /**\n   * Toggles whether curve 1 is moveable\n   * @param \n   * @return\n   */\n  toggleTri1() {\n    if (!this.state.fixCurve1) {\n      this.setState({startPos1 : this.state.distancing1})\n    }\n    this.setState(prevState => {\n      this.changeJSON(\"fixCurve1\", !prevState.fixCurve1, this.state.jsonData);\n      return {\n        fixCurve1 : !prevState.fixCurve1\n      }});\n  }\n\n  /**\n   * Toggles whether curve 2 is moveable\n   * @param  \n   * @return\n   */\n  toggleTri2() {\n    if (!this.state.fixCurve2) {\n      this.setState({startPos2 : this.state.distancing2})\n    }\n    this.setState(prevState => {\n      this.changeJSON(\"fixCurve2\", !prevState.fixCurve2, this.state.jsonData);\n      return {\n        fixCurve2 : !prevState.fixCurve2\n      }});\n  }\n\n  /**\n   * Updates color of curve 1 based on dropdown menu\n   * @param  \n   * @return\n   */\n  changeColor1() {\n    const newColor = this.color1Ref.current.value;\n    this.changeJSON(\"color1\", newColor, this.state.jsonData);\n    this.setState({ color1 : newColor });\n  }\n\n  /**\n   * Updates color of curve 2 based on dropdown menu\n   * @param  \n   * @return\n   */\n  changeColor2() {\n    const newColor = this.color2Ref.current.value;\n    this.changeJSON(\"color2\", newColor, this.state.jsonData);\n    this.setState({ color2 : newColor });\n  }\n\n  /**\n   * Deletes this element in the parent element if called\n   * @param  \n   * @return \n   */\n  delete() {\n    this.props.delete(this.props.count);\n  }\n  \n  /**\n   * Change the state within the normal curve component\n   * @param {Event} e some event\n   */\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  /**\n   * Calls props function changeJSON when change is made to experiment JSON\n   * that must be recorded\n   * This function is inherited from NormalCurveResearch.jsx\n   * This function is specifically designed to change the shape ocnfiguration\n   * data for the normal curve component. \n   * @param  {[String]} key [key in JSON that must be updated]\n   * @param  {[]} value [New value for key in JSON]\n   * @param  {[]} data XXXXX\n   * @return \n   */\n  changeJSON(key, value, data) {\n    this.props.changeJSON(key, value, data);\n  }\n\n  /**\n   * Calls props function handleChange to update parent element\n   * This function is inherited from TabList.jsx\n   * !!! This function updates the final obj to send to the database !!!\n   * @param  {[String]} key [key in parent that must be updated]\n   * @param  {[Any]} value [new value for key]\n   * @param  {[Number]} count [count of current element in parent list]\n   * @return \n   */\n  handleChange(key, value, count) {\n    this.props.handleChange(key, value, count);\n  }\n\n  /**\n   * Basic setup functions on component creation\n   * @param  \n   * @return \n   */\n  componentDidMount() {\n    // importing component, save imported data\n    if (this.props.imported) {\n      this.handleChange(\"Question\", this.props.qToDisplay[\"Question\"], this.props.count);\n      this.handleChange(\"graph1key\", this.props.qToDisplay[\"graph1key\"], this.props.count);\n      this.handleChange(\"graph2key\", this.props.qToDisplay[\"graph2key\"], this.props.count);\n      this.setState({ configuredShapes: true });\n    } else {\n      this.setState({ configuredShapes: false });\n    }\n    if (this.props.editing) {\n      this.handleChange(\"normal-curve-question-key\", this.props.qToDisplay[\"normal-curve-question-key\"], this.props.count);\n      this.handleChange(\"normal-curve-legend-key1\", this.props.qToDisplay[\"normal-curve-legend-key1\"], this.props.count);\n      this.handleChange(\"normal-curve-legend-key2\", this.props.qToDisplay[\"normal-curve-legend-key2\"], this.props.count);\n    };\n  }\n\n  /**\n   * Updates normal curve shapes upon initial configurations (by researchers)\n   */\n  onUpdateShapes() {\n    const argArr = [\n      Number(this.arg0ref.current.value),\n      Number(this.arg1ref.current.value),\n      Number(this.arg2ref.current.value),\n      Number(this.arg3ref.current.value),\n      Number(this.arg4ref.current.value),\n      Number(this.arg5ref.current.value),\n      Number(this.arg6ref.current.value),\n    ];\n    // console.log(argArr);\n    axios\n      .post('https://test-api-615.herokuapp.com/normalCurve', \n        { argArr: argArr })\n      .then(res => {\n        const jsonData = JSON.parse(res.data.replace(/'/g, '\"'));\n        this.handleChange('FileContent', jsonData, this.props.count);\n        this.setState(this.establishStateData(jsonData));\n      })\n  }\n\n  /**\n   * Updates shapes again when researchers finish configuration\n   */\n  onFinishShapes() {\n    var confirm = window.confirm(\"Are you sure these are the shapes you want?\"+\n      \" Once you click 'OK', you won't be able to change the shapes again\" + \n      \" for this question.\");\n    if (confirm) {\n      this.onUpdateShapes();\n      this.setState({ configuredShapes: true });\n    } else {\n      alert(\"Continue to configure shapes ... \");\n    }\n  }\n\n  render() {\n    const qNum = this.props.count + 1;\n\n    const defaultVal = (qType) => {\n      if (this.props.qToDisplay) {\n        return this.props.qToDisplay[qType]\n      } else {\n        return \"\"\n      }}\n    \n    const defaultCurveVal = (dataType) => {\n      if (this.props.qToDisplay) {\n        return this.props.qToDisplay[\"FileContent\"][dataType]\n      } else {\n        return \"\"\n      }\n    }\n\n    const defaultArg = (whichArg) => {\n      if (this.props.configArgs) {\n        return this.props.configArgs[whichArg];\n      } else {\n        return 0;\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"boxed\">\n          {\n            this.state.configuredShapes\n            ?\n            <h4>You have already configured normal curve shapes for this question.</h4>\n            :\n            <div>\n              <h4>Configure Shapes</h4>\n              <div className=\"args-container\">\n                <div className=\"arg\">\n                  First Curve Height\n                  <br/>\n                  <input type=\"text\" ref={this.arg0ref} \n                    defaultValue={defaultArg(0)}/>\n                </div>\n                <div className=\"arg\">\n                  First Curve Width\n                  <br/>\n                  <input type=\"text\" ref={this.arg1ref}\n                    defaultValue={defaultArg(1)}/>\n                </div>\n                <div className=\"arg\">\n                  Second Curve Height\n                  <br/>\n                  <input type=\"text\" ref={this.arg2ref}\n                    defaultValue={defaultArg(2)}/>\n                </div>\n                <div className=\"arg\">\n                  Second Curve Width\n                  <br/>\n                  <input type=\"text\" ref={this.arg3ref}\n                    defaultValue={defaultArg(3)}/>\n                </div>\n              </div>\n              <div className=\"args-container\">\n                <div className=\"arg\">\n                  Circle Radius <br/> (2 ~ 5 inclusive)\n                  <br/>\n                  <input type=\"text\" ref={this.arg4ref}\n                    defaultValue={defaultArg(4)}/>\n                </div>\n                <div className=\"arg\">\n                  x-axis length <br/> (at least 1)\n                  <br/>\n                  <input type=\"text\" ref={this.arg5ref}\n                    defaultValue={defaultArg(5)}/>\n                </div>\n                <div className=\"arg\">\n                  x-axis lowest value <br/> (at least 0)\n                  <br/>\n                  <input type=\"text\" ref={this.arg6ref}\n                    defaultValue={defaultArg(6)}/>\n                </div>\n              </div>\n              <br/>\n              <button onClick={() => this.onUpdateShapes()}>\n                Update \n              </button> <br/>\n              <button onClick={() => this.onFinishShapes()}>\n                Proceed to Configure Experiment\n              </button>\n            </div>\n          }\n          \n          <div \n            onMouseMove={e => this.triDrag(e)}\n            onMouseUp={e => this.triUp(e)}>\n            <svg width={this.state.svgWidth} height={this.state.svgHeight + 10} ref={this.svgRef}>\n              {/* <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\"/> */}\n              {[...Array(this.state.len1).keys()].map(\n                (col) =>\n                  [...Array(this.state.colValHeiS[col]).keys()].map(\n                    (row) => this.dotReturn(col, row)\n                  )\n              )}\n              {[...Array(this.state.len2).keys()].map(\n                (col) =>\n                  [...Array(this.state.colValHeiS2[col]).keys()].map(\n                    (row) => this.dotReturn2(col, row)\n                  )\n              )}\n              <rect width={this.state.axisEnd}\n                height=\"2\"\n                fill=\"black\"\n                x={this.state.axisStartCol * this.state.distancing - 1}\n                y={this.state.ceilDist + 20} />\n              <rect width=\"2\"\n                height=\"20\"\n                fill=\"black\"\n                x={this.state.axisStartCol * this.state.distancing - 1}\n                y={this.state.ceilDist + 20} />\n              <rect width=\"2\"\n                height=\"20\"\n                fill=\"black\"\n                x={this.state.axisEnd + this.state.axisStartCol * this.state.distancing - 1}\n                y={this.state.ceilDist + 20} />\n              {[...Array(this.state.tickNum).keys()].map(\n                (tick) =>\n                  <rect\n                    width=\"2\"\n                    height=\"20\"\n                    fill=\"black\"\n                    x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \n                    y={this.state.ceilDist + 20}\n                  />\n              )}\n              {[...Array(this.state.tickNum).keys()].map(\n                (tick) =>\n                <text \n                textAnchor=\"middle\" \n                x={this.state.axisStart + (this.state.tickDist * (tick + 1)) - 1} \n                y={this.state.ceilDist + 55}>\n                  {this.state.lowVal + (this.state.rangeVal * (tick + 1))}\n                </text>\n              )}\n              {/* triangle rendering below */}\n              {this.returnTri1()}\n              {this.returnTri2()}\n              <text textAnchor=\"middle\" x={this.state.axisStart} y={this.state.ceilDist + 55}>{this.state.lowVal}</text>\n              <text textAnchor=\"middle\" x={this.state.axisStart + this.state.axisEnd} y={this.state.ceilDist + 55}>{this.state.lowVal + this.state.colNum * this.state.colNumVal}</text>\n                        Sorry, please use a different browser.\n            </svg>\n            <br />\n            <h4>Area Under Curve: <span ref={this.areaRef}></span> | First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h4>\n            {\n              !this.state.configuredShapes\n              ?\n              <div></div>\n              :\n              <div>\n                <div class=\"flex-container\">\n                  <div class=\"flex-child-one\">\n                    Question: <br/>\n                    <textarea class=\"normal-curve-text\" cols=\"60\" rows=\"11\" \n                        ref={this.qRef} \n                        defaultValue={defaultVal(\"Question\")}\n                      onInput={() => this.handleChange(\"Question\", this.qRef.current.value, this.props.count)}>\n                    </textarea>\n\n                    <br/><br/>\n                    <div class=\"color-box\" style={{ backgroundColor: this.state.color1 }}></div>\n                    <input type=\"text\" \n                      ref={this.graph1keyRef} \n                      defaultValue={defaultVal(\"graph1key\")}\n                      onInput={() => this.handleChange(\"graph1key\", this.graph1keyRef.current.value, this.props.count)}></input>\n                    <br />\n\n                    <div class=\"color-box\" style={{ backgroundColor: this.state.color2 }}></div>\n                    <input type=\"text\" \n                      ref={this.graph2keyRef} \n                      defaultValue={defaultVal(\"graph2key\")}\n                      onInput={() => this.handleChange(\"graph2key\", this.graph2keyRef.current.value, this.props.count)}></input>\n                  </div>\n\n                  <div class=\"flex-child-two\">\n                    <br/>\n                    What csv column name do you want to assign to this question?\n                    <br/>\n                    {\n                      this.props.editing\n                      ?\n                      <input type=\"text\" ref={this.questionKeyRef} \n                      defaultValue={this.props.qToDisplay[\"normal-curve-question-key\"]}\n                      onInput={() => this.handleChange(\"normal-curve-question-key\", this.questionKeyRef.current.value, this.props.count)}/>\n                      :\n                      <input type=\"text\" ref={this.questionKeyRef} \n                      onInput={() => this.handleChange(\"normal-curve-question-key\", this.questionKeyRef.current.value, this.props.count)}/>\n                    }\n                    <br/>\n                    <b>Use letters only, the name must be unique, leave no space between letters.</b> <br/>\n                    Recommedation: include your experiment name, this question number \n                    ({qNum}), and the question type (normalCurve)<br/>\n                    <br/>\n                    Please enter the csv column names for the graph key: <br/><br/>\n                    <div class=\"color-box\" style={{ backgroundColor: this.state.color1 }}></div>\n                    {\n                      this.props.editing\n                      ?\n                      <input type=\"text\" ref={this.legendKey1Ref}\n                      defaultValue={this.props.qToDisplay[\"normal-curve-legend-key1\"]}\n                      onInput={() => this.handleChange(\"normal-curve-legend-key1\", this.legendKey1Ref.current.value, this.props.count)}></input>\n                      :\n                      <input type=\"text\" ref={this.legendKey1Ref}\n                      onInput={() => this.handleChange(\"normal-curve-legend-key1\", this.legendKey1Ref.current.value, this.props.count)}></input>\n                    }\n                    <br/>\n                    <div class=\"color-box\" style={{ backgroundColor: this.state.color2 }}></div>\n                    {\n                      this.props.editing\n                      ?\n                      <input type=\"text\" ref={this.legendKey2Ref}\n                      defaultValue={this.props.qToDisplay[\"normal-curve-legend-key2\"]}\n                      onInput={() => this.handleChange(\"normal-curve-legend-key2\", this.legendKey2Ref.current.value, this.props.count)}></input>\n                      :\n                      <input type=\"text\" ref={this.legendKey2Ref}\n                      onInput={() => this.handleChange(\"normal-curve-legend-key2\", this.legendKey2Ref.current.value, this.props.count)}></input>\n                    }\n                  </div>\n                </div>\n\n                <div className=\"flex-child-three\">\n                  <span>Enter the width of the graph (each point in the curves is \n                    equivalent to 1 unit of width) </span>\n                  <input ref={this.lengthRef} type=\"text\" \n                    defaultValue={defaultCurveVal(\"axis-length\")}\n                    // name=\"axisLength\" value={this.state.axisLength} \n                    // onChange={this.onChange}\n                    />\n                  <button onClick={() => {this.lengthSubmit(this.lengthRef.current.value)}}>\n                    Change Width\n                  </button>\n                  <br/>\n\n                  <span>Enter your preferred value for the width of each unit in the curve</span>\n                  <input type=\"text\" ref={this.colNumValRef}\n                    defaultValue={defaultCurveVal(\"colNumVal\")}></input>\n                  <button onClick={() => this.updateColVal(this.colNumValRef.current.value)}>Change Unit Value</button>\n                  <br />\n\n                  <span>Enter your preferred value for the radius of each unit in the curve (2 - 5, inclusive)</span>\n                  <input type=\"text\" ref={this.radiusRef}\n                    defaultValue={defaultCurveVal(\"circle-radius\")}></input>\n                  <button onClick={() => this.updateRadius(this.radiusRef.current.value)}>Change Radius</button>\n                  <br />\n\n                  <span>Enter your preferred number of ticks on the graph (equal parts must be divisible by x-axis width)</span>\n                  <input type=\"text\" ref={this.ticksRef}\n                    defaultValue={defaultCurveVal(\"tickNum\")}></input>\n                  <button onClick={() => this.updateTicks(this.ticksRef.current.value)}>Change Tick Count</button>\n                  <br />\n\n                  <span>Enter your preferred starting position for curve 1, \n                    if you want to change it </span>\n                  <input ref={this.startPos1Ref} type=\"text\" \n                    // name=\"startPos1\" value={this.state.startPos1} onChange={this.onChange}\n                    defaultValue={defaultCurveVal(\"startPos1\")}></input>\n                  <button onClick={() => this.alterStartPos1(this.startPos1Ref.current.value)}>\n                    Change Curve 1\n                  </button>\n                  <br/>\n\n                  <input \n                  type=\"checkbox\"\n                  ref={this.toggleTriRef1}\n                  onChange={this.toggleTri1} checked={this.state.fixCurve1}/>\n                  <label for=\"toggle1\"> Check to lock the position of the curve</label>\n                  <p> || </p>\n\n                  <label for=\"color1\">Choose a color for curve 1: </label>\n                  <select name=\"color1\" id=\"color1\" ref={this.color1Ref}\n                    defaultValue={this.state.color1}>\n                    <option value=\"CornflowerBlue\">Blue</option>\n                    <option value=\"Crimson\">Red</option>\n                    <option value=\"MediumSeaGreen\">Green</option>\n                    <option value=\"LightGray\">Gray</option>\n                  </select>\n                  <input onClick={() => this.changeColor1()} type=\"submit\" value=\"Submit\"></input>\n                  <br />\n\n                  <span>Enter your preferred starting position for curve 2, \n                    if you want to change it </span>\n                  <input ref={this.startPos2Ref} type=\"text\" \n                    // name=\"startPos2\" value={this.state.startPos2} onChange={this.onChange}\n                    defaultValue={defaultCurveVal(\"startPos2\")}></input>\n                  <button onClick={() => this.alterStartPos2(this.startPos2Ref.current.value)}>\n                    Change Curve 2\n                  </button>\n                  <br/>\n\n                  <input \n                  type=\"checkbox\"\n                  ref={this.toggleTriRef2}\n                  onChange={this.toggleTri2} checked={this.state.fixCurve2}/>\n                  <label for=\"toggle2\"> Check to lock the position of the curve</label>\n                  <p> || </p>\n\n                  <label for=\"color2\">Choose a color for curve 2: </label>\n                  <select name=\"color2\" id=\"color2\" ref={this.color2Ref}\n                    defaultValue={this.state.color2}>\n                    <option value=\"CornflowerBlue\">Blue</option>\n                    <option value=\"Crimson\">Red</option>\n                    <option value=\"MediumSeaGreen\">Green</option>\n                    <option value=\"LightGray\">Gray</option>\n                  </select>\n                  <input onClick={() => this.changeColor2()} type=\"submit\" value=\"Submit\"></input>\n                  <br />\n                  <div>\n                    <input \n                      type=\"checkbox\" \n                      id=\"vehicle1\" \n                      name=\"vehicle1\" \n                      value=\"Bike\" \n                      ref={this.checkBoxRef}\n                      onChange={this.checkChange} checked={this.state.edgeLim}/>\n                    <label for=\"vehicle1\">Turn edge limiting on/off</label>\n                  </div>\n                </div>\n              </div>\n            }\n            <br/>\n            <button onClick={this.delete.bind(this)}>Delete</button>\n          </div>\n        </div>\n        <br/><br/><br/>\n      </div>\n    )\n  }\n}\n\nexport default NormalCurve;","export default __webpack_public_path__ + \"static/media/sameSquare.cb15a9a7.png\";","export default __webpack_public_path__ + \"static/media/rlyDiff.8b156fd3.png\";","export default __webpack_public_path__ + \"static/media/bigSmall.51d08596.png\";","import React, { Component } from 'react';\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport NormalCurve from './NormalCurve';\nimport './NormalCurve.css';\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { \n  getColData\n} from '../../../actions/dataActions'\n\nimport sameSquare from './sameSquare.png';\nimport rlyDiff from './rlyDiff.png';\nimport bigSmall from './bigSmall.png';\nconst sameSquareData = require('./sameSquare.json');\nconst rlyDiffData = require('./rlyDiff.json');\nconst bigSmallData = require('./bigSmall.json');\n\nclass NormalCurveResearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.rectRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.areaRef = React.createRef();\n\n    this.arg1ref = React.createRef();\n    this.arg2ref = React.createRef();\n    this.arg3ref = React.createRef();\n    this.arg4ref = React.createRef();\n    this.arg5ref = React.createRef();\n    this.arg6ref = React.createRef();\n    this.arg7ref = React.createRef();\n\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.changeJSON = this.changeJSON.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.delete = this.delete.bind(this);\n    this.processJSON = this.processJSON.bind(this);\n    this.selectNC = this.selectNC.bind(this);\n\n    this.state = {\n      dataReceived: false,\n      fileNames: [],\n      setFileNames: [],\n      fileChosen: '',\n      key: this.props.key\n    };\n  }\n\n  /**\n   * Set this.state to display config data as graphs to the frontend\n   * @param {[Object]} jsonData [json data containing config info for normalCurve]\n   */\n  processJSON(jsonData) {\n    const unitHeight = jsonData[\"max-height\"];\n    const circRad = jsonData[\"circle-radius\"];\n    const distancing = circRad * 4 - 1;\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\n    const ceilDist = height - 50;\n    const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\n    const colNum = Math.round(length / distancing);\n    this.setState({\n      dataReceived: true,\n      // fileText: fileText,\n      jsonData: jsonData,\n      svgWidth: length,\n      svgHeight: height,\n      distancing: distancing,\n      dataReceived: true,\n      len1: jsonData[\"len1\"],\n      colValHeiS: jsonData[\"colValHeiS\"],\n      len2: jsonData[\"len2\"],\n      colValHeiS2: jsonData[\"colValHeiS2\"],\n      distancing1: (jsonData[\"len2\"] + 1) * distancing,\n      distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\n      triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\n      triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\n      col11: jsonData[\"len2\"] + 1,\n      col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\n      col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\n      col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\n      colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\n      colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\n      overlapVals: jsonData[\"overlapVals\"],\n      circRad: circRad,\n      ceilDist: ceilDist\n    });\n  }\n\n  componentDidMount() {\n    // importing component\n    // console.log(this.props);\n    if (this.props.imported) {\n      // if this normal curve component is imported, we need to append those \n      // associating files to final output with handleChange()\n      this.handleChange(\"FileName\", this.props.qToDisplay[\"FileName\"], this.props.count);\n      const jsonData = this.props.qToDisplay[\"FileContent\"];\n      this.handleChange(\"FileContent\", jsonData, this.props.count);\n      this.setState({ imported: true });\n      // this.processJSON(jsonData);\n    }\n    const username = this.props.auth.user.username;\n    this.props.getColData(username, \"itemData\");\n  }\n\n  // Inherited function from TabList.jsx\n  saveFile(type, name, content) {\n    this.props.saveFile(type, name, content);\n  }\n\n  /**\n   * DEPRECATED since we are not doing drag n drop anymore\n   * Set this.state based on file data and save file data to final output\n   * @param {[File]} acceptedFiles [a file in .json format]\n   */\n  handleDrop(acceptedFiles) {\n    console.log(acceptedFiles.map(file => {\n      acceptedFiles.forEach((file) => {\n\n        const normalCurveFiles = this.props.dataFlowColData.filter(\n          item => item.itemType == \"normal-curve\");\n        var fileNames = normalCurveFiles.map(item => item.fileName);\n        if (fileNames.includes(file.name)) {\n          alert(\"File name already exists. Please upload a file\" +  \n            \" with a unique name.\");\n          this.setState({ dataReceived: false });\n        } else {\n          this.handleChange(\"FileName\", file.name, this.props.count);\n\n          const reader = new FileReader()\n          reader.onabort = () => console.log('file reading was aborted')\n          reader.onerror = () => console.log('file reading has failed')\n          reader.onload = () => {\n            // Do whatever you want with the file contents\n            const fileText = reader.result;\n            const jsonData = JSON.parse(fileText);\n\n            this.handleChange(\"FileContent\", jsonData, this.props.count);\n            if (this.props.files.length == 0) {\n              this.saveFile(\"normal-curve\", file.name, jsonData);\n            } else {\n              const names = this.props.files.map(item => item.fileName);\n              if (!names.includes(file.name)) {\n                this.saveFile(\"normal-curve\", file.name, jsonData);\n              }\n            }\n\n            const unitHeight = jsonData[\"max-height\"];\n            const circRad = jsonData[\"circle-radius\"];\n            const distancing = circRad * 4 - 1;\n            const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\n            const ceilDist = height - 50;\n            const length = Math.ceil((distancing * jsonData[\"len1\"] * 2 + distancing * jsonData[\"len2\"] * 2) / 100) * 100;\n            const colNum = Math.round(length / distancing);\n            this.setState({\n              dataReceived: true,\n              fileText: fileText,\n              jsonData: jsonData, \n              svgWidth: length,\n              svgHeight: height,\n              distancing: distancing,\n              dataReceived: true,\n              len1: jsonData[\"len1\"],\n              colValHeiS: jsonData[\"colValHeiS\"],\n              len2: jsonData[\"len2\"],\n              colValHeiS2: jsonData[\"colValHeiS2\"],\n              distancing1: (jsonData[\"len2\"] + 1) * distancing,\n              distancing2: (jsonData[\"len1\"] + jsonData[\"len2\"] + 4) * distancing,\n              triCent1: Math.round((0.5 * jsonData[\"len1\"]) * distancing) + distancing,\n              triCent2: Math.round((0.5 * jsonData[\"len2\"]) * distancing) + distancing,\n              col11: jsonData[\"len2\"] + 1,\n              col12: jsonData[\"len1\"] + jsonData[\"len2\"] + 1,\n              col21: jsonData[\"len1\"] + jsonData[\"len2\"] + 3,\n              col22: jsonData[\"len1\"] + 2 * jsonData[\"len2\"] + 3,\n              colLim1: Math.round((length - (jsonData[\"len1\"] * distancing)) / distancing),\n              colLim2: Math.round((length - (jsonData[\"len2\"] * distancing)) / distancing),\n              overlapVals: jsonData[\"overlapVals\"],\n              circRad: circRad,\n              ceilDist: ceilDist\n            });\n          };\n          reader.readAsText(file);\n        };\n      });\n    }));\n    this.setState({ fileNames: acceptedFiles.map(file => file.name) })\n  }\n\n  /**\n   * DEPRECATED since we are not doing drag n drop anymore\n   * Triggered when researchers select a previously uploaded file\n   */\n  handleSelectedFile() {\n    console.log(this.props.count);\n    this.handleChange(\"FileName\", this.state.fileChosen, this.props.count);\n\n    const jsonData = this.props.dataFlowColData.filter(item => \n      item.fileName == this.state.fileChosen)[0].fileContent;\n\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\n    \n    this.processJSON(jsonData);\n  }  \n\n  delete() {\n    this.props.delete(this.props.count);\n  }\n\n  getCount() {\n    this.props.getCount(this.props.count);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  // inherited from TabList.jsx\n  handleChange(key, value, count) {\n    this.props.handleChange(key, value, count);\n  }\n\n  /**\n   * Update @param data and save to final output\n   * This function is specifically designed to change the shape ocnfiguration\n   * data for the normal curve component. \n   * @param {[String]} key [key of entry to update]\n   * @param {[Any]} value [value of entry to update]\n   * @param {[Object]} data [a json object to be updated]\n   */\n  changeJSON(key, value, data) {\n    // var data = this.state.jsonData;\n    data[key] = value;\n    this.handleChange(\"FileContent\", data, this.props.count);\n  }\n\n  /**\n   * Save researcher selection to final output and update this.state\n   * WARNING: do not try to import jsonData from directory because data\n   *          will be altered by researchers' configuration\n   * @param {[Event]} e [an event triggered by researchers clicking on one of \n   *                     the three normal curve options]\n   */\n  selectNC(e) {\n    const id = e.currentTarget.id;\n\n    var jsonData;\n    var configArgs;\n    switch (id) {\n      case \"sameSquare\":\n        jsonData = sameSquareData;\n        configArgs = [20, 20, 20, 20, 3, 30, 0];\n        console.log(\"sameSquare\");\n        break;\n      case \"rlyDiff\":\n        jsonData = rlyDiffData;\n        configArgs = [30, 10, 10, 30, 3, 30, 0];\n        console.log(\"rlyDiff\");\n        break;\n      case \"bigSmall\":\n        jsonData = bigSmallData;\n        configArgs = [30, 15, 20, 10, 3, 30, 0];\n        console.log(\"bigSmall\");\n        break;\n    };\n\n    this.handleChange(\"FileName\", id + \".json\", this.props.count);\n    this.handleChange(\"FileContent\", jsonData, this.props.count);\n    this.setState({ configArgs: configArgs });\n    this.processJSON(jsonData);\n  }\n\n  render() {\n    if (this.state.dataReceived) {\n      // this case is triggered when researchers select one of the three options\n      // previously built for drag n drop file upload. \n      // Search 'dataReceived' in this file to learn more\n      return (\n        <div>\n          <NormalCurve \n            data={this.state.jsonData} count={this.props.count}\n            configArgs={this.state.configArgs}\n            changeJSON={this.changeJSON} \n            handleChange={this.handleChange} \n            delete={this.delete} />\n          <br/>\n        </div>\n      )\n    // importing component\n    } else if (this.state.imported) {\n      // a normal curve is imported in two possible ways:\n      // 1. when researchers import a question from another experiment in expt builder\n      // 2. when researchers use \"Edit Experiment\" feature from ConfigStudy\n      return (\n        <div>\n          <NormalCurve \n            imported={true}\n            editing={this.props.editing}\n            data={this.props.qToDisplay[\"FileContent\"]} \n            qToDisplay={this.props.qToDisplay}\n            count={this.props.count}\n            changeJSON={this.changeJSON} \n            handleChange={this.handleChange} \n            delete={this.delete} />\n        </div>\n      )\n    } else {\n      // provide researchers with three pre-built normal curve items\n      const normalCurveFiles = this.props.dataFlowColData.filter(\n        item => item.itemType == \"normal-curve\");\n      var fileNames = normalCurveFiles.map(item => item.fileName);\n      fileNames.unshift(\"Select File\");\n      const renderOption = item => <option value={item}>{item}</option>\n      const fileOptions = fileNames.map(renderOption);\n\n      return (\n        <div>\n          <div className=\"boxed\">\n            Select one of the following Normal Curve items to start with: <br/><br/>\n            <div className=\"container\">\n              <button>\n                <img src={sameSquare} alt=\"sameSquare\" id=\"sameSquare\"\n                  onClick={this.selectNC}\n                  style={{ height: \"10vw\", width: \"10vw\" }} /> \n              </button>\n              <p> </p>\n              <button>\n                <img src={rlyDiff} alt=\"rlyDiff\" id=\"rlyDiff\"\n                  onClick={this.selectNC}\n                  style={{ height: \"10vw\", width: \"10vw\" }} /> \n              </button>\n              <p> </p>\n              <button>\n                <img src={bigSmall} alt=\"bigSmall\" id=\"bigSmall\" \n                  onClick={this.selectNC}\n                  style={{ height: \"10vw\", width: \"10vw\" }} /> \n              </button>\n              <br/>\n            </div>\n            <br/><br/>\n            {/* Select previously uploaded files: \n            <br/>\n            <select name=\"fileChosen\" value={this.state.fileChosen} onChange={this.onChange}>\n              {fileOptions}\n            </select>\n            <button onClick={this.handleSelectedFile}>OK</button>\n            <br/><br/> */}\n            {/* <br/>\n            <Dropzone\n              onDrop={this.handleDrop}\n              accept=\"application/JSON, .json\"\n            >\n              {({ getRootProps, getInputProps }) => (\n                <div {...getRootProps({ className: \"dropzone\" })}>\n                  <input {...getInputProps()} />\n                  <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\n                </div>\n              )}\n            </Dropzone>\n            <br/> */}\n            <button onClick={this.delete.bind(this)}>Delete Question</button>\n          </div>\n          <br/><br/>\n        </div>\n      )\n    }\n  }\n}\n\nNormalCurveResearch.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getColData: PropTypes.func.isRequired,\n  dataFlowColData: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  dataFlowColData: state.dataFlow.colData\n});\n\nexport default connect(\n  mapStateToProps,\n  { getColData }\n)(NormalCurveResearch);","import React, { Component } from 'react';\nimport './ThresholdSlider.css';\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport { gsap } from 'gsap'\nimport {TweenMax, Draggable} from \"gsap/all\";\n\nimport { json } from 'd3';\nimport { Tween } from 'gsap/gsap-core';\n\n// --------- TODO ----------\n// set up bottom slider\n// record positions such that the 4 boxes move accordingly\n// calculate snap positions in python code\n// add more fields for researchers (legend names, question, ...)\n// set up dataflow (save researcher configuration to database)\n// add component to participant app (pull researcher config from database)\n// for now threshold requires drag and drop, will be nice if it follows the same\n// format as normal curve (give researchers 3 options to select from and then\n// further configure)\n\nclass ThresholdCurve extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.sliderRef = React.createRef();\n      this.slider2Ref = React.createRef();\n      this.rectRef = React.createRef();\n      this.svgRef = React.createRef();\n      this.areaRef = React.createRef();\n      this.lengthRef = React.createRef();\n      this.graph1keyRef = React.createRef();\n      this.graph2keyRef = React.createRef();\n      this.qRef = React.createRef();\n      this.colNumValRef = React.createRef();\n      this.radRef = React.createRef();\n      this.ticksRef = React.createRef();\n      this.checkBoxRef = React.createRef();\n      this.toggleTriRef1 = React.createRef();\n      this.toggleTriRef2 = React.createRef();\n      this.questionKeyRef = React.createRef();\n      this.legendKey1Ref = React.createRef();\n      this.legendKey2Ref = React.createRef();\n      this.stroke1Ref = React.createRef();\n      this.stroke2Ref = React.createRef();\n      this.stroke3Ref = React.createRef();\n      this.stroke4Ref = React.createRef();\n      this.fill1Ref = React.createRef();\n      this.refLine6Ref = React.createRef();\n      this.refLine5Ref = React.createRef();\n      this.refLine7Ref = React.createRef();\n      this.refLine8Ref = React.createRef();\n      this.refLine9Ref = React.createRef();\n      this.refLine10Ref = React.createRef();\n\n      this.fill2Ref = React.createRef();\n      this.fill3Ref = React.createRef();\n      this.fill4Ref = React.createRef();\n      this.distancing = React.createRef();\n      this.distancing2 = React.createRef();\n      this.distancing3 = React.createRef();\n      this.colWidth = React.createRef();\n      this.displayVal1 = React.createRef();\n      this.displayVal2 = React.createRef();\n      this.rect1Width = React.createRef();\n      this.rectHeight = React.createRef();\n      this.rect2Width = React.createRef();\n\n      //this.dotReturn = this.dotReturn.bind(this); \n      this.onChange1 = this.onChange1.bind(this);\n      this.line1 = this.line1.bind(this);\n      this.line2 = this.line2.bind(this);\n      this.line3 = this.line3.bind(this);\n      this.onChange2 = this.onChange2.bind(this);\n      this.onChange4 = this.onChange4.bind(this);\n      this.onChange5 = this.onChange5.bind(this);\n\n      this.onChange6 = this.onChange6.bind(this);\n\n      this.onChange7 = this.onChange7.bind(this);\n\n      this.onChange8 = this.onChange8.bind(this);\n\n\n      //this.svgColReturn = this.svgColReturn.bind(this);\n      //this.svgColReturn = this.svgColReturn.bind(this);\n      this.dotReturn1 = this.dotReturn1.bind(this);\n      this.dotReturn2= this.dotReturn2.bind(this);\n      this.dotReturn3= this.dotReturn3.bind(this);\n      this.dotReturn4= this.dotReturn4.bind(this);\n      this.rectReturn1 = this.rectReturn1.bind(this);\n      this.rectReturn2 = this.rectReturn2.bind(this);\n      this.rectReturn3 = this.rectReturn3.bind(this);\n      this.rectReturn4 = this.rectReturn4.bind(this);\n      this.rectReturn5 = this.rectReturn5.bind(this);\n      this.rectReturn6 = this.rectReturn6.bind(this);\n      this.rectReturn7 = this.rectReturn7.bind(this);\n      this.rectReturn8 = this.rectReturn8.bind(this);\n      this.textReturn = this.textReturn.bind(this);\n      this.textReturn2 = this.textReturn2.bind(this);\n\n\n\n      this.establishStateData = this.establishStateData.bind(this);\n      //this.updateRadius = this.updateRadius.bind(this);\n      //this.changeColor1 = this.changeColor1.bind(this);\n      //this.changeColor2 = this.changeColor2.bind(this);\n      //this.changeJSON = this.changeJSON.bind(this);\n      //this.onUpdateShapes = this.onUpdateShapes.bind(this);\n      //this.onFinishShapes = this.onFinishShapes.bind(this);   \n      this.state = this.establishStateData(this.props.data);\n    }\n\n    onChange4(q) {\n      this.setState({rect3Width : q})\n    }\n\n    onChange1(e) {\n      this.setState({ [e.target.name]: e.target.value })\n      this.setState({rect1Width : 400*this.state.displayArr1[e.target.value-1]})\n      this.setState({rect2Width: 400*this.state.displayArr2[e.target.value-1]})\n    }\n    onChange2(e) {\n      this.setState({rect4Width: 400*this.state.displayArr4[e.target.value-1]})\n      this.setState({rect3Width: 400*this.state.displayArr3[e.target.value-1]})\n      this.setState({ [e.target.name]: e.target.value })\n    }\n    line1(xPos1,xPos2,yPos1,yPos2){\n      var hard = <line x1 = {xPos1} x2 = {xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#000000\"></line>;\n      return hard;\n    }\n    line2(xPos1,xPos2,yPos1,yPos2){\n      var dottedLine = [];\n      for(var i = 0; i < yPos2 - yPos1; i+=4){\n        var hard = <line x1 = {xPos1} x2 = {xPos1} y1 = {yPos1 + i} y2 = {yPos2 + i + 2} stroke = \"#808080\"></line>;\n        dottedLine.push(hard);\n      }\n      return dottedLine;\n    }\n\n    line3(xPos1,xPos2,yPos1,yPos2){\n      var hard = <line x1 = {this.state.placement1} x2 = {this.state.placement1} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"   strokeWidth=\"2\"></line>;\n      return hard;\n    }\n    line4(xPos1,xPos2,yPos1,yPos2){\n      var hard = <line x1 = {this.state.placement2} x2 = {this.state.placement2} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"   strokeWidth=\"2\"  stroke-dasharray = \"4\"></line>;\n      return hard;\n    }\n    line5(xPos1,xPos2,yPos1,yPos2){\n      var hard = <line x1 = {this.state.placement3} x2 = {this.state.placement3} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"   strokeWidth=\"2\"></line>;\n      return hard;\n    }\n    line6(xPos1,xPos2,yPos1,yPos2){\n      var hard = <line x1 = {this.state.placement4} x2 = {this.state.placement4} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"   strokeWidth=\"2\" stroke-dasharray = \"4\"></line>;\n      return hard;\n    }\n\n    changeStroke1() {\n      const newColor = this.stroke1Ref.current.value;\n      if (newColor === \"#FF0000\"){\n        this.setState({stroke3: \"#0000FF\"});\n        this.setState({stroke4: \"#0000FF\"});\n        this.setState({fill4:\"#0000FF\"});\n        this.setState({ stroke1 : newColor });\n        this.setState({stroke2: newColor});\n        this.setState({fill2:newColor});\n      }\n      if (newColor === \"#0000FF\"){\n        this.setState({stroke3: \"#FF0000\"});\n        this.setState({stroke4: \"#FF0000\"});        \n        this.setState({fill4: \"#FF0000\"});\n        this.setState({ stroke1 : newColor });\n        this.setState({stroke2: newColor});\n        this.setState({fill2:newColor});\n      }\n      if(newColor === \"Orange and Blue\"){\n        this.setState({stroke3: \"#0000FF\"});\n        this.setState({stroke4: \"#0000FF\"});\n        this.setState({fill4:\"#0000FF\"});\n        this.setState({stroke1: \"#ffa500\"});\n        this.setState({stroke2: \"#ffa500\"});\n        this.setState({fill2: \"#ffa500\"});\n      }\n      if(newColor === \"Blue and Orange\"){\n        this.setState({stroke1: \"#0000FF\"});\n        this.setState({stroke2: \"#0000FF\"});\n        this.setState({fill2:\"#0000FF\"});\n        this.setState({stroke3: \"#ffa500\"});\n        this.setState({stroke4: \"#ffa500\"});\n        this.setState({fill4: \"#ffa500\"});\n      }\n      if(newColor === \"Blue and Yellow\"){\n        this.setState({stroke1: \"#0000FF\"});\n        this.setState({stroke2: \"#0000FF\"});\n        this.setState({fill2:\"#0000FF\"});\n        this.setState({stroke3: \"#FFD300\"});\n        this.setState({stroke4: \"#FFD300\"});\n        this.setState({fill4: \"#FFD300\"});\n      }\n      if(newColor === \"Yellow and Blue\"){\n        this.setState({stroke3: \"#0000FF\"});\n        this.setState({stroke4: \"#0000FF\"});\n        this.setState({fill4:\"#0000FF\"});\n        this.setState({stroke1: \"#FFD300\"});\n        this.setState({stroke2: \"#FFD300\"});\n        this.setState({fill2: \"#FFD300\"});\n      }\n    }\n    onChange5(e){\n      this.setState({placement1:e})\n    }\n    onChange6(e){\n      this.setState({placement2:e})\n    }\n    onChange7(e){\n      this.setState({placement3:e})\n    }\n    onChange8(e){\n      this.setState({placement4:e})\n    }\n\n    establishStateData(data) {\n      // console.log(\"establishStateData()\", new Date());\n  \n      return{\n        //arr1: data[\"displayArr1\"],\n        // arr2: data[\"displayArr2\"],\n        // arr3: data[\"displayArr3\"],\n        //arr4: data[\"displayArr4\"],\n        xPos1: data[\"xPos1\"],\n        yPos1: data[\"yPos1\"],\n        xPos2: data[\"xPos2\"],\n        yPos2: data[\"yPos2\"],\n        xPos3: data[\"xPos3\"],\n        yPos3: data[\"yPos3\"],\n        xPos4: data[\"xPos4\"],\n        yPos4: data[\"yPos4\"],\n        legend: data[\"legend\"],\n        placement1:200,\n        placement2:300,\n        placement3:500,\n        placement4:800,\n        key: data[\"displayArr5\"],\n        stroke1: data[\"stroke1\"],\n        stroke2: data[\"stroke2\"],\n        stroke3: data[\"stroke3\"],\n        stroke4: data[\"stroke4\"],\n        fill1: data[\"fill1\"],\n        fill2: data[\"fill2\"],\n        fill3: data[\"fill3\"],\n        fill4: data[\"fill4\"],\n        height: 1000,\n        width: data[\"width\"],\n        rad: data[\"circRad\"],\n        minVal:1,\n        sliderPos:8,\n        sliderPos2:5,\n        rect1Width: 100,\n        rect2Width: 100,\n        rect3Width: 100,\n        rect4Width: 100,\n        rectHeight:20,\n        displayArr1 : data[\"displayArr1\"],\n        displayArr2 : data[\"displayArr2\"],\n        displayArr3 : data[\"displayArr3\"],\n        displayArr4 : data[\"displayArr4\"],\n        displayVal1: 2,\n        displayVal2: 1,\n        maxVal : data[\"maxVal\"],\n        legendKey : data[\"legendKey\"],\n        labels: data[\"legend\"],\n        thumbDown: false,\n        topSliderX: 0,\n        topSliderY: 60,\n        bottomSliderX: 90,\n        bottomSliderY: 175,\n        dragger1Pos: 0,\n        dragger2Pos: 0\n      }\n    }\n\ndotReturn1(xPos, yPos) {\n    var hard = \n    <circle \n    // onMouseEnter={e => this.displayTag1(e)}\n    // onMouseLeave={e => this.hideTag1(e)}\n    // onMouseMove={e => this.updateTag1(e)} \n    className=\"icon\" \n    stroke={this.state.stroke1} \n    fill={this.state.fill1}\n    fillOpacity=\"1\" \n    strokeOpacity=\"1\" cx={xPos} cy={yPos} r={this.state.rad}>\n    </circle>;\n\n    return hard;\n  }\n\n   dotReturn2(xPos, yPos) {\n    var hard = \n    <circle \n    // onMouseEnter={e => this.displayTag1(e)}\n    // onMouseLeave={e => this.hideTag1(e)}\n    // onMouseMove={e => this.updateTag1(e)} \n    className=\"icon\" \n    stroke={this.state.stroke2} \n    fill={this.state.fill2}\n    fillOpacity=\"1\" \n    strokeOpacity=\"1\" cx={xPos} cy={yPos} r={this.state.rad}>\n    </circle>;\n\n    return hard;\n  }\n\n   dotReturn3(xPos, yPos) {\n\n    var hard = \n    <circle \n    // onMouseEnter={e => this.displayTag1(e)}\n    // onMouseLeave={e => this.hideTag1(e)}\n    // onMouseMove={e => this.updateTag1(e)} \n    className=\"icon\" \n    stroke={this.state.stroke3} \n    fill={this.state.fill3}\n    fillOpacity=\"1\" \n    strokeOpacity=\"1\" cx={xPos} cy={yPos} r={this.state.rad}>\n    </circle>;\n\n    return hard;\n  }\n\n   dotReturn4(xPos, yPos) {\n    var hard = \n    <circle \n    // onMouseEnter={e => this.displayTag1(e)}\n    // onMouseLeave={e => this.hideTag1(e)}\n    // onMouseMove={e => this.updateTag1(e)} \n    className=\"icon\" \n    stroke={this.state.stroke4} \n    fill={this.state.fill4}\n    fillOpacity=\"1\" \n    strokeOpacity=\"1\" cx={xPos} cy={yPos} r={this.state.rad}>\n    </circle>;\n\n    return hard;\n  }\n\n  textReturn(xPos, yPos, tedxt){\n    var hard = <text x = {xPos} y = {yPos} fontSize = \"10\">{tedxt}</text>;\n    return hard;\n  }\n  textReturn2(xPos, yPos, tedxt){\n    var hard = <text x = {xPos} y = {yPos} fontSize = \"12\" color = \"grey\">{tedxt}</text>;\n    return hard;\n  }\n\n  rectReturn1(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos} stroke = {this.state.stroke1} fill = {this.state.stroke1} height = {this.state.rectHeight-2} width = {this.state.rect1Width} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n    return hard;\n  }\n\n  rectReturn2(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos +1} stroke = {this.state.stroke1} height = {this.state.rectHeight-2} width = {400} fill = {\"none\"} strokeOpacity = \"0.3\"></rect>;\n    return hard;\n  }\n  rectReturn3(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos +1} stroke = {this.state.stroke2} height = {this.state.rectHeight-2} width = {this.state.rect2Width} fillOpacity = \"0.7\" fill = {this.state.stroke2} strokeOpacity = \"0.7\"></rect>;\n    return hard;\n  }\n  rectReturn4(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos +1} stroke = {this.state.stroke2} height = {this.state.rectHeight-2} width = {400} fill = {\"none\"} strokeOpacity = \"0.7\"></rect>;\n    return hard;\n  }\n  rectReturn5(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos +1} stroke = {this.state.stroke3} height = {this.state.rectHeight-2} width = {this.state.rect3Width} fillOpacity = {0.7} fill = {this.state.fill4} strokeOpacity = \"0.7\"></rect>;\n    return hard;\n  }\n  rectReturn6(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos +1} stroke = {this.state.stroke3} height = {this.state.rectHeight-2} width = {400} fill = {\"none\"} fillOpacity = {0.7}strokeOpacity = \"0.7\"></rect>;\n    return hard;\n  }\n  rectReturn7(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos} stroke = {this.state.stroke4} height = {this.state.rectHeight-2} fill = {this.state.fill4} fillOpacity = {0.7} width = {this.state.rect4Width} strokeOpacity = \"0.7\"></rect>;\n    return hard;\n  }\n  rectReturn8(xPos, yPos){\n    var hard = \n    <rect\n    x = {xPos} y = {yPos +1} stroke = {this.state.stroke4} height = {this.state.rectHeight-2} width = {400} fill = {\"none\"} strokeOpacity = \"0.3\"></rect>;\n    return hard;\n  }\n  /**\n   * Set up dragger when the component mounts\n   */\n  /**\n   * Renders a dragger in the svg\n   */\n\n  \n  // not finished\n\n  render() {\n    const widthFactor = 6;\n    const heightFactor = 3.5;\n    // TODO: change padding so that the entire graph is in the center of the box\n    return (\n      <div style={{ backgroundColor: \"pink\" }}>\n        <svg width={this.state.width} height={this.state.height/2.5} ref={this.svgRef}>\n\n          {/* rows of dots */}\n          {[...this.state.xPos1].map(\n            (col, index) =>\n              (this.dotReturn1(col + 13,this.state.yPos1[index] - 100))\n          )}\n\n          {[...this.state.xPos2].map(\n            (col, index) =>\n              (this.dotReturn2(col + 13,this.state.yPos2[index]- 100))\n          )}\n\n          {[...this.state.xPos3].map(\n            (col, index) =>\n              (this.dotReturn3(col + 13,this.state.yPos3[index] - 100))\n          )}\n          \n          {[...this.state.xPos4].map(\n            (col, index) =>\n              (this.dotReturn4(col + 13,this.state.yPos4[index] - 100))\n          )}\n                    \n          {/* legend dots */}\n          {/* {this.dotReturn1(this.state.width +220,this.state.height/6 + 70)}\n          {this.dotReturn2(this.state.width +220, this.state.height/6 + 40)}\n          {this.dotReturn3(this.state.width +220, this.state.height/4 +28)}\n          {this.dotReturn4(this.state.width +220, this.state.height/4 +48)} */}\n          {this.dotReturn1(810,20)}\n          {this.dotReturn3(820, 20)}\n          {this.dotReturn2(810, 30)}\n          {this.dotReturn4(820, 30)}\n\n          {/* legend texts */}\n          {/* {this.textReturn(this.state.width + 240, this.state.height/4 + 32, this.state.legendKey[0])}\n          {this.textReturn(this.state.width + 240, this.state.height/4 + 52, this.state.legendKey[1])}\n          {this.textReturn(this.state.width + 240, this.state.height/4 - 8, this.state.legendKey[2])}\n          {this.textReturn(this.state.width + 240, this.state.height/4 - 39, this.state.legendKey[3])} */}\n          {this.textReturn(830, 25, this.state.legendKey[0])}\n          {this.textReturn(830, 35, this.state.legendKey[1])}\n          {this.textReturn2(5, 25, this.state.legendKey[2])}\n          {this.textReturn2(5, 255, this.state.legendKey[3])}\n          {/* indices for columns */}\n          {this.textReturn(this.state.placement1 - 10,45,this.state.labels[0])}\n          {this.textReturn(this.state.placement2 - 10,45,this.state.labels[1])}\n          {this.textReturn(this.state.placement3 - 10,245,this.state.labels[2])}\n          {this.textReturn(this.state.placement4 - 10,245,this.state.labels[3])}\n\n          {this.line4(this.placement1,this.placement1,50,125)}\n          {this.line5(this.placement2,this.placement2,160,235)}\n          {this.line3(this.placement3,this.placement3,50,125)}\n          {this.line6(this.placement4,this.placement4,160,235)}\n          {this.textReturn(35,165,this.state.key[0])}\n          {this.textReturn(135,165,this.state.key[1])}\n          {this.textReturn(235,165,this.state.key[2])}\n          {this.textReturn(335,165,this.state.key[3])}\n          {this.textReturn(435,165,this.state.key[4])}\n          {this.textReturn(535,165,this.state.key[5])}\n          {this.textReturn(635,165,this.state.key[6])}\n          {this.textReturn(735,165,this.state.key[7])}\n          {this.textReturn(835,165,this.state.key[8])}\n          {this.textReturn(935,165,this.state.key[9])}\n\n          {/* rectangular bars */}\n          {/* {this.rectReturn1(this.state.width/2.5,600)}\n          {this.rectReturn2(this.state.width/2.5,600)}\n          {this.rectReturn3(this.state.width/2.5,650)}\n          {this.rectReturn4(this.state.width/2.5,650)}\n          {this.rectReturn5(this.state.width/2.5,700)}\n          {this.rectReturn6(this.state.width/2.5,700)}\n          {this.rectReturn7(this.state.width/2.5,750)}\n          {this.rectReturn8(this.state.width/2.5,750)} */}\n          {this.rectReturn1(this.state.width/2.5 - 100,this.state.height/heightFactor - 2 * this.state.rad)}\n          {this.rectReturn2(this.state.width/2.5- 100,this.state.height/heightFactor - 2 * this.state.rad)}\n          {this.textReturn2(this.state.width/2.5+ 80,this.state.height/heightFactor - 2 * this.state.rad - 8, this.state.legend[0])}\n          {this.rectReturn3(this.state.width/2.5 - 100,this.state.height/heightFactor + 30 - 2 * this.state.rad)}\n          {this.rectReturn4(this.state.width/2.5 - 100,this.state.height/heightFactor + 30 - 2 * this.state.rad)}\n          {this.textReturn2(this.state.width/2.5 +80,this.state.height/heightFactor + 30 - 2 * this.state.rad, this.state.legend[1])}\n          {this.rectReturn5(this.state.width/2.5 - 100,this.state.height/heightFactor + 60 - 2 * this.state.rad)}\n          {this.rectReturn6(this.state.width/2.5 - 100,this.state.height/heightFactor + 60 - 2 * this.state.rad)}\n          {this.textReturn2(this.state.width/2.5 + 80,this.state.height/heightFactor + 60 - 2 * this.state.rad, this.state.legend[2])}\n          {this.rectReturn7(this.state.width/2.5 - 100,this.state.height/heightFactor + 90 - 2 * this.state.rad)}\n          {this.rectReturn8(this.state.width/2.5 - 100,this.state.height/heightFactor + 90 - 2 * this.state.rad)}\n          {this.textReturn2(this.state.width/2.5 + 80,this.state.height/heightFactor + 90 - 2 * this.state.rad, this.state.legend[3])}\n\n          {/* sliders */}\n\n        </svg>\n      \n\n        <div>\n        <input type=\"range\" min={this.state.minVal} max={this.state.maxVal} \n              className=\"thresh-top-slider\" onChange={this.onChange1}\n              name=\"sliderPos\" value={this.state.sliderPos} ref={this.sliderRef}\n              style={{ width: this.state.width, left:0}}/>\n        <input type = \"range\" min = {this.state.minVal} max = {this.state.maxVal}\n            className = \"thresh-bottom-slider\" onChange={this.onChange2}\n            name = \"sliderPos2\" value = {this.state.sliderPos2} ref = {this.slider2Ref}\n            style = {{width: this.state.width, left:0}}/>\n        </div>  \n                <label>Choose a color combination (the first color is on top): </label>\n                  <select name=\"stroke1\" id=\"stroke1\" ref={this.stroke1Ref}\n                    defaultValue={this.state.stroke1}>\n                    <option value=\"#0000FF\">Blue and Red</option>\n                    <option value=\"#FF0000\">Red and Blue</option>\n                    <option value=\"Orange and Blue\">Orange and Blue</option>\n                    <option value=\"Blue and Orange\">Blue and Orange</option>\n                    <option value = \"Yellow and Blue\">Yellow and Blue</option>\n                    <option value = \"Blue and Yellow\">Blue and Yellow</option>\n                  </select>\n                  <input onClick={() => this.changeStroke1()} type=\"submit\" value=\"Submit\"></input>\n                  <br></br>\n                  <input name = \"refLine5\" id = \"refLine5\" ref = {this.refLine5Ref}></input>\n                  <input onClick = {() => this.onChange5(this.refLine5Ref.current.value)} type = \"submit\" value = \"Submit\"></input> \n                  <br></br>\n                  <input name = \"refLine6\" id = \"refLine6\" ref = {this.refLine6Ref}></input>\n                  <input onClick = {() => this.onChange6(this.refLine6Ref.current.value)} type = \"submit\" value = \"Submit\"></input> \n                  <br></br>\n                  <input name = \"refLine7\" id = \"refLine7\" ref = {this.refLine7Ref}></input>\n                  <input onClick = {() => this.onChange7(this.refLine7Ref.current.value)} type = \"submit\" value = \"Submit\"></input> \n                  <br></br>\n                  <input name = \"refLine8\" id = \"refLine8\" ref = {this.refLine8Ref}></input>\n                  <input onClick = {() => this.onChange8(this.refLine8Ref.current.value)} type = \"submit\" value = \"Submit\"></input> \n\n      </div>\n    )\n  }\n}\n\nexport default ThresholdCurve;","import React, { Component } from 'react';\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport ThresholdCurve from './threshold.jsx';\nimport './HistSlider.css';\nimport './ThresholdSlider.css';\n\nclass ThresholdCurveResearch extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.rectRef = React.createRef();\n      this.svgRef = React.createRef();\n      this.areaRef = React.createRef();\n  \n      this.arg1ref = React.createRef();\n      this.arg2ref = React.createRef();\n      this.arg3ref = React.createRef();\n      this.arg4ref = React.createRef();\n      this.arg5ref = React.createRef();\n      this.arg6ref = React.createRef();\n      this.arg7ref = React.createRef();\n  \n      this.handleDrop = this.handleDrop.bind(this);\n      this.processJSON = this.processJSON.bind(this);\n  \n      this.state = {\n        dataReceived: false,\n        fileNames: [],\n        setFileNames: [],\n        fileChosen: '',\n        key: this.props.key\n      };\n    }\n\n    handleDrop(acceptedFiles) {\n      console.log(acceptedFiles.map(file => {\n        acceptedFiles.forEach((file) => {\n\n            const reader = new FileReader()\n            reader.onabort = () => console.log('file reading was aborted')\n            reader.onerror = () => console.log('file reading has failed')\n            reader.onload = () => {\n              // Do whatever you want with the file contents\n              const fileText = reader.result;\n              const jsonData = JSON.parse(fileText);\n\n              this.setState({\n                dataReceived : \"true\",\n                jsonData: jsonData\n            });\n            };\n            reader.readAsText(file);\n        });\n      }));\n      this.setState({ fileNames: acceptedFiles.map(file => file.name) })\n    }\n\n    processJSON(data){\n        this.setState({\n            dataReceived : \"true\",\n            jsonData:data\n        });\n  }\n\n  render(){\n    if (this.state.dataReceived) {\n      // this case is triggered when researchers select one of the three options\n      // previously built for drag n drop file upload. \n      // Search 'dataReceived' in this file to learn more\n      return (\n        <div className=\"boxed\">\n          <ThresholdCurve \n            data={this.state.jsonData} />\n          <br/>\n        </div>\n      )\n    // importing component\n    } else{\n      return( \n        <div className=\"boxed\">\n          Threshold Question\n          <Dropzone\n                onDrop={this.handleDrop}\n                accept=\"application/JSON, .json\"\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <div {...getRootProps({ className: \"dropzone\" })}>\n                    <input {...getInputProps()} />\n                    <p>Drag'n'drop files, or click to select files (must be valid JSON file)</p>\n                  </div>\n                )}\n          </Dropzone>\n          TODO: delete question\n        </div>\n      )\n    }\n  }\n\n\n}\n\nexport default ThresholdCurveResearch;\n","import React, { Component } from 'react';\nimport './HistSlider.css';\n\nclass Tradeoff extends Component {\n\n    constructor(props) {\n        super(props);\n        this.sliderRef = React.createRef();\n        this.slider2Ref = React.createRef();\n        this.threeGraphRef = React.createRef();\n        this.rectRef = React.createRef();\n        this.svgRef = React.createRef();\n        this.graphColRef=React.createRef();\n        this.refLine1Ref = React.createRef();\n        this.refLine2Ref = React.createRef();\n\n        this.refLine4Ref = React.createRef();\n        this.refLine3Ref = React.createRef();\n        this.refLine6Ref = React.createRef();\n        this.refLine5Ref = React.createRef();\n        this.refLine7Ref = React.createRef();\n        this.refLine8Ref = React.createRef();\n\n        this.stroke1Ref = React.createRef();\n        this.areaRef = React.createRef();\n        this.onChange2 = this.onChange2.bind(this);\n        this.rectReturn1 = this.rectReturn1.bind(this);\n        this.rectReturn2 = this.rectReturn2.bind(this);\n        this.rectReturn3 = this.rectReturn3.bind(this);\n        this.rectReturn4 = this.rectReturn4.bind(this);\n        this.rectReturn5 = this.rectReturn5.bind(this);\n        this.rectReturn6 = this.rectReturn6.bind(this);\n        this.textReturn1 = this.textReturn1.bind(this);\n        this.changeGraphColNumber = this.changeGraphColNumber.bind(this);\n        this.line1 = this.line1.bind(this);\n        this.changeGraphNumber = this.changeGraphNumber.bind(this);\n        this.changeStroke1=this.changeStroke1.bind(this);\n\n        this.establishStateData = this.establishStateData.bind(this);\n        this.state = this.establishStateData(this.props.data);\n        this.onChange1 = this.onChange1.bind(this);\n    }\n\n    establishStateData(data){\n        return{\n            stroke1 : \"#FF0000\",\n            stroke2 : \"#0000FF\",\n            rect1Height : 100,\n            rect2Height : 100,\n            rect3Height : 100,\n            rect4Height: 100,\n            rect5Height:100,\n            rect6Height:100,\n            rect7Height:100,\n            rect8Height:100,\n            rectWidth : 40,\n            sliderPos:1,\n            sliderPos2:1,\n            rect1Arr: [0.76,0.76, 0.68, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.54, 0.53, 0.53, 0.52, 0.52, 0.52, 0.51, 0.51, 0.509 ,0.506, 0.503, 0.50],\n            rect2Arr: [0.399528104378295,\n              0.419528104378295,\n              0.436856783892294,\n              0.446993411594998,\n              0.454185463406292,\n              0.459764052189148,\n              0.464322091108996,\n              0.468175858104678,\n              0.471514142920291,\n              0.4744587188117,\n              0.477092731703146,\n              0.479475486198254,\n              0.481650770622995,\n              0.483651838314833,\n              0.485504537618676,\n              0.48722935940585,\n              0.48884282243429,\n              0.4903584379797,\n              0.491787398325699,\n              0.493139078857456,\n              0.494421411217145,\n              0.495641165321381,\n              0.496804165712253,\n              0.497915459776524,\n              0.498979450136994,\n              0.5],\n            rect3Arr: [0.75,\n              0.750612329917804,\n              0.751250724134086,\n              0.751917500572648,\n              0.752615300807172,\n              0.753347153269713,\n              0.754116552685526,\n              0.754927561004581,\n              0.75578493721218,\n              0.756694306539426,\n              0.75766238435649,\n              0.758697277428794,\n              0.7598088970111,\n              0.761009537626203,\n              0.762314708281047,\n              0.763744360978112,\n              0.76532476871298,\n              0.767091514247826,\n              0.769094485137193,\n              0.771406745334602,\n              0.774141568686512,\n              0.777488721956225,\n              0.781803953043001,\n              0.787885929664624,\n              0.798283137373023,\n              0.818283137373023],\n            rect4Arr: [0.75,\n              0.748775340164392,\n              0.747498551731828,\n              0.746164998854703,\n              0.744769398385657,\n              0.743305693460574,\n              0.741766894628947,\n              0.740144877990839,\n              0.73843012557564,\n              0.736611386921148,\n              0.73467523128702,\n              0.732605445142412,\n              0.7303822059778,\n              0.727980924747594,\n              0.725370583437905,\n              0.722511278043775,\n              0.719350462574041,\n              0.715816971504349,\n              0.711811029725613,\n              0.707186509330796,\n              0.701716862626977,\n              0.695022556087551,\n              0.686392093913997,\n              0.674228140670752,\n              0.653433725253954,\n              0.633433725253954],\n            rect5Arr: [0.689038170367751,\n              0.677038170367751,\n              0.638915075436954,\n              0.616614494491005,\n              0.600791980506157,\n              0.588519085183875,\n              0.578491399560208,\n              0.570013112169709,\n              0.56266888557536,\n              0.556190818614259,\n              0.550395990253079,\n              0.545153930363841,\n              0.540368304629411,\n              0.535965955707367,\n              0.531890017238912,\n              0.52809540930713,\n              0.524545790644563,\n              0.521211436444659,\n              0.518067723683462,\n              0.515094026513597,\n              0.512272895322282,\n              0.509589436292963,\n              0.507030835433044,\n              0.504585988491648,\n              0.502245209698614,\n              0.5],\n            rect6Arr: [0.75,0.750244931967122,\n              0.750500289653634,\n              0.750767000229059,\n              0.751046120322869,\n              0.751338861307885,\n              0.75164662107421,\n              0.751971024401832,\n              0.752313974884872,\n              0.75267772261577,\n              0.753064953742596,\n              0.753478910971518,\n              0.75392355880444,\n              0.754403815050481,\n              0.754925883312419,\n              0.755497744391245,\n              0.756129907485192,\n              0.75683660569913,\n              0.757637794054877,\n              0.758562698133841,\n              0.759656627474605,\n              0.76099548878249,\n              0.762721581217201,\n              0.76515437186585,\n              0.769313254949209,\n              0.781313254949209, \n              ],\n            rect7Arr: [0.4,0.8],\n            rect8Arr: [0.2,0.3],\n            line1Height:0.4,\n            line2Height:0.5,\n            line3Height:0.4,\n            line4Height:0.2,\n            line5Height:0.4,\n            line6Height:0.3,\n            line7Height:0.2,\n            line8Height:0.1,\n            threeGraphs: false,\n            threeGraphOne: true,\n            fourGraphOne: true\n\n        }\n    }\n    changeGraphColNumber(){\n      const newColor = this.graphColRef.current.value;\n      if (newColor === \"1 and 1\"){\n          this.setState({fourGraphOne: true});\n          this.setState({threeGraphOne: true});\n      }\n      if (newColor === \"1 and 2\"){\n          this.setState({fourGraphOne: true});\n          this.setState({threeGraphOne: false});\n      }\n      if (newColor === \"2 and 1\"){\n          this.setState({fourGraphOne: false});\n          this.setState({threeGraphOne: true});\n      }\n      if (newColor === \"2 and 2\"){\n          this.setState({fourGraphOne: false});\n          this.setState({threeGraphOne: false});\n      }\n  }\n    onChange1(e){\n        this.setState({ [e.target.name]: e.target.value })\n        this.setState({rect1Height :200*this.state.rect1Arr[e.target.value]})\n        this.setState({rect2Height :200*this.state.rect2Arr[e.target.value]})\n        this.setState({rect3Height :200*this.state.rect3Arr[e.target.value]})\n        this.setState({rect4Height :200*this.state.rect4Arr[e.target.value]})\n        this.setState({rect5Height :200*this.state.rect5Arr[e.target.value]})\n        this.setState({rect6Height :200*this.state.rect6Arr[e.target.value]})\n        this.setState({rect7Height :200*this.state.rect7Arr[e.target.value]})\n        this.setState({rect8Height :200*this.state.rect8Arr[e.target.value]})\n    }\n    onChange10(e){\n      this.setState({line1Height:e})\n    }\n    onChange2(e){\n      this.setState({line2Height:e})\n    }\n    onChange3(e){\n      this.setState({line3Height:e})\n    }\n    onChange4(e){\n      this.setState({line4Height:e})\n    }\n    onChange5(e){\n      this.setState({line5Height:e})\n    }\n    onChange6(e){\n      this.setState({line6Height:e})\n    }\n    onChange7(e){\n      this.setState({line7Height:e})\n    }\n    onChange8(e){\n      this.setState({line8Height:e})\n    }\n\n    changeStroke1() {\n      const newColor = this.stroke1Ref.current.value;\n      if (newColor === \"#FF0000\"){\n        this.setState({stroke1:\"#0000FF\"});\n        this.setState({stroke2:newColor});\n      }\n      if (newColor === \"#0000FF\"){      \n        this.setState({stroke1: \"#FF0000\"});\n        this.setState({stroke2:newColor});\n      }\n      if(newColor === \"Orange and Blue\"){\n        this.setState({stroke1:\"#0000FF\"});\n        this.setState({stroke2: \"#ffa500\"});\n      }\n      if(newColor === \"Blue and Orange\"){\n        this.setState({stroke1:\"#0000FF\"});\n        this.setState({stroke2: \"#ffa500\"});\n      }\n      if(newColor === \"Blue and Yellow\"){\n        this.setState({stroke1:\"#0000FF\"});\n        this.setState({stroke2: \"#FFD300\"});\n      }\n      if(newColor === \"Yellow and Blue\"){\n        this.setState({stroke1:\"#0000FF\"});\n        this.setState({stroke2: \"#FFD300\"});\n      }\n\n\n    }\n    changeGraphNumber(){\n      const newGraph = this.threeGraphRef.current.value;\n      if (newGraph === \"True\"){\n        this.setState({threeGraphs: true});\n      }\n      else{\n        this.setState({threeGraphs: false});\n      }\n  }\n\n    rectReturn1(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {this.state.rect1Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn2(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {this.state.rect2Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn3(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {this.state.rect3Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn4(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {this.state.rect4Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn5(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {this.state.rect5Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn6(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {this.state.rect6Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn7(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke1} height = {this.state.rect7Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn8(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {this.state.stroke2} height = {this.state.rect8Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn9(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {this.state.rect5Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      rectReturn10(xPos, yPos){\n        var hard = \n        <rect\n        x = {xPos} y = {yPos} stroke = {\"#000000\"} fill = {\"#ffa500\"} height = {this.state.rect6Height} width = {this.state.rectWidth} fillOpacity = \"0.7\" strokeOpacity = \"0.7\"></rect>;\n        return hard;\n      }\n      line1(xPos1,xPos2,yPos1,yPos2){\n        var hard = \n        <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#000000\"></line>;\n        return hard;\n      }\n      line2(xPos1,xPos2,yPos1,yPos2){\n        var hard = \n        <line x1 = {xPos1 + 300} x2 = {300 + xPos2} y1 = {yPos1} y2 = {yPos2} stroke = \"#808080\"></line>;\n        return hard;\n      }\n      textReturn1(xPos, yPos, tedxt){\n        var hard = <text x = {xPos} y = {yPos}>{tedxt}</text>;\n        return hard;\n      }\n    render(){\n      const threeGraphs = this.state.threeGraphs;\n        return (\n            <div>\n                <svg width = {1400} height = {1000} style={{}} class = \"b\"> \n                    {this.rectReturn1(500,450)}\n                    {this.rectReturn2(580,450)}\n                    {this.rectReturn3(900,450)}\n                    {this.rectReturn4(980,450)}\n                    {this.line1(173,187,650,650)}\n                    {this.line1(173,187,488,488)}\n                    {this.line1(173,187,528,528)}\n                    {this.line1(173,187,568,568)}\n                    {this.line1(173,187,608,608)}\n\n                    {this.line1(176,184,633,633)}\n                    {this.line1(176,184,468,468)}\n                    {this.line1(176,184,508,508)}\n                    {this.line1(176,184,548,548)}\n                    {this.line1(176,184,588,588)}\n                    {this.line1(173,187,488,488)}\n                    {this.line1(173,187,528,528)}\n                    {this.line1(173,187,568,568)}\n                    {this.line1(173,187,608,608)}\n\n                    {this.line1(176,184,633,633)}\n                    {this.line1(176,184,468,468)}\n                    {this.line1(176,184,508,508)}\n                    {this.line1(176,184,548,548)}\n                    {this.line1(176,184,588,588)}\n\n                    {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(576,584,218,218)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,258,258)\n\n\n                    : this.line1(576,584,298,298)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(326,334,298,298)\n\n\n                    : this.line1(576,584,337,337)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(326,334,338,338)\n\n\n                    : this.line1(573,587,360,360)\n                  }\n\n                  {\n                    threeGraphs\n                    ? this.line1(326,334,218,218)\n\n\n                    : this.line1(176,184,218,218)\n                  }\n                  \n                  {\n                    threeGraphs\n                    ? this.line1(326,334,258,258)\n\n\n                    : this.line1(176,184,258,258)\n                  }\n\n                  {\n                    threeGraphs\n                    ? this.line1(326,334,178,178)\n\n\n                    : this.line1(576,584,258,258)\n                  }\n\n\n\n\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(573,587,198,198)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(323,337,238,238)\n\n\n                    : this.line1(573,587,238,238)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(323,337,278,278)\n\n\n                    : this.line1(573,587,278,278)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(323,337,318,318)\n\n\n                    : this.line1(573,587,318,318)\n                  }\n\n                  {\n                    threeGraphs\n                    ? this.line1(323,337,360,360)\n\n\n                    : this.line1(176,184,218,218)\n                  }\n\n\n                   {\n                    threeGraphs\n                    ? this.line1(323,337,198,198)\n\n\n                    : this.line1(173,187,198,198)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,258,258)\n\n\n                    : this.line1(173,187,238,238)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(173,187,278,278)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(173,187,318,318)\n                  }\n\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(176,184,218,218)\n                  }\n\n\n\n\n\n\n\n\n\n\n\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,255,258)\n\n\n                    : this.line1(176,184,298,298)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(176,184,337,337)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(173,187,360,360)\n                  }\n\n\n                  {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(576,584,218,218)\n                  }\n                                    {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(576,584,178,178)\n\n                  }\n                                    {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(176,184,178,178)\n                  }\n\n                    {this.line1(573,587,650,650)}\n                    {this.line1(573,587,488,488)}\n                    {this.line1(573,587,528,528)}\n                    {this.line1(573,587,568,568)}\n                    {this.line1(573,587,608,608)}\n\n                    {this.line1(576,584,633,633)}\n                    {this.line1(576,584,468,468)}\n                    {this.line1(576,584,508,508)}\n                    {this.line1(576,584,548,548)}\n                    {this.line1(576,584,588,588)}\n\n\n                    {\n                      this.state.threeGraphs\n                      ? this.rectReturn5(660,160)             \n                      : [\n                          (this.state.threeGraphOne\n                          ? this.rectReturn9(535,160)\n                          : this.rectReturn5(500,160)\n                          )\n                        ]\n                    }\n                    {\n                      this.state.threeGraphs\n                      ? this.rectReturn6(735,160)         \n                      : [\n                        (this.state.threeGraphOne\n                        ? <text></text>\n                        : this.rectReturn6(580,160)\n                        )\n                      ]     \n                    }\n                    {\n                      this.state.threeGraphs\n                      ? <text> </text>        \n                      : [\n                          (this.state.fourGraphOne\n                          ? this.rectReturn10(940,160)  \n                          : this.rectReturn7(900,160)   \n                          )\n                      ] \n                    }\n                   {\n                      this.state.threeGraphs\n                      ? <text> </text>        \n                      : [\n                          (this.state.fourGraphOne\n                          ? <text></text>\n                          : this.rectReturn8(980,160)   \n                          )\n                      ] \n                    }\n                    {this.line1(180,180,450,650)}\n                    {this.line1(180,360,450,450)}\n                    {this.line1(580,580,450,650)}\n                    {this.line1(580,760,450,450)}\n                    {\n                    threeGraphs\n                    ? this.line1(330,330,160,360)\n\n\n                    : this.line1(180,180,160,360)\n\n                  }\n                \n                  {\n                    threeGraphs\n                    ? this.line1(330,510,160,160)\n\n                    : this.line1(180,390,160,160)\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(0,0,0,0)\n\n\n                    : this.line1(580,580,160,360)\n\n                  }\n                  {\n                    threeGraphs\n                    ? this.line1(0,0,0,0)\n\n                    : this.line1(580 ,780,160,160)\n                  }\n                  </svg>\n                  <svg class = \"e\" width = {1400} height = {1000}>\n                  <text x = {200} y = {115}>Filler text for eventual question will go here</text>\n                  <text x = {230} y = {265}>Legend:</text>\n                  <text x = {305} y = {265}> White People</text>\n                  <rect x = {290} y = {255} height = {10} width = {10} stroke = {this.state.stroke1} fill = {this.state.stroke1}></rect>\n                  <text x = {415} y = {265}> Black People</text>\n                  <rect x = {510} y = {255} height = {10} width = {10} stroke = {\"#ffa500\"} fill = {\"#ffa500\"}></rect>\n                  <text x = {525} y = {265}>Both Groups</text>\n                  <rect x = {400} y = {255} height = {10} width = {10} stroke = {this.state.stroke2} fill = {this.state.stroke2}></rect>\n\n                  <text x = {150} y = {200}>Equal FPR</text>\n                  <text x = {450} y = {200}>Equal Accuracy</text>\n                  <text x = {55} y = {510}>0</text>\n                  <text x = {50} y = {470}>20</text>\n                  <text x = {50} y = {430}>40</text>\n                  <text x = {50} y = {390}>60</text>\n                  <text x = {50} y = {350}>80</text>\n                  <text x = {45} y = {310}>100</text>\n                  <text x = {450} y = {510}>0</text>\n                  <text x = {445} y = {470}>20</text>\n                  <text x = {445} y = {430}>40</text>\n                  <text x = {445} y = {390}>60</text>\n                  <text x = {445} y = {350}>80</text>\n                  <text style = {{size:8}} x = {440} y = {310}>100</text>\n                  {\n                    threeGraphs\n                    ? <text x = {185} y = {600}>100</text>\n\n                    : <text x = {45} y = {600}>100</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {640}>80</text>\n\n                    : <text x = {50} y = {640}>80</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {680}>60</text>\n\n                    : <text x = {50} y = {680}>60</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {720}>40</text>\n\n                    : <text x = {50} y = {720}>40</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {760}>20</text>\n\n                    : <text x = {50} y = {760}>20</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {790}>0</text>\n                    : <text x = {50} y = {800}>0</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {790}> </text>\n                    : <text x = {445} y = {600}>100</text>\n                  }\n                   {\n                    threeGraphs\n                    ? <text x = {190} y = {640}></text>\n\n                    : <text x = {452} y = {640}>80</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {680}></text>\n\n                    : <text x = {452} y = {680}>60</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {720}></text>\n\n                    : <text x = {452} y = {720}>40</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {190} y = {760}></text>\n\n                    : <text x = {452} y = {760}>20</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text x = {160} y = {790}> </text>\n                    : <text x = {460} y = {800}>0</text>\n                  }\n                  <text x = {200} y = {310}>Accuracy Rate</text>\n                  <text x = {625} y = {310}>False Positive Rate</text>\n                  {\n                    threeGraphs\n                    ? <text x = {380} y = {610}>Graph 3</text>\n                    : <text x = {200} y = {610}></text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text> </text>\n                    : <text x = {625} y = {610}></text>\n                  }\n                  <text x = {200} y = {310}></text>\n                  <text x = {625} y = {310}></text>\n                  {\n                    threeGraphs\n                    ? <text x = {380} y = {610}>Graph 3</text>\n                    : <text x = {200} y = {610}>Total Accuracy Rate</text>\n                  }\n                  {\n                    threeGraphs\n                    ? <text> </text>\n                    : <text x = {625} y = {610}>Total False Positive Rate</text>\n                  }\n\n                </svg>\n                <input type=\"range\" min={0} max={(this.state.rect1Arr.length)-1} \n              className=\"hist-slider\" onChange={this.onChange1}\n              name=\"sliderPos\" value={this.state.sliderPos} ref={this.sliderRef} list = \"tickmarks\"\n              style={{ width:300, left:635, top:590}}/>\n\n                </div>\n        );\n    }\n\n}\n\nexport default Tradeoff;","import React, { Component } from 'react';\nimport './TabList.css';\nimport '../TabBuilder/TabBuilder'\nimport TabBuilder from '../TabBuilder/TabBuilder'\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// ###TODO###: import your component here\nimport SliderTab from '../items/Slider/SliderTab';\nimport StaticText from '../items/StaticText/StaticText';\nimport NormalCurveResearch from '../items/NormalCurve/NormalCurveResearch';\nimport ThresholdResearch from '../items/ThresholdSlider/thresholdReasearch';\nimport Tradeoff from '../items/Tradeoff/tradeoff';\n\nimport { \n  sendFile,\n  getStudyInfo\n} from '../../actions/dataActions'\n\nconst axios = require('axios');\n\n// Allows Psych researchers to configure an experiment \nclass TabList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      children: [],\n      count: 0,\n      output: {},\n      deleted: [],\n      complete: false,\n      exptName: '',\n      files: [],\n      expt: {}\n    }\n    this.myRef = React.createRef();\n    this.submitRef = React.createRef();\n    this.nameRef = React.createRef();\n\n    this.builderFunction = this.builderFunction.bind(this);\n    this.importQuestion = this.importQuestion.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.delete = this.delete.bind(this);\n    this.getCount = this.getCount.bind(this);\n    this.outputCreate = this.outputCreate.bind(this);\n    this.checkOutput = this.checkOutput.bind(this);\n    this.configDataToItem = this.configDataToItem.bind(this);\n    this.saveFile = this.saveFile.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.appendToKeysArr = this.appendToKeysArr.bind(this);\n    this.checkValidInput = this.checkValidInput.bind(this);\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    this.props.getStudyInfo(username, studyName);\n    // console.log(this.props.location.state);\n    if (this.props.location.state != null) {\n      if (!this.props.location.state.newExpt) {\n        const thisExpt = this.props.location.state.exptName;\n        if (!this.props.experiments.length == 0) {\n          const exptObj =\n            this.props.experiments.find(item => item.exptName == thisExpt);\n          this.setState({ expt: exptObj });\n          const qKeys = Object.keys(exptObj).filter(key => key.charAt(0) == \"q\");\n          var qArr = [];\n          qKeys.forEach(key => qArr.push(exptObj[key]));\n          qArr.forEach(q => {\n            this.configDataToItem(q, true);\n            this.setState({ count: this.state.count += 1 });\n          });\n          console.log(\"finished rendering items\");\n        };\n      };\n    };\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  // ###TODO###: Add more cases here for TabList to display \n  //             Follow the format of the provided components below\n  /**\n   * Pushes more component to this.state so that render() can present\n   * individual components to the frontend\n   * @param {[String]} tabDefine [component name]\n   */\n  builderFunction = (tabDefine) => {\n    var arr = this.state.children;\n    switch (tabDefine) {\n      case \"slider\":\n        arr.push({ \n          id: this.state.count, \n          tab: <SliderTab getCount={this.getCount} \n                  delete={this.delete} count={this.state.count} \n                  handleChange={this.handleChange} \n                  key={this.state.count.toString()}\n                  appendToKeysArr={this.appendToKeysArr} /> \n        })\n        break;\n      case \"static-text\": \n        arr.push({\n          id: this.state.count,\n          tab: <StaticText getCount={this.getCount}\n                  delete={this.delete} count={this.state.count}\n                  handleChange={this.handleChange}\n                  key={this.state.count.toString()}/>\n        })\n        break;\n      case \"normal-curve\": \n        arr.push({\n          id: this.state.count,\n          tab: <NormalCurveResearch getCount={this.getCount} \n                  delete={this.delete} count={this.state.count} \n                  handleChange={this.handleChange} \n                  files={this.state.files} saveFile={this.saveFile}\n                  key={this.state.count.toString()}/> \n        })\n        break;  \n      case \"threshold\":\n        arr.push({\n          id: this.state.count,\n          tab: <ThresholdResearch getCount={this.getCount} \n                  delete={this.delete} count={this.state.count}\n                  handleChange={this.handleChange} \n                  files={this.state.files} saveFile={this.saveFile}\n                  key={this.state.count.toString()}/>\n        })\n        break;\n        case \"tradeoff\":\n          arr.push({\n            id: this.state.count,\n            tab: <Tradeoff getCount={this.getCount} \n                    delete={this.delete} count={this.state.count}\n                    handleChange={this.handleChange} \n                    files={this.state.files} saveFile={this.saveFile}\n                    key={this.state.count.toString()}/>\n          })\n          break;\n      case \"template\": \n        arr.push({\n          id: this.state.count,\n          tab: <template getCount={this.getCount} \n                  delete={this.delete} count={this.state.count} \n                  handleChange={this.handleChange} \n                  files={this.state.files} saveFile={this.saveFile}\n                  key={this.state.count.toString()}/> \n        })\n      default:\n        arr = <div>Unknown Element</div>\n    }\n\n    var curOutput = this.state.output;\n    curOutput[this.state.count.toString()] = { \"Type\": tabDefine };\n    var newCount = this.state.count + 1;\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });\n  }\n\n  /** ###TODO###: add more switch statements here when adding a new component\n   *  ###TODO###: the switch statement is not super necessary, pls improve\n   * Convert question type to its key in json\n   * @param {[String]} qType [question type]\n   */\n  mapQTypetoQKey(qType) {\n    switch(qType) {\n      case \"slider\":\n        return \"slider-question-key\"\n      case \"static-text\":\n        return \"static-text-key\"\n      case \"normal-curve\":\n        return \"normal-curve-question-key\"\n      case \"threshold\":\n        return \"threshold-key\"\n      default:\n        return \"\"\n    }\n  }\n\n  /**\n   * Grab question data based on questionKey and call configDataToItem\n   * to push selected component to this.state to be displayed with \n   * default values based on latest user input\n   * @param {[String]} exptName [experiment name]\n   * @param {[String]} questionKey [question key labeled by users for csvColName]\n   */\n  importQuestion(exptName, questionKey) {\n    const thisExpt = this.props.experiments.filter(item => \n      item[\"exptName\"] == exptName)[0];\n    const thisExptQKeys = Object.keys(thisExpt).filter(k => \n      k.charAt(0) == \"q\");\n    // the question key (e.g. q1) that user has selected\n    const thisQKey = thisExptQKeys.filter(k => {\n      const key = this.mapQTypetoQKey(thisExpt[k][\"Type\"]);\n      return thisExpt[k][key] == questionKey;\n    })[0];\n    const questionToDisplay = thisExpt[thisQKey];\n    // console.log(questionToDisplay);\n\n    // questions will show up once an expt type is pushed to this.state.children\n    // by configDataToItem\n    this.configDataToItem(questionToDisplay, false);\n  }\n\n  // ###### TODO ######: Add your component here\n  /**\n   * Push selected react component to this.state.children to be displayed \n   * Used when importing or editing question. \n   * @param {[Object]} question [a json object containing a question's data]\n   * @param {[Boolean]} editing [whether the component is displayed for \n   *                             \"Edit Experiment\" feature]\n   */\n  configDataToItem(question, editing) {\n    var arr = this.state.children;\n    switch (question[\"Type\"]) {\n      case \"slider\":\n        arr.push({ \n          id: this.state.count, \n          tab: <SliderTab \n                  defaultQ={question[\"Question\"]}\n                  defaultMin={question[\"lowRange\"]}\n                  defaultMax={question[\"highRange\"]}\n                  imported={true}\n                  editing={editing}\n                  getCount={this.getCount} \n                  delete={this.delete} count={this.state.count} \n                  handleChange={this.handleChange} \n                  key={this.state.count.toString()}\n                  appendToKeysArr={this.appendToKeysArr} /> \n        })\n        break;\n      case \"static-text\": \n        arr.push({\n          id: this.state.count,\n          tab: <StaticText \n                  qToDisplay={question}\n                  imported={true}\n                  editing={editing}\n                  getCount={this.getCount}\n                  delete={this.delete} count={this.state.count}\n                  handleChange={this.handleChange}\n                  key={this.state.count.toString()}/>\n        })\n        break;\n      case \"normal-curve\": \n        arr.push({\n          id: this.state.count,\n          tab: <NormalCurveResearch \n                  qToDisplay={question}\n                  imported={true}\n                  editing={editing}\n                  getCount={this.getCount} \n                  delete={this.delete} count={this.state.count} \n                  handleChange={this.handleChange} \n                  files={this.state.files} saveFile={this.saveFile}\n                  key={this.state.count.toString()}/> \n        })\n        break;  \n      case \"threshold\":\n        arr.push({\n          id: this.state.count,\n          tab: <ThresholdResearch getCount={this.getCount} \n                  delete={this.delete} count={this.state.count}\n                  handleChange={this.handleChange} \n                  files={this.state.files} saveFile={this.saveFile}\n                  key={this.state.count.toString()}/>\n        })\n        break;\n      case \"tradeoff\":\n        arr.push({\n          id: this.state.count,\n          tab: <Tradeoff getCount={this.getCount} \n                  delete={this.delete} count={this.state.count}\n                  handleChange={this.handleChange} \n                  files={this.state.files} saveFile={this.saveFile}\n                  key={this.state.count.toString()}/>\n        })\n        break;\n      default:\n        arr = <div>Unknown Element</div>\n    };\n\n    var curOutput = this.state.output;\n    curOutput[this.state.count.toString()] = { \"Type\": question[\"Type\"] };\n    var newCount = this.state.count + 1;\n    this.setState({ children: arr, count: newCount, output: curOutput, complete: false });    \n  }\n\n  /**\n   * Put / modify the key and value pair in the final output JSON object\n   * @param {[String]} key [key of json object to be updated]\n   * @param {[Any]} value [value to be added / modified]\n   * @param {[Number]} count [numerical order of the question json obj]\n   */\n  handleChange(key, value, count) {\n    var curOutput = this.state.output;\n    curOutput[count.toString()][key] = value;\n    this.setState({ output: curOutput });\n  }\n\n  // DEPRECATED method\n  // it's only applied to SliderTab which we don't use anymore\n  appendToKeysArr(objType, nameType, csvColName, count) {\n    var curOutput = this.state.output;\n    const objKeys = Object.keys(curOutput[count.toString()]);\n    // console.log(objKeys);\n    if (objKeys.includes(objType)) {\n      curOutput[count.toString()][objType][nameType] = csvColName;\n    } else {\n      curOutput[count.toString()][objType] = {};\n      curOutput[count.toString()][objType][nameType] = csvColName;\n    }\n    console.log(curOutput);\n    // curOutput[count.toString()][\"csvColNames\"]\n  }\n\n  /**\n   * Delete a question based on its numerical order\n   * @param {[Number]} id [ID of question to be deleted]\n   */\n  delete(id) {\n    var newDelete = this.state.deleted;\n    newDelete.push(id);\n    this.setState({ deleted: newDelete });\n  }\n\n  getCount(count) {\n    return count;\n  }\n\n  // Action: put newly uploaded files into this.state. \n  //         All newly uploaded files will be sent to database as JSON objs\n  saveFile(type, name, content) {\n    const newFile = {\n      \"itemType\": type,\n      \"fileName\": name,\n      \"fileContent\": content\n    };\n    this.setState({ files: this.state.files.concat(newFile) });\n  }\n\n  // validating input fields. \n  // ****** TODO ******\n  // improve this function such that it checks if user has entered valid inputs\n  checkOutput(obj) {\n    var int = 0;\n    var complete = true;\n    while ((int.toString()) in obj) {\n      var elem = obj[int.toString()];\n      switch (elem[\"Type\"]) {\n        case \"slider\":\n          var lowIs = \"lowRange\" in elem;\n          var highIs = \"highRange\" in elem;\n          var qIs = \"Question\" in elem;\n          if (lowIs && highIs && qIs) {\n            var lowNum = !isNaN(elem[\"lowRange\"]);\n            var highNum = !isNaN(elem[\"highRange\"]);\n            var highLow = parseInt(elem[\"highRange\"]) > parseInt(elem[\"lowRange\"]);\n            if (highLow && lowNum && highNum) {\n              complete = complete && true;\n            }\n            else {\n              complete = false;\n            }\n          }\n          else {\n            complete = false;\n          }\n          break;\n        default:\n          complete = false;\n      case \"normal-curve\":\n        complete = true;\n      }\n      int++;\n    }\n    return complete;\n  }\n\n  /**\n   * A function to check if user has put in required information\n   */\n  checkValidInput() {\n    if (this.nameRef.current.value == '') {\n      alert(\"Please enter the name of your experiment.\");\n      return false;\n    };\n    return true;\n  }\n\n  /**\n   * Create a final json object containing an experiment's config data\n   * and send the object to database\n   * @param {[Boolean]} newExpt [whether the experiment is new]\n   */\n  outputCreate(newExpt) {\n    var obj = {};\n    var index = {};\n    // the following block adds the mapping of cvs columns to question fields\n    this.state.children\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\n      .map((item) => { \n        obj[item.id.toString()] = this.state.output[item.id.toString()];\n        const exptItem = this.state.output[item.id.toString()];\n        switch (exptItem[\"Type\"]) {\n          case \"static-text\":\n            index[exptItem[\"static-text-key\"]] = exptItem[\"Static Text\"];\n          case \"normal-curve\":\n            index[exptItem[\"normal-curve-question-key\"]] = exptItem[\"Question\"];\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key1\"]] = exptItem[\"graph1key\"];\n            index[exptItem[\"normal-curve-question-key\"] + \".\" + exptItem[\"normal-curve-legend-key2\"]] = exptItem[\"graph2key\"];\n          case \"threshold\":\n            index[exptItem[\"threshold-key\"]] = exptItem[\"Question\"];\n          case \"tradeoff\":\n            index[exptItem[\"tradeoff-key\"]] = exptItem[\"Question\"];\n        }\n      });\n    // var validName = this.nameRef.current.value.length > 0;\n    // if (!(0 in obj) || !this.checkOutput(obj) || !validName) {\n    // if (!validName) {\n    if (this.checkValidInput()) {\n      var finalObj = {};\n      finalObj[\"exptName\"] = this.nameRef.current.value;\n      var int = 0;\n      while (int < this.state.count) {\n        if ((int.toString()) in obj) {\n          finalObj[\"q\" + int.toString()] = obj[int.toString()];\n        }\n        int++;\n      }\n      finalObj[\"count\"] = int;\n      delete index[\"undefined\"];\n      finalObj[\"index\"] = index;\n\n      console.log(finalObj);\n\n      const username = this.props.auth.user.username;\n      const studyName = this.props.match.params.studyName;\n\n      if (!this.state.files.length == 0) {\n        this.state.files.map(item => this.props.sendFile(username, item))\n      };\n\n      // If this experiment is new, PUT request to append to the \"experiments\"\n      // array associated with studyName in the studyName's file in \"/info\"\n      if (newExpt) {\n        axios\n        .put(\n          'https://test-api-615.herokuapp.com/api/feedback/' + username +\n          '/info/studyName-' + studyName + '/experiments',\n          finalObj\n        )\n        .then(res => {\n          console.log(res)\n        })\n        .then(function (response) {\n          alert(\"Your experiment has been successfully created\");\n          window.location.reload(false);\n        })\n        .catch(function (error) {\n          alert(\"Failed to create the survey\");\n          console.log(error);\n        });\n      } else {\n        // the experiment is not new -> the experiment is in \"Edit Experiment\"\n        // mode, so we need to query the specific exptName and update that \n        // element by deleting the old one and appending the new expt json obj\n        // to the \"experiments\" array associated with studyName\n        if (this.props.location.state != null) {\n          const exptName = this.props.location.state.exptName;\n          axios\n          .delete('https://test-api-615.herokuapp.com/api/feedback/' + \n            username + '/info/studyName-' + studyName + '/experiments/exptName-' +\n            exptName)\n          .then(res => {\n            axios\n            .put(\n              'https://test-api-615.herokuapp.com/api/feedback/' + username +\n              '/info/studyName-' + studyName + '/experiments',\n              finalObj\n            )\n            .then(res => {\n              console.log(res)\n            })\n            .then(function (response) {\n              alert(\"Your experiment has been successfully updated\");\n              window.location.reload(false);\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n          });\n        }\n        \n      }\n    }\n  }\n\n  render() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    const studyLink = \"/\" + username + \"/\" + studyName;\n\n    var obj = {};\n    this.state.children\n      .filter(item => this.state.deleted.indexOf(item.id) === -1)\n      .map((item) => { obj[item.id.toString()] = this.state.output[item.id.toString()] });\n    var finalObj = {};\n    // finalObj[\"exptName\"] = this.nameRef.current.value;\n    var int = 0;\n    while (int < this.state.count) {\n      if ((int.toString()) in obj) {\n        finalObj[\"q\" + int.toString()] = obj[int.toString()];\n      }\n      int++;\n    }\n    finalObj[\"count\"] = int;\n    return (\n      <div ref={this.myRef}>\n        <h2>Experiment Builder</h2>\n        Back to <p> </p>\n        <Link to={studyLink}>\n          {studyName}\n        </Link>\n        <div>\n          {/* <button onClick={() => console.log(this.state.children)}>see children</button> */}\n          <form action=\"/submit\" method=\"POST\" className=\"unit\">\n            <p>Enter a name for this experiment </p>\n            <input ref={this.nameRef}\n              // value={this.state.exptName}\n              // onChange={this.onChange}\n              defaultValue={this.state.expt.exptName}\n              type=\"text\" id=\"userid\" name=\"exptName\" /><br />\n            <b>all experiments in a study must have unique names</b>\n          </form>\n          {/* Display components in this.state.children */}\n          {\n            this.state.children\n              .filter(item => this.state.deleted.indexOf(item.id) === -1)\n              .map((item) => {\n                return item.tab;\n              })\n          }\n          <TabBuilder \n            build={this.builderFunction} \n            importQuestion={this.importQuestion}\n            username={this.props.match.params.username}\n            studyName={this.props.match.params.studyName} />\n          <br/>\n          {/* Add condition here. Submit / Update Experiment */}\n          {\n            this.props.location.state != null \n            ?\n            // based on whether researchers are creating a new experiment or\n            // editing an experiment, we show different buttons\n            <div>\n              {\n                this.props.location.state.newExpt\n                ?\n                <div className=\"extraPad\">\n                  <button onClick={() => this.outputCreate(true)} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\n                </div>\n                :\n                <div className=\"extraPad\">\n                  <button onClick={() => this.outputCreate(false)} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Update Experiment</button>\n                  <p style={{ opacity: 0 }}> place holder </p> \n                  <button className=\"btn\" onClick={() => this.props.history.push(studyLink)}>\n                    Cancel\n                  </button>\n                </div>\n              }\n            </div>\n            :\n            <div className=\"extraPad\">\n              <button onClick={() => this.outputCreate(true)} ref={this.submitRef} type=\"submit\" value=\"Submit\" className=\"btn\">Submit</button>\n            </div>\n          }\n        </div>\n        <br/>\n        {/* <button onClick={() => console.log(finalObj)}>Show finalObj</button><br/> */}\n        {/* <button onClick={() => console.log(this.state.files)}>Show files</button> */}\n      </div>\n    )\n  }\n}\n\nTabList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  dataFlowDBInfo: PropTypes.array.isRequired,\n  sendFile: PropTypes.func.isRequired,\n  dataFlowFileName: PropTypes.string.isRequired,\n  getStudyInfo: PropTypes.func.isRequired,\n  experiments: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  dataFlowDBInfo: state.dataFlow.dbInfo,\n  dataFlowFileName: state.dataFlow.fileName,\n  experiments: state.dataFlow.studyInfo\n});\n\n// export default TabList;\nexport default connect(\n  mapStateToProps,\n  { sendFile, getStudyInfo }\n)(TabList);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n/**\n * Navigation bar\n */\nclass Navbar extends Component {\n  render() {\n    const userIsLoggedIn = this.props.auth.isAuthenticated;\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link to=\"/\">\n              Home\n            </Link>\n            <br/>\n            {userIsLoggedIn ? '' : \n              <Link to=\"/register\">Register</Link>}\n            <br/>\n            {userIsLoggedIn ? \n              <Link to=\"/dashboard\"> Dashboard </Link> \n              : \n              <Link to=\"/login\">Login</Link>}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\n// export default Navbar;\nNavbar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n/**\n * Display researcher name on top of webpage\n */\nclass Landing extends Component {\n  componentWillMount() {\n  }\n\n  render() {\n    if (!this.props.auth.isAuthenticated) {\n      return (\n        <div className=\"container\">\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container\">\n          Scientist: <b>{this.props.auth.user.username}</b>\n        </div>\n      );\n    }\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Landing);\n\n// export default Landing;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>\n          Welcome to Psych Researcher App!\n          </h1>\n          Please click on this <p></p>\n        <a target=\"_blank\" href=\"https://github.com/statistical-perceptions/statistical-perceptions.github.io\">link</a> <p></p>\n          to view researcher user guide.\n      </div>\n    )\n  }\n}\n\nHomePage.propTypes = {\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(HomePage);\n\n// export default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nimport { registerUser } from \"../../actions/authActions\";\n\n/**\n * Register user\n */\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  };\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page,\n    // should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    };\n  };\n\n  /**\n   * Change entries in this.state\n   * @param {[Event]} e [An event that's subject to change]\n   */\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  /**\n   * Register user\n   * @param {[Event]} e [An event]\n   */\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const errors = this.state.errors;\n    return (\n      <div className=\"container\">\n        <h1>Register below</h1>\n        <p className=\"grey-text text-darken-1\">\n          Already have an account?\n        <Link to=\"/login\">Log in</Link>\n        </p>\n        <form noValidate onSubmit={this.onSubmit}>\n          Username:\n          <input\n            onChange={this.onChange}\n            value={this.state.username}\n            error={errors.username}\n            id=\"username\"\n            type=\"text\"\n            className={classnames(\"\", {\n              // userExists comes from res json message in API\n              invalid: errors.userExists\n            })} />\n          <span className=\"red-text\">{errors.userExists}</span>\n          <br />\n          <br />\n            Password:\n            <input\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n              invalid: errors.password})} />\n          <span className=\"red-text\">{errors.password}</span>\n          <br />\n          <br />\n            Confirm Password:\n            <input\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password2})} />\n          <span className=\"red-text\">{errors.password2}</span>\n          <br />\n          <br />\n          <button type=\"submit\" className=\"btn\">\n            Register\n          </button>\n        </form>\n      </div>\n    );\n  };\n};\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\n// map state from redux props to use inside components\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n// linking redux to Register component\n// withRouter makes it easy to redirect within a component\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\n/**\n * Login a user\n */\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n  };\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page,\n    // should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      // push user to dashboard when they login\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  /**\n   * Change entries in this.state\n   * @param {[Event]} e [An event that's subject to change]\n   */\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  /**\n   * Login user\n   * @param {[Event]} e [An event]\n   */\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    // we are redirecting wthin a component, so we don't need to\n    // pass in this.props.history\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const errors = this.state.errors;\n    return (\n      <div className=\"container\">\n        <h1>Log in</h1>\n        <form noValidate onSubmit={this.onSubmit}>\n          Username:\n          <input\n            onChange={this.onChange}\n            value={this.state.username}\n            error={errors.username}\n            id=\"username\"\n            type=\"text\"\n            className={classnames(\"\", {\n              invalid: errors.userNotFound\n              // || USERNAME NOT FOUND\n            })} />\n          <span className=\"red-text\">{errors.userNotFound}</span>\n          <br />\n          <br />\n          Password:\n          <input\n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            id=\"password\"\n            type=\"password\"\n            className={classnames(\"\", {\n              invalid: errors.pwdIncorrect\n            })} />\n          <span className=\"red-text\">{errors.pwdIncorrect}</span>\n          <br />\n          <br />\n          <input\n            type=\"submit\"\n            value=\"Log in\"\n            className=\"btn\" />\n        </form>\n      </div>\n    );\n  };\n};\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { logoutUser } from \"../../actions/authActions\";\n\nimport {\n  addStudyName,\n  getDBInfo\n} from \"../../actions/dataActions\";\n\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studyName: ''\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.onAddStudy = this.onAddStudy.bind(this);\n    this.onDeleteStudy = this.onDeleteStudy.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  /**\n   * load experiment names when the page loads\n   */\n  componentWillMount() {\n    const username = this.props.auth.user.username;\n    this.props.getDBInfo(username); // dbInfo will be in the store now\n  }\n\n  /**\n   * Return names of studies created by user\n   */\n  getStudyNames() {\n    const allInfo = this.props.dataFlowDBInfo;\n    return allInfo.map(item => {\n      const allKeys = Object.keys(item);\n      if (allKeys.includes(\"studyName\")) {\n        const username = this.props.auth.user.username;\n        const link = \"/\" + username + \"/\" + item.studyName;\n        return (\n          <div className=\"container\">\n            <p id={item.studyName}>\n              {item.studyName} <p> </p> \n              <Link to={link}>\n                View\n              </Link> <p> </p>\n              <button id={item.studyName} onClick={this.onDeleteStudy}>\n                Delete\n              </button>\n            </p>\n          </div>\n        )\n      }\n    });\n  }\n\n  /**\n   * Call addStudyName from redux actions\n   */\n  onAddStudy() {\n    const username = this.props.auth.user.username;\n    this.props.addStudyName(username, this.state.studyName);\n  };\n\n  /**\n   * DELETE request to remove collection named [studyName] and all other \n   * collections associated with [studyName]\n   * @param {[Event]} e [an event triggered by deleting a study]\n   */\n  onDeleteStudy(e) {\n    const username = this.props.auth.user.username;\n    const studyName = e.target.id;\n    var confirm = window.confirm(\"Are you sure you want to delete this\" + \n      \" study [\" + studyName + \"] and all its experiment data?\");\n    if (confirm) {\n      // delete the study doc in /info collection\n      axios\n        .delete('https://test-api-615.herokuapp.com/api/feedback/' + \n          username + '/info/studyName-' + studyName);\n      // delete all deployed experiment collections in user's database\n      axios\n        .delete('https://test-api-615.herokuapp.com/api/feedback/' + \n          username + \"/all\", { data: { studyName: studyName }})\n        .then(res => {\n          alert(\"You have succesfully deleted [\" + studyName + \"] and all\" + \n            \" its experiment data!\");\n          window.location.reload(true);\n        })\n    } else {\n      alert(\"Deletion cancelled!\");\n      window.location.reload(true);\n    }\n  }\n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const username = this.props.auth.user.username;\n    return (\n      <div className=\"container\">\n        <h2>Dashboard</h2>\n\n        {/* Deprecated, used to direct researchers to configure normal curve items on google colab */}\n        {/* <div className=\"boxed\" style={{ width: \"60%\", margin: \"auto\" }}>\n          <br/>\n          <b>Configure Experiment Types:</b> <br/>\n          <a href=\"https://colab.research.google.com/drive/1yleVQB_CrNJ5Z3v-YPatW2XqAD7yS8yp?usp=sharing\" target=\"_blank\">Normal Curves</a>\n          <div><br/></div>\n        </div> */}\n\n        <h3>Add a Study</h3>\n        Enter a name for your study: <br/>\n        <input type=\"text\" name=\"studyName\"\n          value={this.state.studyName} onChange={this.onChange} />\n        <button onClick={this.onAddStudy}>Add Study</button>\n        <br/>\n        Please do <b>not</b> use \"-\" in the name\n\n        <br/><br/>\n        <div className=\"boxed\" style={{ width: \"60%\", margin: \"auto\" }}>\n          <br />\n          {this.getStudyNames()}\n          <br />\n        </div>\n\n        <br/><br/>\n        <button\n          onClick={this.onLogoutClick}\n          className=\"btn\">\n          Logout\n        </button>\n        <div><br/><br/></div>\n      </div>\n    )\n  };\n};\n\nDashboard.propTypes = {\n  // Proptype.type, the type here must match initialState of reducer\n  logoutUser: PropTypes.func.isRequired,\n  addStudyName: PropTypes.func.isRequired,\n  getDBInfo: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  dataFlowDBInfo: PropTypes.array.isRequired\n};\n\n// interaction between reducer and store (state), connect to props \n// for components to use\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  dataFlowDBInfo: state.dataFlow.dbInfo\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, addStudyName, getDBInfo }\n)(Dashboard);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport {\n  getStudyInfo,\n  createExptCol,\n  getColNames,\n  saveAddInfo\n} from \"../../actions/dataActions\"\n\nimport axios from \"axios\";\n\n/**\n * Create, Edit, Manage experiments in a study\n */\nclass ConfigStudy extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: true,\n      deployed: Boolean\n    };\n\n    this.deployExpts = this.deployExpts.bind(this);\n    this.changeState = this.changeState.bind(this);\n    this.onDeploy = this.onDeploy.bind(this);\n    this.onChecked = this.onChecked.bind(this);\n    this.onDeleteExperiment = this.onDeleteExperiment.bind(this);\n  }\n\n  componentDidMount() {\n    const username = this.props.auth.user.username;\n    const studyName = this.props.match.params.studyName;\n    // Get whether studies in this experiment are randomized. \n    // variable is stored in the file containing studyName\n    axios\n      .get('https://test-api-615.herokuapp.com/api/feedback/' + username +\n        '/info/studyName-' + studyName)\n      .then(res => {\n        const dataToPut = {\n          \"randomize\": true\n        };\n        console.log(res.data);\n        // Deal with studies created by researchers before I implemented \n        // this randomize indicator\n        if (!Object.keys(res.data).includes(\"randomize\")) {\n          this.putRandomize(username, studyName, dataToPut);\n        } else {\n          this.setState({ checked: res.data.randomize });\n        };\n      });\n    this.props.getStudyInfo(username, studyName);\n    this.props.getColNames(username);\n    // if there are more than 1 experiment collections associated with the \n    // study, we mark the state of this experiment as { deployed : true }\n    // once deployed, researchers cannot turn on/off randomization\n    axios\n      .get('https://test-api-615.herokuapp.com/api/' + username + \"/collections\")\n      .then(res => {\n        const thisSudyDeployedExpt = res.data.filter(name => \n          name.split(\"-\")[0] == studyName);\n        this.setState({ deployed: thisSudyDeployedExpt.length >= 1 });\n      });\n  }\n\n  /**\n   * Get names of collections that are already deployed\n   */\n  processColNames() {\n    const studyName = this.props.match.params.studyName;\n    // const processedArr = this.props.colNames.filter(name => name !== \"info\");\n    // const currentStudyExpts = processedArr.filter(name =>\n    //   name.split('-')[0] == studyName);\n    const currentStudyExpts = this.props.colNames.filter(name =>\n      name.split('-')[0] == studyName);\n    const deployedExpts = currentStudyExpts.map(name => name.split('-')[1]);\n    return deployedExpts;\n  }\n\n  /**\n   * PUT request to update document w info\n   * @param {[String]} database_name [name of database to query]\n   * @param {[String]} study_name [study name to query]\n   * @param {[Object]} data [a json object that will be added to the document\n   *                         queried by study_name]\n   */\n  putRandomize(database_name, study_name, data) {\n    axios.put('https://test-api-615.herokuapp.com/api/feedback/' + \n      database_name + '/info/studyName-' + study_name, data);\n  }\n\n  /**\n   * Update document in database when users turn on/off randomization\n   */\n  onChecked() {\n    const nowState = !this.state.checked;\n    this.setState({ checked: !this.state.checked });\n    const username = this.props.auth.user.username;\n    const studyName = this.props.match.params.studyName;\n    const dataToPut = {\n      \"randomize\": nowState\n    }\n    this.putRandomize(username, studyName, dataToPut);\n  }\n\n  /**\n   * Return experiments in a study\n   */\n  getExpts() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n\n    const deployed = this.processColNames();\n    // check if the experiments are deployed \n    return this.props.experiments.map(expt => {\n      const exptName = expt.exptName;\n      const surveyLink = expt.link;\n\n      var condition;\n      if (expt.condition == null) {\n        condition = \"N/A\";\n      } else {\n        condition = expt.condition;\n      }\n\n      const exptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\n        exptName + \"/configs\";\n      const partExptDataLink = \"/\" + username + \"/\" + studyName + \"/\" +\n        exptName + \"/participantsExptData\";\n      const exptPartLink = \"https://statistical-perceptions.github.io/\" + \n        \"participant-app/#/participant-app/expt/\" + username + \n          \"/\" + studyName + \"-\" + exptName\n      const previewLink = \"https://statistical-perceptions.github.io/\" + \n      \"participant-app/#/participant-app/preview/\" + username + \n        \"/\" + studyName + \"-\" + exptName\n      const dbLink = \"https://test-api-615.herokuapp.com/api/feedback/\" + \n        username + \"/\" + studyName + \"-\" + exptName\n      const exptBuilderLink = \"/\" + username + \"/\" +\n        studyName + \"/exptBuilder\";\n\n      if (deployed.includes(exptName)) {\n        return (\n          <div className=\"container\">\n            <div className=\"boxed\">\n              <b>{expt.exptName}</b> <br/>\n              <a target=\"_blank\" href={previewLink}>\n                Preview Experiment\n              </a> <br/><br/>\n              <Link to={exptDataLink}>\n                <button type=\"button\">\n                  Experiment Configs\n                </button>\n              </Link> <p> </p>\n              <Link to={partExptDataLink}>\n                <button type=\"button\">\n                  View Participants Data\n                </button>\n              </Link> <p> </p> \n              <br/><br/>\n              <button id={expt.exptName} onClick={this.onDeleteExperiment}>\n              Delete this Experiment\n              </button>\n              <br/><br/>\n              Condition: <b>{condition}</b>\n              <br/><br/>\n              <b>Database Link:</b><br/>\n              {dbLink} <br/>\n              <CopyToClipboard text={dbLink}>\n                <button \n                  onClick={() => \n                    alert(\"Database link has been copied to clipboard. \" + \n                      \"Paste it into your Qualtrics survey :)\")}>\n                  Copy experiment link to clipboard\n                </button>\n              </CopyToClipboard>\n              <br/><br/>\n              <b>Experiment Link:</b> <br/>\n              {exptPartLink} <br/>\n              <CopyToClipboard text={exptPartLink}>\n                <button \n                  onClick={() => \n                    alert(\"Experiment link has been copied to clipboard. \" + \n                      \"Paste it into your Qualtrics survey :)\")}>\n                  Copy experiment link to clipboard\n                </button>\n              </CopyToClipboard>\n              <br/><br/>\n              <b>Qualtrics Demographics Survey Link:</b> <br/>\n              {surveyLink} <br/>\n              <CopyToClipboard text={surveyLink}>\n                <button \n                  onClick={() => \n                    alert(\"Qualtrics Survey link has been copied to clipboard. \" + \n                      \"Paste it into your Qualtrics survey :)\")}>\n                  Copy experiment link to clipboard\n                </button>\n              </CopyToClipboard>\n            </div>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <div className=\"boxed\">\n            Experiment: <b>{expt.exptName}</b><br/><br/>\n            {/* <Link to={exptDataLink}>\n              <button type=\"button\">\n                Configurations\n              </button>\n            </Link> <p> </p> */}\n            {/* We are passing info to the link so that TabList.js knows */}\n            {/* that we are in editing mode */}\n            <Link to={{\n                pathname: exptBuilderLink,\n                state: {\n                  newExpt: false,\n                  exptName: exptName  \n                }\n              }}>\n              <button type=\"button\">\n                Edit Experiment\n              </button>\n            </Link>\n            {/* <br/><br/> */}\n            <p> </p>\n            <button id={expt.exptName} onClick={this.onDeleteExperiment}>\n            Delete this Experiment\n            </button>\n            <br/><br/>\n            <b>Experiment Link:</b><br/>\n            {exptPartLink} <br/>\n            <CopyToClipboard text={exptPartLink}>\n              <button \n                onClick={() => \n                  alert(\"Experiment link has been copied to clipboard. \" + \n                    \"Paste it into your Qualtrics survey :)\")}>\n                Copy experiment link to clipboard\n              </button>\n            </CopyToClipboard>\n            <br/><br/>\n            <b>Database Link:</b><br/>\n            {dbLink} <br/>\n            <CopyToClipboard text={dbLink}>\n              <button \n                onClick={() => \n                  alert(\"Database link has been copied to clipboard. \" + \n                    \"Paste it into your Qualtrics survey :)\")}>\n                Copy experiment link to clipboard\n              </button>\n            </CopyToClipboard>\n            <br/><br/>\n            <b>TODO</b> <br/>\n            Paste the link to demographics qualtrics survey below: <br/>\n            <textarea cols=\"60\" rows=\"1\" id={exptName + \"link\"}\n              onInput={this.changeState} value={this.state.exptName}></textarea>\n            <br/><br/>\n            {\n              this.state.checked\n              ? <div>\n                <b>TODO</b> <br/>\n                Name the condition of this experiment: <br/>\n                <textarea cols=\"60\" rows=\"1\" id={exptName + \"condition\"}\n                  onInput={this.changeState} value={this.state.condition}></textarea>\n                <br/>\n              </div>\n              : <div></div>\n            }\n            <br/>\n            {/* <button onClick={() => console.log(this.state)}>Show State</button><br/> */}\n            <button id={exptName} onClick={this.onDeploy}> \n              <b>DEPLOY</b>\n            </button>\n            <br/>\n          </div>\n          </div>\n        )\n      };\n    })\n  }\n\n  changeState(e) {\n    this.setState({ [e.target.id]: e.target.value });\n  }\n\n  /**\n   * Delte both expt data stored in /info and expt collection that stores \n   * participant data\n   * @param {[Event]} e [an event triggered by users to delete an expt]\n   */\n  onDeleteExperiment(e) {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    const exptName = e.target.id;\n    var confirm = window.confirm(\"Are you sure you want to delete this\" +\n      \" experiment [\" + exptName + \"] (and all its participant data)?\");\n    if (confirm) {\n      // first delete expt config from /info\n      axios\n      .delete('https://test-api-615.herokuapp.com/api/feedback/' + \n        username + '/info/studyName-' + studyName + '/experiments/exptName-' +\n        exptName)\n      .then(res => {\n        // then delete participant data collection\n        axios\n          .delete('https://test-api-615.herokuapp.com/api/feedback/' + \n            username + \"/one\", {data: {colName: studyName + \"-\" + exptName}})\n          .then(res => {\n            alert(\"You have successfully deleted [\" + exptName + \n              \"] and all its data!\");\n            window.location.reload(true);\n          })\n      });\n    } else {\n      alert(\"Deletion cancelled!\");\n      window.location.reload(true);\n    }\n  }\n\n  /**\n   * Modify expt data associated with studyName file stored in /info \n   * and create a new collectino to store participant data\n   * @param {[Event]} e [an event triggered by user deploying an expt]\n   */\n  onDeploy(e) {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n\n    var exptName;\n    if (e.currentTarget != null) {\n      exptName = e.currentTarget.id;\n    } else {\n      exptName = e;\n    };\n    console.log(exptName);\n\n    const link = this.state[exptName + \"link\"];\n    const condition = this.state[exptName + \"condition\"];\n\n    // process condition first\n    var conditionInfo;\n    if (condition == null) {\n      conditionInfo = { \"condition\": \"N/A\" };\n    } else {\n      conditionInfo = { \"condition\": condition };\n    }\n    // this.props.saveAddInfo(username, studyName, exptName, \"condition\", conditionInfo);\n\n    // NEED TO CLEAN THIS UP \n    // i only used axios here for debugging\n    // PUT requests to add condition and link data to a specific experiment in \n    // the \"experiments array\" associated with studyName\n    axios\n      .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \n           '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'condition',\n           conditionInfo)\n      .then(res => {\n        var linkToSend;\n        if (this.state.checked) {\n          linkToSend = link + \"?condition=\" + condition\n        } else {\n          linkToSend = link;\n        }\n        const linkInfo = { \"link\": linkToSend };\n        axios\n          .put('https://test-api-615.herokuapp.com/api/feedback/' + username + \n               '/info/studyName-' + studyName + '/experiments/exptName-' + exptName + '/' + 'link',\n               linkInfo)\n          .then(res => {\n            // create a new collection in user's database\n            this.props.createExptCol(username, studyName + \"-\" + exptName, exptName);\n          })\n      })\n  }\n\n  // for now deployment simply creates a collection for each experiment \n  // that would later store participants data\n  deployExpts() {\n    const username = this.props.auth.user.username;\n    const studyName = this.props.match.params.studyName;\n\n    const deployed = this.processColNames();\n    const exptNames = this.props.experiments.map(item => item.exptName);\n    const difference = exptNames.filter(name => !deployed.includes(name));\n    difference.forEach(expt_name => {\n      this.props.createExptCol(username, studyName + \"-\" + expt_name, expt_name);\n    });\n  }\n\n  /**\n   * Footer to show different deployment buttons based on deployment status\n   */\n  deploy() {\n    const deployed = this.processColNames();\n    const exptNames = this.props.experiments.map(item => item.exptName);\n    const difference = exptNames.filter(name => !deployed.includes(name));\n    if (exptNames.length == 0) {\n      return (\n        <div className=\"container\">\n          <p style={{ color: \"grey\" }}>\n            No experiments.\n          </p>\n        </div>\n      )\n    } else if (difference.length == 0) {\n      return (\n        <div className=\"container\">\n          <p style={{ color: \"grey\" }}>\n            All experiments are deployed.\n          </p>\n        </div>\n      )\n    } else if (difference.length >= 0) {\n      return (\n        <div className=\"container\">\n          <button style={{ padding: \"12px 28px\" }}\n          onClick={() => difference.forEach(name => this.onDeploy(name))}>\n            <b>Deploy All Experiments</b>\n          </button>\n          <br/>\n          <br/>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    const exptBuilderLink = \"/\" + username + \"/\" +\n      studyName + \"/exptBuilder\";\n\n    const deployed = this.processColNames();\n    const exptNames = this.props.experiments.map(item => item.exptName);\n\n    const partStudyDataLink = \"/\" + username + \"/\" + studyName + \"/participantsStudyData\";\n    return (\n      <div className=\"container\">\n        <h2>Study: {this.props.match.params.studyName}</h2>\n        <Link to={{\n          pathname: exptBuilderLink,\n          state: {\n              newExpt: true\n            }\n          }}>\n          <button>\n            Build an Experiment\n          </button>\n        </Link>\n        <p> </p>\n        <Link to={partStudyDataLink}>\n          <button>\n            View All Participant Data\n          </button>\n        </Link>\n        <h3>\n          Your Experiments\n        </h3>\n        {\n          this.state.deployed\n          ? <div></div>\n          : <div>\n              <input type=\"checkbox\" onChange={this.onChecked} checked={this.state.checked}/>\n                I want to randomize experiments in this study\n              <br/>\n          </div>\n        }\n        {\n          this.state.checked \n          ? <div>\n            You have chosen to randomize experiments in this study.\n          </div>\n          : <div>\n            You have chosen not to randomize experiments in this study. \n            <br/>\n          </div>\n        }\n        <br/>\n        {this.getExpts()}\n        <br /><br />\n        {this.deploy()}\n        <br />\n        {/* <button onClick={() => console.log(this.props.experiments)}>show state</button> */}\n      </div>\n    )\n  }\n}\n\nConfigStudy.propTypes = {\n  // Proptype.type, the type here must match initialState of reducer\n  auth: PropTypes.object.isRequired,\n  getStudyInfo: PropTypes.func.isRequired,\n  experiments: PropTypes.array.isRequired,\n  createExptCol: PropTypes.func.isRequired,\n  getColNames: PropTypes.func.isRequired,\n  colNames: PropTypes.array.isRequired,\n  saveAddInfo: PropTypes.func.isRequired\n};\n\n// interaction between reducer and store (state), connect to props \n// for components to use\n// props: state\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  // experiments refer to the experiment configurations \n  // stored in collection [info] under the user's database\n  experiments: state.dataFlow.studyInfo,\n  colNames: state.dataFlow.colNames\n});\n\nexport default connect(\n  mapStateToProps,\n  { getStudyInfo, createExptCol, getColNames, saveAddInfo }\n)(ConfigStudy);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getStudyInfo\n} from \"../../actions/dataActions\"\n\n/**\n * Shows experiment configurations\n * TODO: Improve this component so that data presentation looks better\n */\nclass ExptConfigs extends Component {\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    this.props.getStudyInfo(username, studyName);\n  }\n\n  /**\n   * Get experiment config data (obj) from redux store and show it as a string\n   */\n  showExptData() {\n    const thisExpt = this.props.match.params.exptName;\n    if (!this.props.experiments.length == 0) {\n      const exptObj =\n        this.props.experiments.find(item => item.exptName == thisExpt);\n      const JSONString = JSON.stringify(exptObj);\n      return (\n        <div>\n          {JSONString}\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    const studyLink = \"/\" + username + \"/\" + studyName;\n    return (\n      <div className=\"container\">\n        <h2>Experiment: {this.props.match.params.exptName}</h2>\n        Back to <p> </p>\n        <Link to={studyLink}>\n          {studyName}\n        </Link>\n        <br /><br />\n        <b>Configuration data: </b>\n        <br /><br />\n        {this.showExptData()}\n      </div>\n    )\n  }\n}\n\nExptConfigs.propTypes = {\n  // Proptype.type, the type here must match initialState of reducer\n  getStudyInfo: PropTypes.func.isRequired,\n  experiments: PropTypes.array.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\n// interaction between reducer and store (state), connect to props \n// for components to use\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  experiments: state.dataFlow.studyInfo\n});\n\nexport default connect(\n  mapStateToProps,\n  { getStudyInfo }\n)(ExptConfigs);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSVLink } from \"react-csv\";\nimport axios from \"axios\";\n\nimport {\n  getColNames,\n  getColsData,\n  getStudyInfo\n} from \"../../actions/dataActions\"\n\nimport \"./PartData.css\";\n\n/**\n * Shows participant data for a specific study\n */\nclass PartStudyData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.makeArr = this.makeArr.bind(this);\n    this.showJSONData = this.showJSONData.bind(this);\n    this.getIndex = this.getIndex.bind(this);\n  }\n\n  /**\n   * Get participant data from all collections associated with this study\n   */\n  componentWillMount() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    axios\n      .get('https://test-api-615.herokuapp.com/api/' + username + \"/collections\")\n      .then(res => {\n        const nameArr = res.data;\n        // ****** TODO ******\n        // improve this query method so it's safer than .includes\n        const partColNames = nameArr.filter(name => \n          name != \"info\" && name != \"itemData\" && name.includes(studyName));\n        console.log(partColNames);\n        partColNames.map(colName => this.props.getColsData(username, colName));\n        this.props.getStudyInfo(username, studyName);\n    })\n  }\n\n  /**\n   * Flatten the object such that all data lives \"flat\" on the first level\n   * @param {[Object]} obj [a json object containing an indivual participant's\n   *                        experiment data]\n   */\n  flattenObj(obj) {\n    var flattendObj = {};\n    const flattenObject = (obj, keyName) => {\n      Object.keys(obj).forEach(key => {\n        var newKey = `${keyName}.${key}` \n        if (typeof obj[key] === \"object\") {\n          // calling the function again\n          flattenObject(obj[key], newKey);\n        } else {\n          flattendObj[newKey] = obj[key];\n        }\n      });\n    };\n    flattenObject(obj, \"\");\n\n    function renameKey (obj, oldKey, newKey) {\n      obj[newKey] = obj[oldKey];\n      delete obj[oldKey];\n    }\n\n    const allKeys = Object.keys(flattendObj);\n    allKeys.map(k => {\n      const oldKey = k;\n      const newKey = oldKey.substr(1, oldKey.length);\n      renameKey(flattendObj, oldKey, newKey)\n    })\n\n    return flattendObj;\n  } \n\n  /**\n   * Make an array where each entry is a flat json Object containing an \n   * individual participant's experiment data\n   */\n  makeArr() {\n    if (!Object.keys(this.props.colsData).length == 0) {\n      // console.log(this.props.colData);\n      var arr = [];\n      var ids = [];\n      const arrToProcess = this.props.colsData;\n      // console.log(arrToProcess);\n      arrToProcess.forEach(item => {\n        const id = item.participantID;\n        const keysInItem = Object.keys(item);\n        const qKeys = \n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\n        \n        if (ids.includes(id)) {\n          // find that id in arr and update the item\n          arr.forEach(ele => {\n            if (ele.participantID == id) {\n              const prevData = ele;\n              qKeys.forEach(k => prevData[k] = item[k]);\n              ele = prevData;\n            }\n          })\n        } else {\n          // make a new item, put it in arr, and put id in ids \n          const doc = {};\n          doc[\"participantID\"] = id;\n          qKeys.forEach(k => doc[k] = item[k]);\n          arr.push(doc);\n          ids.push(id);\n          // console.log(doc);\n        }\n      })\n      // arr.map(ele => ele = this.flattenObj(ele));\n      arr.map(ele => {\n        const newEle = this.flattenObj(ele);\n        const i = arr.indexOf(ele);\n        arr[i] = newEle;\n      });\n      return arr;\n    }\n  }\n\n  /**\n   * Convert json objects to string and present them\n   */\n  showJSONData() {\n    const arr = this.makeArr();\n    if (arr != null) {\n      return arr.map(ele => {\n        const line = JSON.stringify(ele);\n        return (\n          <div>\n            <br/>\n            {line}\n          </div>\n        )\n      })\n    }\n  }\n\n  /**\n   * Method to export csv file containing participant data for this study\n   */\n  getIndex() {\n    const studyName = this.props.match.params.studyName;\n    if (!this.props.experiments.length == 0) {\n      var allIndex = [];\n      this.props.experiments.map(item => {\n        allIndex.push(item[\"index\"]);\n      });\n\n      let str = \"\";\n      allIndex.map(item => {\n        const objKeys = Object.keys(item);\n        objKeys.map(key => {\n          const line = key.toString() + \": \" + item[key].toString() + \"\\n\"\n          str += line;\n        });\n      });\n\n      const element = document.createElement(\"a\");\n      const file = new Blob([str], {type: 'text/plain'});\n      element.href = URL.createObjectURL(file);\n      element.download = studyName + \"Legend.txt\";\n      document.body.appendChild(element); \n      element.click();\n      console.log(file);\n    }\n  }\n\n  render() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    const studyLink = \"/\" + username + \"/\" + studyName;\n    const file_name = username + \"_\" + studyName + \"_data.csv\";\n    const arr = this.makeArr();\n    if (arr != null) {\n      return (\n        <div>\n          <h2>All Participant Data from Study: {studyName}</h2>\n          Back to <p> </p>\n          <Link to={studyLink}>\n            {studyName}\n          </Link>\n          <br /><br />\n          <button>\n            <CSVLink data={arr} filename={file_name}>\n              Download Data as CSV\n            </CSVLink>\n          </button>\n          <br/><br/>\n          <button onClick={this.getIndex}>Download Legend</button>\n          {this.showJSONData()}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <h2>All Participant Data from Study: {studyName}</h2>\n          Back to <p> </p>\n          <Link to={studyLink}>\n            {studyName}\n          </Link>\n          <br /><br />\n          It seems like there's no participant data yet... \n        </div>\n      )\n    }\n    \n  }\n}\n\nPartStudyData.propTypes = {\n  // Proptype.type, the type here must match initialState of reducer\n  getColsData: PropTypes.func.isRequired,\n  getColNames: PropTypes.func.isRequired,\n  colsData: PropTypes.array.isRequired,\n  auth: PropTypes.object.isRequired,\n  colNames: PropTypes.array.isRequired,\n  getStudyInfo: PropTypes.func.isRequired,\n  experiments: PropTypes.array.isRequired\n};\n\n// interaction between reducer and store (state), connect to props \n// for components to use\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  colsData: state.dataFlow.colsData,\n  colNames: state.dataFlow.colNames,\n  experiments: state.dataFlow.studyInfo\n});\n\nexport default connect(\n  mapStateToProps,\n  { getColNames, getColsData, getStudyInfo }\n)(PartStudyData);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSVLink } from \"react-csv\";\n\nimport {\n  getColData,\n  getStudyInfo\n} from \"../../actions/dataActions\"\n\nimport \"./PartData.css\";\n\n/**\n * Shows participant data for a specific experiment\n */\nclass PartExptData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // finalObj: {}\n    };\n\n    this.makeArr = this.makeArr.bind(this);\n    this.showJSONData = this.showJSONData.bind(this);\n    this.getIndex = this.getIndex.bind(this);\n  }\n\n  componentWillMount() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    const exptName = this.props.match.params.exptName;\n    const colName = studyName + \"-\" + exptName;\n    this.props.getColData(username, colName);\n    this.props.getStudyInfo(username, studyName);\n  }\n\n  /**\n   * Flatten the object such that all data lives \"flat\" on the first level\n   * @param {[Object]} obj [a json object containing an indivual participant's\n   *                        experiment data]\n   */\n  flattenObj(obj) {\n    var flattendObj = {};\n    const flattenObject = (obj, keyName) => {\n      Object.keys(obj).forEach(key => {\n        var newKey = `${keyName}.${key}` \n        if (typeof obj[key] === \"object\") {\n          // recursive call\n          flattenObject(obj[key], newKey);\n        } else {\n          flattendObj[newKey] = obj[key];\n        }\n      });\n    };\n    flattenObject(obj, \"\");\n\n    function renameKey (obj, oldKey, newKey) {\n      obj[newKey] = obj[oldKey];\n      delete obj[oldKey];\n    }\n\n    const allKeys = Object.keys(flattendObj);\n    allKeys.map(k => {\n      const oldKey = k;\n      const newKey = oldKey.substr(1, oldKey.length);\n      renameKey(flattendObj, oldKey, newKey)\n    })\n\n    return flattendObj;\n  } \n\n  /**\n   * Make an array where each entry is a flat json Object containing an \n   * individual participant's experiment data\n   */\n  makeArr() {\n    if (!Object.keys(this.props.colData).length == 0) {\n      var arr = [];\n      var ids = [];\n      const arrToProcess = this.props.colData;\n      arrToProcess.forEach(item => {\n        const id = item.participantID;\n        const keysInItem = Object.keys(item);\n        // switch statement here\n        const qKeys = \n          keysInItem.filter(k => k != \"participantID\" && k != \"_id\");\n        \n        if (ids.includes(id)) {\n          // find that id in arr and update the item\n          arr.forEach(ele => {\n            if (ele.participantID == id) {\n              const prevData = ele;\n              qKeys.forEach(k => prevData[k] = item[k]);\n              ele = prevData;\n            }\n          })\n        } else {\n          // make a new item, put it in arr, and put id in ids \n          const doc = {};\n          doc[\"participantID\"] = id;\n          qKeys.forEach(k => doc[k] = item[k]);\n          arr.push(doc);\n          ids.push(id);\n          // console.log(doc);\n        }\n      })\n      // arr.map(ele => ele = this.flattenObj(ele));\n      arr.map(ele => {\n        const newEle = this.flattenObj(ele);\n        const i = arr.indexOf(ele);\n        arr[i] = newEle;\n      });\n      return arr;\n    }\n  }\n\n  /**\n   * Convert json objects to string and present them\n   */\n  showJSONData() {\n    const arr = this.makeArr();\n    if (arr != null) {\n      return arr.map(ele => {\n        const line = JSON.stringify(ele);\n        return (\n          <div>\n            <br/>\n            {line}\n          </div>\n        )\n      })\n    }\n  }\n\n  /**\n   * Method to export csv file containing participant data for this expt\n   */\n  getIndex() {\n    const exptName = this.props.match.params.exptName;\n    if (!this.props.experiments.length == 0) {\n      const thisExpt = \n      this.props.experiments\n        .filter(item => item[\"exptName\"] == this.props.match.params.exptName)[0]\n      const index = thisExpt[\"index\"];\n\n      let str = \"\"\n      const objKeys = Object.keys(index);\n      objKeys.map(key => {\n        const line = key.toString() + \": \" + index[key].toString() + \"\\n\"\n        str += line;\n      });\n\n      const element = document.createElement(\"a\");\n      const file = new Blob([str], {type: 'text/plain'});\n      element.href = URL.createObjectURL(file);\n      element.download = exptName + \"Legend.txt\";\n      document.body.appendChild(element); \n      element.click();\n      console.log(file);\n    }\n  }\n\n  render() {\n    const username = this.props.match.params.username;\n    const studyName = this.props.match.params.studyName;\n    const exptName = this.props.match.params.exptName;\n    const studyLink = \"/\" + username + \"/\" + studyName;\n    const file_name = username + \"_\" + studyName + \"_\" + exptName + \"_data.csv\";\n    const arr = this.makeArr();\n    if (arr != null) {\n      console.log(arr);\n      return (\n        <div>\n          <h2>Experiment: {exptName}</h2>\n          Back to <p> </p>\n          <Link to={studyLink}>\n            {studyName}\n          </Link>\n          <br/>\n          <h4>Participants data: </h4> \n          <button>\n            <CSVLink data={arr} filename={file_name}>\n              Download Data as CSV\n            </CSVLink>\n          </button>\n          <br/><br/>\n          <button onClick={this.getIndex}>Download Legend</button><br/>\n          \n          <div>\n            {this.showJSONData()}\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <h2>Experiment: {this.props.match.params.exptName}</h2>\n          Back to <p> </p>\n          <Link to={studyLink}>\n            {studyName}\n          </Link>\n          <br/><br/>\n          It seems like there's no participant data yet...\n        </div>\n      )\n    }\n  }\n}\n\nPartExptData.propTypes = {\n  // Proptype.type, the type here must match initialState of reducer\n  getColData: PropTypes.func.isRequired,\n  colData: PropTypes.array.isRequired,\n\n  getStudyInfo: PropTypes.array.isRequired,\n  experiments: PropTypes.array.isRequired,\n\n  auth: PropTypes.object.isRequired\n};\n\n// interaction between reducer and store (state), connect to props \n// for components to use\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  colData: state.dataFlow.colData,\n  experiments: state.dataFlow.studyInfo\n});\n\nexport default connect(\n  mapStateToProps,\n  { getColData, getStudyInfo }\n)(PartExptData);","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, BrowserRouter, HashRouter } from \"react-router-dom\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport TabList from './components/TabList/TabList';\n\nimport NavBar from './components/layout/NavBar';\nimport Landing from './components/layout/Landing';\nimport HomePage from './components/layout/HomePage';\n\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login'\n\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ConfigStudy from './components/Study/ConfigStudy';\nimport ExptConfigs from './components/Study/ExptConfigs';\nimport PartStudyData from './components/Study/PartStudyData';\nimport PartExptData from './components/Study/PartExptData';\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter basename=\"/survey-builder/\">\n        <div className=\"App\">\n          < NavBar />\n          <br/>\n          < Landing />\n          < Route exact path=\"/\" component={HomePage} />\n          < Route exact path=\"/register\" component={Register} />\n          < Route exact path=\"/login\" component={Login} />\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/:username/:studyName\"\n              component={ConfigStudy} />\n            <PrivateRoute exact path=\"/:username/:studyName/exptBuilder\"\n              component={TabList} />\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/configs\"\n              component={ExptConfigs}/>\n            <PrivateRoute exact path=\"/:username/:studyName/participantsStudyData\"\n              component={PartStudyData}/>\n            <PrivateRoute exact path=\"/:username/:studyName/:exptName/participantsExptData\"\n              component={PartExptData}/>\n          </Switch>\n        </div>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}